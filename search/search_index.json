{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Selekt is a Kotlin and familiar Android wrapper over the community edition of SQLCipher, an SQLite extension that provides 256-bit AES encryption of database files. Selekt realises the maximum concurrency offered by SQLite3: When enabled for WAL-journal mode, \"readers do not block writers and a writer does not block readers. Reading and writing can proceed concurrently.\" Licenses Selekt Copyright 2021 Bloomberg Finance L.P. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at https://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. SQLCipher Copyright (c) 2008, ZETETIC LLC All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * Neither the name of the ZETETIC LLC nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY ZETETIC LLC ''AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ZETETIC LLC BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"Overview"},{"location":"#licenses","text":"","title":"Licenses"},{"location":"#selekt","text":"Copyright 2021 Bloomberg Finance L.P. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at https://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"Selekt"},{"location":"#sqlcipher","text":"Copyright (c) 2008, ZETETIC LLC All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * Neither the name of the ZETETIC LLC nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY ZETETIC LLC ''AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL ZETETIC LLC BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"SQLCipher"},{"location":"getting_started/","text":"Integration Gradle Kotlin repositories { mavenCentral () } dependencies { implementation ( \"com.bloomberg:selekt-android:0.14.0\" ) } Groovy repositories { mavenCentral () } dependencies { implementation 'com.bloomberg:selekt-android:0.14.0' } Getting a database Using an open helper Kotlin object MyOpenHelperCallback : ISQLiteOpenHelper . Callback { override fun onCreate ( database : SQLiteDatabase ) { database . exec ( \"CREATE TABLE 'Foo' (bar INT)\" ) } override fun onUpgrade ( database : SQLiteDatabase , oldVersion : Int , newVersion : Int ) { TODO ( \"Migrate database.\" ) } } private fun deriveKey (): ByteArray? = TODO ( \"Optional key, must be exactly 32-bytes long.\" ) val databaseHelper = SQLiteOpenHelper ( context = context . applicationContext , configuration = ISQLiteOpenHelper . Configuration ( callback = MyOpenHelperCallback , key = deriveKey (), name = \"sample\" ), version = 3 ) Java class MyOpenHelperCallback implements ISQLiteOpenHelper . Callback { @Override public void onCreate ( final SQLiteDatabase database ) { database . exec ( \"CREATE TABLE 'Foo' (bar INT)\" ) } @Override public void onUpgrade ( final SQLiteDatabase database , final int oldVersion , final int newVersion ) { // TODO Migrate database. } } private byte [] deriveKey () { // TODO Optional key, must be exactly 32-bytes long. } final SQLiteOpenHelper databaseHelper = new SQLiteOpenHelper ( context . applicationContext , 3 , new ISQLiteOpenHelper . Configuration ( MyOpenHelperCallback , deriveKey (), \"sample\" ) ); Using Room Kotlin private fun deriveKey (): ByteArray? = TODO ( \"Optional key, must be exactly 32-bytes long.\" ) provate val factory = createSupportSQLiteOpenHelperFactory ( SQLiteJournalMode . WAL , deriveKey () ) val database = Room . databaseBuilder ( context , MyAppDatabase :: class . java , \"app\" ) . openHelperFactory ( factory ) . build () Java private byte [] deriveKey () { // TODO Optional key, must be exactly 32-bytes long. } provate SupportSQLiteOpenHelper . Factory factory = SupportSQLiteOpenHelperKt . createSupportSQLiteOpenHelperFactory ( SQLiteJournalMode . WAL , deriveKey ()); final RoomDatabase database = Room . databaseBuilder ( context , MyAppDatabase . class , \"app\" ). openHelperFactory ( factory ) . build (); Directly Kotlin private fun deriveKey (): ByteArray? = TODO ( \"Optional key, must be exactly 32-bytes long.\" ) SQLiteDatabase . openOrCreateDatabase ( context . getDatabasePath ( \"sample\" ), SQLiteJournalMode . WAL . databaseConfiguration , deriveKey () ). apply { exec ( \"PRAGMA journal_mode= ${ SQLiteJournalMode . WAL } \" ) } Java private byte [] deriveKey () { // TODO Optional key, must be exactly 32-bytes long. } final SQLiteDatabase database = SQLiteDatabase . openOrCreateDatabase ( targetContext . getDatabasePath ( \"sample\" ), SQLiteJournalMode . WAL . getDatabaseConfiguration (), deriveKey () ); database . exec ( \"PRAGMA journal_mode=WAL\" ); Interaction Querying the database Kotlin databaseHelper . writableDatabase . run { insert ( \"Foo\" , ContentValues (). apply { put ( \"bar\" , 42 ) }, ConflictAlgorithm . REPLACE ) query ( false , \"Foo\" , arrayOf ( \"bar\" ), null , null ). use { it . moveToFirst () println ( it . getInt ( 0 )) } } Java final SQLiteDatabase database = databaseHelper . getWritableDatabase (); final ContentValues values = new ContentValues (); values . put ( \"bar\" , 42 ); database . insert ( \"Foo\" , values , ConflictAlgorithm . REPLACE ); try ( Cursor cursor = query ( false , \"Foo\" , arrayOf ( \"bar\" ), null , null )) { cursor . moveToFirst (); System . out . println ( it . getInt ( 0 )); }","title":"Getting started"},{"location":"getting_started/#integration","text":"","title":"Integration"},{"location":"getting_started/#gradle","text":"Kotlin repositories { mavenCentral () } dependencies { implementation ( \"com.bloomberg:selekt-android:0.14.0\" ) } Groovy repositories { mavenCentral () } dependencies { implementation 'com.bloomberg:selekt-android:0.14.0' }","title":"Gradle"},{"location":"getting_started/#getting-a-database","text":"","title":"Getting a database"},{"location":"getting_started/#using-an-open-helper","text":"Kotlin object MyOpenHelperCallback : ISQLiteOpenHelper . Callback { override fun onCreate ( database : SQLiteDatabase ) { database . exec ( \"CREATE TABLE 'Foo' (bar INT)\" ) } override fun onUpgrade ( database : SQLiteDatabase , oldVersion : Int , newVersion : Int ) { TODO ( \"Migrate database.\" ) } } private fun deriveKey (): ByteArray? = TODO ( \"Optional key, must be exactly 32-bytes long.\" ) val databaseHelper = SQLiteOpenHelper ( context = context . applicationContext , configuration = ISQLiteOpenHelper . Configuration ( callback = MyOpenHelperCallback , key = deriveKey (), name = \"sample\" ), version = 3 ) Java class MyOpenHelperCallback implements ISQLiteOpenHelper . Callback { @Override public void onCreate ( final SQLiteDatabase database ) { database . exec ( \"CREATE TABLE 'Foo' (bar INT)\" ) } @Override public void onUpgrade ( final SQLiteDatabase database , final int oldVersion , final int newVersion ) { // TODO Migrate database. } } private byte [] deriveKey () { // TODO Optional key, must be exactly 32-bytes long. } final SQLiteOpenHelper databaseHelper = new SQLiteOpenHelper ( context . applicationContext , 3 , new ISQLiteOpenHelper . Configuration ( MyOpenHelperCallback , deriveKey (), \"sample\" ) );","title":"Using an open helper"},{"location":"getting_started/#using-room","text":"Kotlin private fun deriveKey (): ByteArray? = TODO ( \"Optional key, must be exactly 32-bytes long.\" ) provate val factory = createSupportSQLiteOpenHelperFactory ( SQLiteJournalMode . WAL , deriveKey () ) val database = Room . databaseBuilder ( context , MyAppDatabase :: class . java , \"app\" ) . openHelperFactory ( factory ) . build () Java private byte [] deriveKey () { // TODO Optional key, must be exactly 32-bytes long. } provate SupportSQLiteOpenHelper . Factory factory = SupportSQLiteOpenHelperKt . createSupportSQLiteOpenHelperFactory ( SQLiteJournalMode . WAL , deriveKey ()); final RoomDatabase database = Room . databaseBuilder ( context , MyAppDatabase . class , \"app\" ). openHelperFactory ( factory ) . build ();","title":"Using Room"},{"location":"getting_started/#directly","text":"Kotlin private fun deriveKey (): ByteArray? = TODO ( \"Optional key, must be exactly 32-bytes long.\" ) SQLiteDatabase . openOrCreateDatabase ( context . getDatabasePath ( \"sample\" ), SQLiteJournalMode . WAL . databaseConfiguration , deriveKey () ). apply { exec ( \"PRAGMA journal_mode= ${ SQLiteJournalMode . WAL } \" ) } Java private byte [] deriveKey () { // TODO Optional key, must be exactly 32-bytes long. } final SQLiteDatabase database = SQLiteDatabase . openOrCreateDatabase ( targetContext . getDatabasePath ( \"sample\" ), SQLiteJournalMode . WAL . getDatabaseConfiguration (), deriveKey () ); database . exec ( \"PRAGMA journal_mode=WAL\" );","title":"Directly"},{"location":"getting_started/#interaction","text":"","title":"Interaction"},{"location":"getting_started/#querying-the-database","text":"Kotlin databaseHelper . writableDatabase . run { insert ( \"Foo\" , ContentValues (). apply { put ( \"bar\" , 42 ) }, ConflictAlgorithm . REPLACE ) query ( false , \"Foo\" , arrayOf ( \"bar\" ), null , null ). use { it . moveToFirst () println ( it . getInt ( 0 )) } } Java final SQLiteDatabase database = databaseHelper . getWritableDatabase (); final ContentValues values = new ContentValues (); values . put ( \"bar\" , 42 ); database . insert ( \"Foo\" , values , ConflictAlgorithm . REPLACE ); try ( Cursor cursor = query ( false , \"Foo\" , arrayOf ( \"bar\" ), null , null )) { cursor . moveToFirst (); System . out . println ( it . getInt ( 0 )); }","title":"Querying the database"},{"location":"native_libraries/","text":"Compatibility Selekt's packaged native libraries target the following ABIs: armeabi-v7a arm64-v8a x86 x86_64 The eventual size of an APK can be reduced by filtering out ABIs that are not supported. This can also help prevent APKs from being installed on devices that are not otherwise supported. Restricting native libraries The set of ABIs your application supports can be restricted by applying an ABI filter. For example, to support only the 64-bit ABIs: Kotlin android { ndk { abiFilters . addAll ( arrayOf ( \"arm64-v8a\" , \"x86_64\" )) } } Groovy android { ndk { abiFilters 'arm64-v8a' , 'x86_64' } } Excluding native libraries Alternatively an exclusion filter can be applied when packaging your APK. For example, for an APK that is only intended to support both ARM architectures: Kotlin android { packagingOptions { exclude ( \"/lib/x86/*\" ) exclude ( \"/lib/x86_64/*\" ) } } Groovy android { packagingOptions { exclude '/lib/x86/*' exclude '/lib/x86_64/*' } }","title":"Native libraries"},{"location":"native_libraries/#compatibility","text":"Selekt's packaged native libraries target the following ABIs: armeabi-v7a arm64-v8a x86 x86_64 The eventual size of an APK can be reduced by filtering out ABIs that are not supported. This can also help prevent APKs from being installed on devices that are not otherwise supported.","title":"Compatibility"},{"location":"native_libraries/#restricting-native-libraries","text":"The set of ABIs your application supports can be restricted by applying an ABI filter. For example, to support only the 64-bit ABIs: Kotlin android { ndk { abiFilters . addAll ( arrayOf ( \"arm64-v8a\" , \"x86_64\" )) } } Groovy android { ndk { abiFilters 'arm64-v8a' , 'x86_64' } }","title":"Restricting native libraries"},{"location":"native_libraries/#excluding-native-libraries","text":"Alternatively an exclusion filter can be applied when packaging your APK. For example, for an APK that is only intended to support both ARM architectures: Kotlin android { packagingOptions { exclude ( \"/lib/x86/*\" ) exclude ( \"/lib/x86_64/*\" ) } } Groovy android { packagingOptions { exclude '/lib/x86/*' exclude '/lib/x86_64/*' } }","title":"Excluding native libraries"},{"location":"kdoc/","text":"/ All modules: Name ApiLib Lib Selekt","title":"Index"},{"location":"kdoc/#all-modules","text":"Name ApiLib Lib Selekt","title":"All modules:"},{"location":"kdoc/AndroidLib/","text":"// Selekt Selekt Packages Name com.bloomberg.selekt.android com.bloomberg.selekt.android.support","title":"API"},{"location":"kdoc/AndroidLib/#selekt","text":"","title":"Selekt"},{"location":"kdoc/AndroidLib/#packages","text":"Name com.bloomberg.selekt.android com.bloomberg.selekt.android.support","title":"Packages"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/","text":"// Selekt / com.bloomberg.selekt.android Package com.bloomberg.selekt.android Types Name Summary ConflictAlgorithm [androidJvm] enum ConflictAlgorithm : Enum < ConflictAlgorithm > , IConflictAlgorithm ISQLiteOpenHelper [androidJvm] interface ISQLiteOpenHelper : Closeable Selekt [androidJvm] object Selekt SQLiteDatabase [androidJvm] @ThreadSafe() class SQLiteDatabase : Closeable SQLiteOpenHelper [androidJvm] class SQLiteOpenHelper : ISQLiteOpenHelper The SQLiteOpenHelper class contains a useful set of APIs for managing your database. SQLiteOpenParams [androidJvm] data class SQLiteOpenParams ( journalMode : SQLiteJournalMode , pageSizeExponent : Int , trace : SQLiteTraceEventMode ?) Wrapper for configuration parameters that are used for opening a SQLiteDatabase .","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/#package-combloombergselektandroid","text":"","title":"Package com.bloomberg.selekt.android"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/#types","text":"Name Summary ConflictAlgorithm [androidJvm] enum ConflictAlgorithm : Enum < ConflictAlgorithm > , IConflictAlgorithm ISQLiteOpenHelper [androidJvm] interface ISQLiteOpenHelper : Closeable Selekt [androidJvm] object Selekt SQLiteDatabase [androidJvm] @ThreadSafe() class SQLiteDatabase : Closeable SQLiteOpenHelper [androidJvm] class SQLiteOpenHelper : ISQLiteOpenHelper The SQLiteOpenHelper class contains a useful set of APIs for managing your database. SQLiteOpenParams [androidJvm] data class SQLiteOpenParams ( journalMode : SQLiteJournalMode , pageSizeExponent : Int , trace : SQLiteTraceEventMode ?) Wrapper for configuration parameters that are used for opening a SQLiteDatabase .","title":"Types"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm ConflictAlgorithm [androidJvm]\\ enum ConflictAlgorithm : Enum < ConflictAlgorithm > , IConflictAlgorithm Since v0.1.0. Entries ROLLBACK [androidJvm] ROLLBACK (com.bloomberg.selekt.ConflictAlgorithm.ROLLBACK) REPLACE [androidJvm] REPLACE (com.bloomberg.selekt.ConflictAlgorithm.REPLACE) NONE [androidJvm] NONE (com.bloomberg.selekt.ConflictAlgorithm.NONE) IGNORE [androidJvm] IGNORE (com.bloomberg.selekt.ConflictAlgorithm.IGNORE) FAIL [androidJvm] FAIL (com.bloomberg.selekt.ConflictAlgorithm.FAIL) ABORT [androidJvm] ABORT (com.bloomberg.selekt.ConflictAlgorithm.ABORT) Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/#conflictalgorithm","text":"[androidJvm]\\ enum ConflictAlgorithm : Enum < ConflictAlgorithm > , IConflictAlgorithm","title":"ConflictAlgorithm"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/#since","text":"v0.1.0.","title":"Since"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/#entries","text":"ROLLBACK [androidJvm] ROLLBACK (com.bloomberg.selekt.ConflictAlgorithm.ROLLBACK) REPLACE [androidJvm] REPLACE (com.bloomberg.selekt.ConflictAlgorithm.REPLACE) NONE [androidJvm] NONE (com.bloomberg.selekt.ConflictAlgorithm.NONE) IGNORE [androidJvm] IGNORE (com.bloomberg.selekt.ConflictAlgorithm.IGNORE) FAIL [androidJvm] FAIL (com.bloomberg.selekt.ConflictAlgorithm.FAIL) ABORT [androidJvm] ABORT (com.bloomberg.selekt.ConflictAlgorithm.ABORT)","title":"Entries"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Properties"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-a-b-o-r-t/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / ABORT ABORT [androidJvm]\\ ABORT (com.bloomberg.selekt.ConflictAlgorithm.ABORT) Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-a-b-o-r-t/#abort","text":"[androidJvm]\\ ABORT (com.bloomberg.selekt.ConflictAlgorithm.ABORT)","title":"ABORT"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-a-b-o-r-t/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Properties"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-a-b-o-r-t/name/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / ABORT / name name [androidJvm]\\ val name : String","title":"Name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-a-b-o-r-t/name/#name","text":"[androidJvm]\\ val name : String","title":"name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-a-b-o-r-t/ordinal/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / ABORT / ordinal ordinal [androidJvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-a-b-o-r-t/ordinal/#ordinal","text":"[androidJvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-a-b-o-r-t/sql/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / ABORT / sql sql [androidJvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-a-b-o-r-t/sql/#sql","text":"[androidJvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-f-a-i-l/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / FAIL FAIL [androidJvm]\\ FAIL (com.bloomberg.selekt.ConflictAlgorithm.FAIL) Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-f-a-i-l/#fail","text":"[androidJvm]\\ FAIL (com.bloomberg.selekt.ConflictAlgorithm.FAIL)","title":"FAIL"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-f-a-i-l/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Properties"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-f-a-i-l/name/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / FAIL / name name [androidJvm]\\ val name : String","title":"Name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-f-a-i-l/name/#name","text":"[androidJvm]\\ val name : String","title":"name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-f-a-i-l/ordinal/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / FAIL / ordinal ordinal [androidJvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-f-a-i-l/ordinal/#ordinal","text":"[androidJvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-f-a-i-l/sql/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / FAIL / sql sql [androidJvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-f-a-i-l/sql/#sql","text":"[androidJvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-i-g-n-o-r-e/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / IGNORE IGNORE [androidJvm]\\ IGNORE (com.bloomberg.selekt.ConflictAlgorithm.IGNORE) Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-i-g-n-o-r-e/#ignore","text":"[androidJvm]\\ IGNORE (com.bloomberg.selekt.ConflictAlgorithm.IGNORE)","title":"IGNORE"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-i-g-n-o-r-e/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Properties"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-i-g-n-o-r-e/name/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / IGNORE / name name [androidJvm]\\ val name : String","title":"Name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-i-g-n-o-r-e/name/#name","text":"[androidJvm]\\ val name : String","title":"name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-i-g-n-o-r-e/ordinal/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / IGNORE / ordinal ordinal [androidJvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-i-g-n-o-r-e/ordinal/#ordinal","text":"[androidJvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-i-g-n-o-r-e/sql/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / IGNORE / sql sql [androidJvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-i-g-n-o-r-e/sql/#sql","text":"[androidJvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-n-o-n-e/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / NONE NONE [androidJvm]\\ NONE (com.bloomberg.selekt.ConflictAlgorithm.NONE) Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-n-o-n-e/#none","text":"[androidJvm]\\ NONE (com.bloomberg.selekt.ConflictAlgorithm.NONE)","title":"NONE"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-n-o-n-e/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Properties"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-n-o-n-e/name/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / NONE / name name [androidJvm]\\ val name : String","title":"Name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-n-o-n-e/name/#name","text":"[androidJvm]\\ val name : String","title":"name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-n-o-n-e/ordinal/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / NONE / ordinal ordinal [androidJvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-n-o-n-e/ordinal/#ordinal","text":"[androidJvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-n-o-n-e/sql/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / NONE / sql sql [androidJvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-n-o-n-e/sql/#sql","text":"[androidJvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-e-p-l-a-c-e/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / REPLACE REPLACE [androidJvm]\\ REPLACE (com.bloomberg.selekt.ConflictAlgorithm.REPLACE) Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-e-p-l-a-c-e/#replace","text":"[androidJvm]\\ REPLACE (com.bloomberg.selekt.ConflictAlgorithm.REPLACE)","title":"REPLACE"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-e-p-l-a-c-e/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Properties"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-e-p-l-a-c-e/name/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / REPLACE / name name [androidJvm]\\ val name : String","title":"Name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-e-p-l-a-c-e/name/#name","text":"[androidJvm]\\ val name : String","title":"name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-e-p-l-a-c-e/ordinal/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / REPLACE / ordinal ordinal [androidJvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-e-p-l-a-c-e/ordinal/#ordinal","text":"[androidJvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-e-p-l-a-c-e/sql/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / REPLACE / sql sql [androidJvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-e-p-l-a-c-e/sql/#sql","text":"[androidJvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-o-l-l-b-a-c-k/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / ROLLBACK ROLLBACK [androidJvm]\\ ROLLBACK (com.bloomberg.selekt.ConflictAlgorithm.ROLLBACK) Properties Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-o-l-l-b-a-c-k/#rollback","text":"[androidJvm]\\ ROLLBACK (com.bloomberg.selekt.ConflictAlgorithm.ROLLBACK)","title":"ROLLBACK"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-o-l-l-b-a-c-k/#properties","text":"Name Summary name [androidJvm] val name : String ordinal [androidJvm] val ordinal : Int sql [androidJvm] open override val sql : String","title":"Properties"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-o-l-l-b-a-c-k/name/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / ROLLBACK / name name [androidJvm]\\ val name : String","title":"Name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-o-l-l-b-a-c-k/name/#name","text":"[androidJvm]\\ val name : String","title":"name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-o-l-l-b-a-c-k/ordinal/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / ROLLBACK / ordinal ordinal [androidJvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-o-l-l-b-a-c-k/ordinal/#ordinal","text":"[androidJvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-o-l-l-b-a-c-k/sql/","text":"// Selekt / com.bloomberg.selekt.android / ConflictAlgorithm / ROLLBACK / sql sql [androidJvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-conflict-algorithm/-r-o-l-l-b-a-c-k/sql/#sql","text":"[androidJvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper ISQLiteOpenHelper [androidJvm]\\ interface ISQLiteOpenHelper : Closeable Types Name Summary Callback [androidJvm] interface Callback Configuration [androidJvm] data class Configuration ( callback : ISQLiteOpenHelper.Callback , key : ByteArray ?, name : String ) Functions Name Summary close [androidJvm] abstract override fun close () Properties Name Summary databaseName [androidJvm] abstract val databaseName : String writableDatabase [androidJvm] abstract val writableDatabase : SQLiteDatabase Inheritors Name SQLiteOpenHelper","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/#isqliteopenhelper","text":"[androidJvm]\\ interface ISQLiteOpenHelper : Closeable","title":"ISQLiteOpenHelper"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/#types","text":"Name Summary Callback [androidJvm] interface Callback Configuration [androidJvm] data class Configuration ( callback : ISQLiteOpenHelper.Callback , key : ByteArray ?, name : String )","title":"Types"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/#functions","text":"Name Summary close [androidJvm] abstract override fun close ()","title":"Functions"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/#properties","text":"Name Summary databaseName [androidJvm] abstract val databaseName : String writableDatabase [androidJvm] abstract val writableDatabase : SQLiteDatabase","title":"Properties"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/#inheritors","text":"Name SQLiteOpenHelper","title":"Inheritors"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/database-name/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper / databaseName databaseName [androidJvm]\\ abstract val databaseName : String","title":"Database name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/database-name/#databasename","text":"[androidJvm]\\ abstract val databaseName : String","title":"databaseName"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/writable-database/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper / writableDatabase writableDatabase [androidJvm]\\ abstract val writableDatabase : SQLiteDatabase","title":"Writable database"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/writable-database/#writabledatabase","text":"[androidJvm]\\ abstract val writableDatabase : SQLiteDatabase","title":"writableDatabase"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-callback/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper / Callback Callback [androidJvm]\\ interface Callback Functions Name Summary onConfigure [androidJvm] open fun onConfigure (database: SQLiteDatabase ) onCreate [androidJvm] abstract fun onCreate (database: SQLiteDatabase ) onDowngrade [androidJvm] open fun onDowngrade (database: SQLiteDatabase , oldVersion: Int , newVersion: Int ) onOpen [androidJvm] open fun onOpen (database: SQLiteDatabase ) onUpgrade [androidJvm] abstract fun onUpgrade (database: SQLiteDatabase , oldVersion: Int , newVersion: Int )","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-callback/#callback","text":"[androidJvm]\\ interface Callback","title":"Callback"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-callback/#functions","text":"Name Summary onConfigure [androidJvm] open fun onConfigure (database: SQLiteDatabase ) onCreate [androidJvm] abstract fun onCreate (database: SQLiteDatabase ) onDowngrade [androidJvm] open fun onDowngrade (database: SQLiteDatabase , oldVersion: Int , newVersion: Int ) onOpen [androidJvm] open fun onOpen (database: SQLiteDatabase ) onUpgrade [androidJvm] abstract fun onUpgrade (database: SQLiteDatabase , oldVersion: Int , newVersion: Int )","title":"Functions"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-callback/on-configure/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper / Callback / onConfigure onConfigure [androidJvm]\\ open fun onConfigure (database: SQLiteDatabase )","title":"On configure"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-callback/on-configure/#onconfigure","text":"[androidJvm]\\ open fun onConfigure (database: SQLiteDatabase )","title":"onConfigure"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-callback/on-create/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper / Callback / onCreate onCreate [androidJvm]\\ abstract fun onCreate (database: SQLiteDatabase )","title":"On create"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-callback/on-create/#oncreate","text":"[androidJvm]\\ abstract fun onCreate (database: SQLiteDatabase )","title":"onCreate"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-callback/on-downgrade/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper / Callback / onDowngrade onDowngrade [androidJvm]\\ open fun onDowngrade (database: SQLiteDatabase , oldVersion: Int , newVersion: Int )","title":"On downgrade"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-callback/on-downgrade/#ondowngrade","text":"[androidJvm]\\ open fun onDowngrade (database: SQLiteDatabase , oldVersion: Int , newVersion: Int )","title":"onDowngrade"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-callback/on-open/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper / Callback / onOpen onOpen [androidJvm]\\ open fun onOpen (database: SQLiteDatabase )","title":"On open"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-callback/on-open/#onopen","text":"[androidJvm]\\ open fun onOpen (database: SQLiteDatabase )","title":"onOpen"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-callback/on-upgrade/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper / Callback / onUpgrade onUpgrade [androidJvm]\\ abstract fun onUpgrade (database: SQLiteDatabase , oldVersion: Int , newVersion: Int )","title":"On upgrade"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-callback/on-upgrade/#onupgrade","text":"[androidJvm]\\ abstract fun onUpgrade (database: SQLiteDatabase , oldVersion: Int , newVersion: Int )","title":"onUpgrade"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-configuration/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper / Configuration Configuration [androidJvm]\\ data class Configuration ( callback : ISQLiteOpenHelper.Callback , key : ByteArray ?, name : String ) Properties Name Summary callback [androidJvm] val callback : ISQLiteOpenHelper.Callback key [androidJvm] val key : ByteArray ? name [androidJvm] val name : String","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-configuration/#configuration","text":"[androidJvm]\\ data class Configuration ( callback : ISQLiteOpenHelper.Callback , key : ByteArray ?, name : String )","title":"Configuration"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-configuration/#properties","text":"Name Summary callback [androidJvm] val callback : ISQLiteOpenHelper.Callback key [androidJvm] val key : ByteArray ? name [androidJvm] val name : String","title":"Properties"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-configuration/-configuration/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper / Configuration / Configuration Configuration [androidJvm]\\ fun Configuration (callback: ISQLiteOpenHelper.Callback , key: ByteArray ?, name: String )","title":" configuration"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-configuration/-configuration/#configuration","text":"[androidJvm]\\ fun Configuration (callback: ISQLiteOpenHelper.Callback , key: ByteArray ?, name: String )","title":"Configuration"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-configuration/callback/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper / Configuration / callback callback [androidJvm]\\ val callback : ISQLiteOpenHelper.Callback","title":"Callback"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-configuration/callback/#callback","text":"[androidJvm]\\ val callback : ISQLiteOpenHelper.Callback","title":"callback"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-configuration/key/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper / Configuration / key key [androidJvm]\\ val key : ByteArray ?","title":"Key"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-configuration/key/#key","text":"[androidJvm]\\ val key : ByteArray ?","title":"key"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-configuration/name/","text":"// Selekt / com.bloomberg.selekt.android / ISQLiteOpenHelper / Configuration / name name [androidJvm]\\ val name : String","title":"Name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-i-s-q-lite-open-helper/-configuration/name/#name","text":"[androidJvm]\\ val name : String","title":"name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase SQLiteDatabase [androidJvm]\\ @ThreadSafe() class SQLiteDatabase : Closeable Since v0.1.0. Types Name Summary Companion [androidJvm] object Companion Functions Name Summary batch [androidJvm] fun batch (sql: String , bindArgs: Sequence < Array Any ?>>): Int Transacts to the database in exclusive mode a batch of queries with the same underlying SQL statement. close [androidJvm] open override fun close () compileStatement [androidJvm] fun compileStatement (sql: String ): ISQLStatement delete [androidJvm] fun delete (table: String , whereClause: String ?, whereArgs: Array Any ?>?): Int exec [androidJvm] fun exec (sql: String ) fun exec (sql: String , bindArgs: Array Any ?>) incrementalVacuum [androidJvm] fun incrementalVacuum () The incremental vacuum pragma causes pages to be removed from the freelist. [androidJvm] fun incrementalVacuum (pages: Int ) The incremental vacuum pragma causes up to N pages to be removed from the freelist. insert [androidJvm] fun insert (table: String , values: ContentValues , conflictAlgorithm: ConflictAlgorithm ): Long integrityCheck [androidJvm] fun integrityCheck (name: String = \"main\"): Boolean query [androidJvm] fun query (query: ISQLQuery ): Cursor fun query (sql: String , selectionArgs: Array Any ?>?): Cursor fun query (distinct: Boolean , table: String , columns: Array String >?, selection: String ?, selectionArgs: Array Any ?>?, groupBy: String ? = null, having: String ? = null, limit: Int ? = null, orderBy: String ? = null): Cursor readFromBlob [androidJvm] fun readFromBlob (table: String , column: String , row: Long , offset: Int , limit: Int , stream: OutputStream ) fun readFromBlob (name: String , table: String , column: String , row: Long , offset: Int , limit: Int , stream: OutputStream ) setForeignKeyConstraintsEnabled [androidJvm] fun setForeignKeyConstraintsEnabled (enabled: Boolean ) Setting foreign key constraints is not possible within a transaction; foreign key constraint enforcement may only be enabled or disabled when there are no pending transactions. setMaximumSize [androidJvm] fun setMaximumSize (bytes: Long ): Long sizeOfBlob [androidJvm] fun sizeOfBlob (table: String , column: String , row: Long ): Int fun sizeOfBlob (name: String , table: String , column: String , row: Long ): Int transact [androidJvm] fun < T > transact (transactionMode: SQLiteTransactionMode = SQLiteTransactionMode.EXCLUSIVE, block: SQLiteDatabase .() -> T ): T Execute a block inside either an exclusive or an immediate database transaction. update [androidJvm] fun update (table: String , values: ContentValues , whereClause: String ?, whereArgs: Array Any ?>?, conflictAlgorithm: ConflictAlgorithm ): Int upsert [androidJvm] fun upsert (table: String , values: ContentValues , columns: Array String >, update: String ): Long vacuum [androidJvm] fun vacuum () The vacuum command rebuilds the database file, repacking it into a minimal amount of disk space. writeToBlob [androidJvm] fun writeToBlob (table: String , column: String , row: Long , offset: Int , stream: InputStream ) [androidJvm] fun writeToBlob (name: String , table: String , column: String , row: Long , offset: Int , stream: InputStream ) Modifies the contents of a blob; it is not possible to increase the size of a blob using this method. yieldTransaction [androidJvm] @ JvmOverloads () fun yieldTransaction (pauseMillis: Long = 0L): Boolean Temporarily end the transaction to allow other threads to make progress. Properties Name Summary autoVacuum [androidJvm] var autoVacuum : SQLiteAutoVacuumMode Auto-vacuuming is only possible if the database stores some additional information that allows each database page to be traced backwards to its referrer. isConnectionHeldByCurrentThread [androidJvm] val isConnectionHeldByCurrentThread : Boolean Get whether this thread currently holds a connection to the database. isOpen [androidJvm] val isOpen : Boolean isTransactionOpenedByCurrentThread [androidJvm] val isTransactionOpenedByCurrentThread : Boolean Get whether the current thread has an open transaction. journalMode [androidJvm] val journalMode : SQLiteJournalMode maximumSize [androidJvm] val maximumSize : Long maxPageCount [androidJvm] val maxPageCount : Long pageCount [androidJvm] val pageCount : Int pageSize [androidJvm] var pageSize : Long path [androidJvm] val path : String version [androidJvm] var version : Int","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/#sqlitedatabase","text":"[androidJvm]\\ @ThreadSafe() class SQLiteDatabase : Closeable","title":"SQLiteDatabase"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/#since","text":"v0.1.0.","title":"Since"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/#types","text":"Name Summary Companion [androidJvm] object Companion","title":"Types"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/#functions","text":"Name Summary batch [androidJvm] fun batch (sql: String , bindArgs: Sequence < Array Any ?>>): Int Transacts to the database in exclusive mode a batch of queries with the same underlying SQL statement. close [androidJvm] open override fun close () compileStatement [androidJvm] fun compileStatement (sql: String ): ISQLStatement delete [androidJvm] fun delete (table: String , whereClause: String ?, whereArgs: Array Any ?>?): Int exec [androidJvm] fun exec (sql: String ) fun exec (sql: String , bindArgs: Array Any ?>) incrementalVacuum [androidJvm] fun incrementalVacuum () The incremental vacuum pragma causes pages to be removed from the freelist. [androidJvm] fun incrementalVacuum (pages: Int ) The incremental vacuum pragma causes up to N pages to be removed from the freelist. insert [androidJvm] fun insert (table: String , values: ContentValues , conflictAlgorithm: ConflictAlgorithm ): Long integrityCheck [androidJvm] fun integrityCheck (name: String = \"main\"): Boolean query [androidJvm] fun query (query: ISQLQuery ): Cursor fun query (sql: String , selectionArgs: Array Any ?>?): Cursor fun query (distinct: Boolean , table: String , columns: Array String >?, selection: String ?, selectionArgs: Array Any ?>?, groupBy: String ? = null, having: String ? = null, limit: Int ? = null, orderBy: String ? = null): Cursor readFromBlob [androidJvm] fun readFromBlob (table: String , column: String , row: Long , offset: Int , limit: Int , stream: OutputStream ) fun readFromBlob (name: String , table: String , column: String , row: Long , offset: Int , limit: Int , stream: OutputStream ) setForeignKeyConstraintsEnabled [androidJvm] fun setForeignKeyConstraintsEnabled (enabled: Boolean ) Setting foreign key constraints is not possible within a transaction; foreign key constraint enforcement may only be enabled or disabled when there are no pending transactions. setMaximumSize [androidJvm] fun setMaximumSize (bytes: Long ): Long sizeOfBlob [androidJvm] fun sizeOfBlob (table: String , column: String , row: Long ): Int fun sizeOfBlob (name: String , table: String , column: String , row: Long ): Int transact [androidJvm] fun < T > transact (transactionMode: SQLiteTransactionMode = SQLiteTransactionMode.EXCLUSIVE, block: SQLiteDatabase .() -> T ): T Execute a block inside either an exclusive or an immediate database transaction. update [androidJvm] fun update (table: String , values: ContentValues , whereClause: String ?, whereArgs: Array Any ?>?, conflictAlgorithm: ConflictAlgorithm ): Int upsert [androidJvm] fun upsert (table: String , values: ContentValues , columns: Array String >, update: String ): Long vacuum [androidJvm] fun vacuum () The vacuum command rebuilds the database file, repacking it into a minimal amount of disk space. writeToBlob [androidJvm] fun writeToBlob (table: String , column: String , row: Long , offset: Int , stream: InputStream ) [androidJvm] fun writeToBlob (name: String , table: String , column: String , row: Long , offset: Int , stream: InputStream ) Modifies the contents of a blob; it is not possible to increase the size of a blob using this method. yieldTransaction [androidJvm] @ JvmOverloads () fun yieldTransaction (pauseMillis: Long = 0L): Boolean Temporarily end the transaction to allow other threads to make progress.","title":"Functions"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/#properties","text":"Name Summary autoVacuum [androidJvm] var autoVacuum : SQLiteAutoVacuumMode Auto-vacuuming is only possible if the database stores some additional information that allows each database page to be traced backwards to its referrer. isConnectionHeldByCurrentThread [androidJvm] val isConnectionHeldByCurrentThread : Boolean Get whether this thread currently holds a connection to the database. isOpen [androidJvm] val isOpen : Boolean isTransactionOpenedByCurrentThread [androidJvm] val isTransactionOpenedByCurrentThread : Boolean Get whether the current thread has an open transaction. journalMode [androidJvm] val journalMode : SQLiteJournalMode maximumSize [androidJvm] val maximumSize : Long maxPageCount [androidJvm] val maxPageCount : Long pageCount [androidJvm] val pageCount : Int pageSize [androidJvm] var pageSize : Long path [androidJvm] val path : String version [androidJvm] var version : Int","title":"Properties"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/auto-vacuum/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / autoVacuum autoVacuum [androidJvm]\\ var autoVacuum : SQLiteAutoVacuumMode Auto-vacuuming is only possible if the database stores some additional information that allows each database page to be traced backwards to its referrer. Therefore, auto-vacuuming must be turned on before any tables are created. It is not possible to enable or disable auto-vacuum after a table has been created.","title":"Auto vacuum"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/auto-vacuum/#autovacuum","text":"[androidJvm]\\ var autoVacuum : SQLiteAutoVacuumMode Auto-vacuuming is only possible if the database stores some additional information that allows each database page to be traced backwards to its referrer. Therefore, auto-vacuuming must be turned on before any tables are created. It is not possible to enable or disable auto-vacuum after a table has been created.","title":"autoVacuum"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/batch/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / batch batch [androidJvm]\\ fun batch (sql: String , bindArgs: Sequence < Array Any ?>>): Int Transacts to the database in exclusive mode a batch of queries with the same underlying SQL statement. The prototypical use case is for database modifications inside a tight loop to which this is optimised. Each array in the sequence must have the same length, corresponding to the number of arguments in the SQL statement. It is safe for the sequence to recycle the array with each yield. The transaction is not committed by this method until the sequence ends. For long sequences you may therefore wish to yield the transaction periodically. Return the number of rows affected. Parameters androidJvm sql statement. bindArgs sequence of standard type arguments for binding to the statement.","title":"Batch"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/batch/#batch","text":"[androidJvm]\\ fun batch (sql: String , bindArgs: Sequence < Array Any ?>>): Int Transacts to the database in exclusive mode a batch of queries with the same underlying SQL statement. The prototypical use case is for database modifications inside a tight loop to which this is optimised. Each array in the sequence must have the same length, corresponding to the number of arguments in the SQL statement. It is safe for the sequence to recycle the array with each yield. The transaction is not committed by this method until the sequence ends. For long sequences you may therefore wish to yield the transaction periodically.","title":"batch"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/batch/#return","text":"the number of rows affected.","title":"Return"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/batch/#parameters","text":"androidJvm sql statement. bindArgs sequence of standard type arguments for binding to the statement.","title":"Parameters"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/close/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / close close [androidJvm]\\ open override fun close ()","title":"Close"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/close/#close","text":"[androidJvm]\\ open override fun close ()","title":"close"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/compile-statement/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / compileStatement compileStatement [androidJvm]\\ fun compileStatement (sql: String ): ISQLStatement","title":"Compile statement"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/compile-statement/#compilestatement","text":"[androidJvm]\\ fun compileStatement (sql: String ): ISQLStatement","title":"compileStatement"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/delete/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / delete delete [androidJvm]\\ fun delete (table: String , whereClause: String ?, whereArgs: Array Any ?>?): Int","title":"Delete"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/delete/#delete","text":"[androidJvm]\\ fun delete (table: String , whereClause: String ?, whereArgs: Array Any ?>?): Int","title":"delete"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/exec/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / exec exec [androidJvm]\\ fun exec (sql: String ) fun exec (sql: String , bindArgs: Array Any ?>)","title":"Exec"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/exec/#exec","text":"[androidJvm]\\ fun exec (sql: String ) fun exec (sql: String , bindArgs: Array Any ?>)","title":"exec"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/incremental-vacuum/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / incrementalVacuum incrementalVacuum [androidJvm]\\ fun incrementalVacuum () The incremental vacuum pragma causes pages to be removed from the freelist. The database file is truncated by the same number of pages. The incremental vacuum pragma has no effect if the database is not already in incremental vacuum mode or if there are no pages on the freelist. [androidJvm]\\ fun incrementalVacuum (pages: Int ) The incremental vacuum pragma causes up to N pages to be removed from the freelist. The database file is truncated by the same amount. The incremental vacuum pragma has no effect if the database is not already in incremental mode or if there are no pages on the freelist. If there are fewer on the freelist, or if pages is less than 1, then the entire freelist is cleared. Parameters androidJvm pages to remove from the freelist.","title":"Incremental vacuum"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/incremental-vacuum/#incrementalvacuum","text":"[androidJvm]\\ fun incrementalVacuum () The incremental vacuum pragma causes pages to be removed from the freelist. The database file is truncated by the same number of pages. The incremental vacuum pragma has no effect if the database is not already in incremental vacuum mode or if there are no pages on the freelist. [androidJvm]\\ fun incrementalVacuum (pages: Int ) The incremental vacuum pragma causes up to N pages to be removed from the freelist. The database file is truncated by the same amount. The incremental vacuum pragma has no effect if the database is not already in incremental mode or if there are no pages on the freelist. If there are fewer on the freelist, or if pages is less than 1, then the entire freelist is cleared.","title":"incrementalVacuum"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/incremental-vacuum/#parameters","text":"androidJvm pages to remove from the freelist.","title":"Parameters"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/insert/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / insert insert [androidJvm]\\ fun insert (table: String , values: ContentValues , conflictAlgorithm: ConflictAlgorithm ): Long","title":"Insert"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/insert/#insert","text":"[androidJvm]\\ fun insert (table: String , values: ContentValues , conflictAlgorithm: ConflictAlgorithm ): Long","title":"insert"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/integrity-check/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / integrityCheck integrityCheck [androidJvm]\\ fun integrityCheck (name: String = \"main\"): Boolean","title":"Integrity check"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/integrity-check/#integritycheck","text":"[androidJvm]\\ fun integrityCheck (name: String = \"main\"): Boolean","title":"integrityCheck"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/is-connection-held-by-current-thread/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / isConnectionHeldByCurrentThread isConnectionHeldByCurrentThread [androidJvm]\\ val isConnectionHeldByCurrentThread : Boolean Get whether this thread currently holds a connection to the database.","title":"Is connection held by current thread"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/is-connection-held-by-current-thread/#isconnectionheldbycurrentthread","text":"[androidJvm]\\ val isConnectionHeldByCurrentThread : Boolean Get whether this thread currently holds a connection to the database.","title":"isConnectionHeldByCurrentThread"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/is-open/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / isOpen isOpen [androidJvm]\\ val isOpen : Boolean","title":"Is open"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/is-open/#isopen","text":"[androidJvm]\\ val isOpen : Boolean","title":"isOpen"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/is-transaction-opened-by-current-thread/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / isTransactionOpenedByCurrentThread isTransactionOpenedByCurrentThread [androidJvm]\\ val isTransactionOpenedByCurrentThread : Boolean Get whether the current thread has an open transaction.","title":"Is transaction opened by current thread"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/is-transaction-opened-by-current-thread/#istransactionopenedbycurrentthread","text":"[androidJvm]\\ val isTransactionOpenedByCurrentThread : Boolean Get whether the current thread has an open transaction.","title":"isTransactionOpenedByCurrentThread"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/journal-mode/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / journalMode journalMode [androidJvm]\\ val journalMode : SQLiteJournalMode","title":"Journal mode"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/journal-mode/#journalmode","text":"[androidJvm]\\ val journalMode : SQLiteJournalMode","title":"journalMode"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/max-page-count/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / maxPageCount maxPageCount [androidJvm]\\ val maxPageCount : Long","title":"Max page count"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/max-page-count/#maxpagecount","text":"[androidJvm]\\ val maxPageCount : Long","title":"maxPageCount"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/maximum-size/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / maximumSize maximumSize [androidJvm]\\ val maximumSize : Long","title":"Maximum size"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/maximum-size/#maximumsize","text":"[androidJvm]\\ val maximumSize : Long","title":"maximumSize"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/page-count/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / pageCount pageCount [androidJvm]\\ val pageCount : Int","title":"Page count"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/page-count/#pagecount","text":"[androidJvm]\\ val pageCount : Int","title":"pageCount"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/page-size/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / pageSize pageSize [androidJvm]\\ var pageSize : Long","title":"Page size"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/page-size/#pagesize","text":"[androidJvm]\\ var pageSize : Long","title":"pageSize"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/path/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / path path [androidJvm]\\ val path : String","title":"Path"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/path/#path","text":"[androidJvm]\\ val path : String","title":"path"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/query/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / query query [androidJvm]\\ fun query (distinct: Boolean , table: String , columns: Array String >?, selection: String ?, selectionArgs: Array Any ?>?, groupBy: String ? = null, having: String ? = null, limit: Int ? = null, orderBy: String ? = null): Cursor fun query (sql: String , selectionArgs: Array Any ?>?): Cursor fun query (query: ISQLQuery ): Cursor","title":"Query"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/query/#query","text":"[androidJvm]\\ fun query (distinct: Boolean , table: String , columns: Array String >?, selection: String ?, selectionArgs: Array Any ?>?, groupBy: String ? = null, having: String ? = null, limit: Int ? = null, orderBy: String ? = null): Cursor fun query (sql: String , selectionArgs: Array Any ?>?): Cursor fun query (query: ISQLQuery ): Cursor","title":"query"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/read-from-blob/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / readFromBlob readFromBlob [androidJvm]\\ fun readFromBlob (table: String , column: String , row: Long , offset: Int , limit: Int , stream: OutputStream ) Since 0.7.4 [androidJvm]\\ fun readFromBlob (name: String , table: String , column: String , row: Long , offset: Int , limit: Int , stream: OutputStream ) Since 0.7.3","title":"Read from blob"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/read-from-blob/#readfromblob","text":"[androidJvm]\\ fun readFromBlob (table: String , column: String , row: Long , offset: Int , limit: Int , stream: OutputStream )","title":"readFromBlob"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/read-from-blob/#since","text":"0.7.4 [androidJvm]\\ fun readFromBlob (name: String , table: String , column: String , row: Long , offset: Int , limit: Int , stream: OutputStream )","title":"Since"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/read-from-blob/#since_1","text":"0.7.3","title":"Since"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/set-foreign-key-constraints-enabled/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / setForeignKeyConstraintsEnabled setForeignKeyConstraintsEnabled [androidJvm]\\ fun setForeignKeyConstraintsEnabled (enabled: Boolean ) Setting foreign key constraints is not possible within a transaction; foreign key constraint enforcement may only be enabled or disabled when there are no pending transactions.","title":"Set foreign key constraints enabled"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/set-foreign-key-constraints-enabled/#setforeignkeyconstraintsenabled","text":"[androidJvm]\\ fun setForeignKeyConstraintsEnabled (enabled: Boolean ) Setting foreign key constraints is not possible within a transaction; foreign key constraint enforcement may only be enabled or disabled when there are no pending transactions.","title":"setForeignKeyConstraintsEnabled"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/set-maximum-size/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / setMaximumSize setMaximumSize [androidJvm]\\ fun setMaximumSize (bytes: Long ): Long","title":"Set maximum size"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/set-maximum-size/#setmaximumsize","text":"[androidJvm]\\ fun setMaximumSize (bytes: Long ): Long","title":"setMaximumSize"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/size-of-blob/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / sizeOfBlob sizeOfBlob [androidJvm]\\ fun sizeOfBlob (table: String , column: String , row: Long ): Int Since 0.7.4 [androidJvm]\\ fun sizeOfBlob (name: String , table: String , column: String , row: Long ): Int Since 0.7.3","title":"Size of blob"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/size-of-blob/#sizeofblob","text":"[androidJvm]\\ fun sizeOfBlob (table: String , column: String , row: Long ): Int","title":"sizeOfBlob"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/size-of-blob/#since","text":"0.7.4 [androidJvm]\\ fun sizeOfBlob (name: String , table: String , column: String , row: Long ): Int","title":"Since"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/size-of-blob/#since_1","text":"0.7.3","title":"Since"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/transact/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / transact transact [androidJvm]\\ fun < T > transact (transactionMode: SQLiteTransactionMode = SQLiteTransactionMode.EXCLUSIVE, block: SQLiteDatabase .() -> T ): T Execute a block inside either an exclusive or an immediate database transaction. These transaction modes are the same in WAL-journal mode; in other journal modes, exclusive transaction mode prevents other connections from reading the database while the transaction is underway. Performing write operations within the block on this database on a thread other than the calling thread can result in deadlock. Return result of the transaction. See also androidJvm SQLite's transaction Parameters androidJvm transactionMode of the transaction; the default is SQLiteTransactionMode.EXCLUSIVE . block to transact.","title":"Transact"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/transact/#transact","text":"[androidJvm]\\ fun < T > transact (transactionMode: SQLiteTransactionMode = SQLiteTransactionMode.EXCLUSIVE, block: SQLiteDatabase .() -> T ): T Execute a block inside either an exclusive or an immediate database transaction. These transaction modes are the same in WAL-journal mode; in other journal modes, exclusive transaction mode prevents other connections from reading the database while the transaction is underway. Performing write operations within the block on this database on a thread other than the calling thread can result in deadlock.","title":"transact"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/transact/#return","text":"result of the transaction.","title":"Return"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/transact/#see-also","text":"androidJvm SQLite's transaction","title":"See also"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/transact/#parameters","text":"androidJvm transactionMode of the transaction; the default is SQLiteTransactionMode.EXCLUSIVE . block to transact.","title":"Parameters"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/update/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / update update [androidJvm]\\ fun update (table: String , values: ContentValues , whereClause: String ?, whereArgs: Array Any ?>?, conflictAlgorithm: ConflictAlgorithm ): Int","title":"Update"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/update/#update","text":"[androidJvm]\\ fun update (table: String , values: ContentValues , whereClause: String ?, whereArgs: Array Any ?>?, conflictAlgorithm: ConflictAlgorithm ): Int","title":"update"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/upsert/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / upsert upsert [androidJvm]\\ fun upsert (table: String , values: ContentValues , columns: Array String >, update: String ): Long","title":"Upsert"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/upsert/#upsert","text":"[androidJvm]\\ fun upsert (table: String , values: ContentValues , columns: Array String >, update: String ): Long","title":"upsert"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/vacuum/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / vacuum vacuum [androidJvm]\\ fun vacuum () The vacuum command rebuilds the database file, repacking it into a minimal amount of disk space. A vacuum will fail if there is an open transaction on the database connection that is attempting to run the vacuum. Unfinalized SQL statements typically hold a read transaction open, so the vacuum might fail if there are unfinalized SQL statements on the same connection. Vacuum is a write operation and so if another database connection is holding a lock that prevents writes, then the vacuum will fail. See also androidJvm SQLite's VACUUM","title":"Vacuum"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/vacuum/#vacuum","text":"[androidJvm]\\ fun vacuum () The vacuum command rebuilds the database file, repacking it into a minimal amount of disk space. A vacuum will fail if there is an open transaction on the database connection that is attempting to run the vacuum. Unfinalized SQL statements typically hold a read transaction open, so the vacuum might fail if there are unfinalized SQL statements on the same connection. Vacuum is a write operation and so if another database connection is holding a lock that prevents writes, then the vacuum will fail.","title":"vacuum"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/vacuum/#see-also","text":"androidJvm SQLite's VACUUM","title":"See also"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/version/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / version version [androidJvm]\\ var version : Int","title":"Version"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/version/#version","text":"[androidJvm]\\ var version : Int","title":"version"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/write-to-blob/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / writeToBlob writeToBlob [androidJvm]\\ fun writeToBlob (table: String , column: String , row: Long , offset: Int , stream: InputStream ) Since 0.7.4 See also androidJvm SQLite's blob_write [androidJvm]\\ fun writeToBlob (name: String , table: String , column: String , row: Long , offset: Int , stream: InputStream ) Modifies the contents of a blob; it is not possible to increase the size of a blob using this method. Since 0.7.3 See also androidJvm SQLite's blob_write","title":"Write to blob"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/write-to-blob/#writetoblob","text":"[androidJvm]\\ fun writeToBlob (table: String , column: String , row: Long , offset: Int , stream: InputStream )","title":"writeToBlob"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/write-to-blob/#since","text":"0.7.4","title":"Since"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/write-to-blob/#see-also","text":"androidJvm SQLite's blob_write [androidJvm]\\ fun writeToBlob (name: String , table: String , column: String , row: Long , offset: Int , stream: InputStream ) Modifies the contents of a blob; it is not possible to increase the size of a blob using this method.","title":"See also"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/write-to-blob/#since_1","text":"0.7.3","title":"Since"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/write-to-blob/#see-also_1","text":"androidJvm SQLite's blob_write","title":"See also"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/yield-transaction/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / yieldTransaction yieldTransaction [androidJvm]\\ @ JvmOverloads () fun yieldTransaction (pauseMillis: Long = 0L): Boolean Temporarily end the transaction to allow other threads to make progress. The transaction is assumed to be successful thus far and committed, do not call setTransactionSuccessful . When this method returns a new transaction will have been created but not yet marked as successful. The yielding transaction can be nested.","title":"Yield transaction"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/yield-transaction/#yieldtransaction","text":"[androidJvm]\\ @ JvmOverloads () fun yieldTransaction (pauseMillis: Long = 0L): Boolean Temporarily end the transaction to allow other threads to make progress. The transaction is assumed to be successful thus far and committed, do not call setTransactionSuccessful . When this method returns a new transaction will have been created but not yet marked as successful. The yielding transaction can be nested.","title":"yieldTransaction"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/-companion/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / Companion Companion [androidJvm]\\ object Companion Functions Name Summary createInMemoryDatabase [androidJvm] @ JvmStatic () fun createInMemoryDatabase (trace: SQLiteTraceEventMode ? = null): SQLiteDatabase deleteDatabase [androidJvm] @ JvmStatic () fun deleteDatabase (file: File ): Boolean openOrCreateDatabase [androidJvm] @ JvmStatic () fun openOrCreateDatabase (file: File , configuration: DatabaseConfiguration , key: ByteArray ?): SQLiteDatabase","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/-companion/#functions","text":"Name Summary createInMemoryDatabase [androidJvm] @ JvmStatic () fun createInMemoryDatabase (trace: SQLiteTraceEventMode ? = null): SQLiteDatabase deleteDatabase [androidJvm] @ JvmStatic () fun deleteDatabase (file: File ): Boolean openOrCreateDatabase [androidJvm] @ JvmStatic () fun openOrCreateDatabase (file: File , configuration: DatabaseConfiguration , key: ByteArray ?): SQLiteDatabase","title":"Functions"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/-companion/create-in-memory-database/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / Companion / createInMemoryDatabase createInMemoryDatabase [androidJvm]\\ @ JvmStatic () fun createInMemoryDatabase (trace: SQLiteTraceEventMode ? = null): SQLiteDatabase","title":"Create in memory database"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/-companion/create-in-memory-database/#createinmemorydatabase","text":"[androidJvm]\\ @ JvmStatic () fun createInMemoryDatabase (trace: SQLiteTraceEventMode ? = null): SQLiteDatabase","title":"createInMemoryDatabase"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/-companion/delete-database/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / Companion / deleteDatabase deleteDatabase [androidJvm]\\ @ JvmStatic () fun deleteDatabase (file: File ): Boolean","title":"Delete database"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/-companion/delete-database/#deletedatabase","text":"[androidJvm]\\ @ JvmStatic () fun deleteDatabase (file: File ): Boolean","title":"deleteDatabase"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/-companion/open-or-create-database/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteDatabase / Companion / openOrCreateDatabase openOrCreateDatabase [androidJvm]\\ @ JvmStatic () fun openOrCreateDatabase (file: File , configuration: DatabaseConfiguration , key: ByteArray ?): SQLiteDatabase","title":"Open or create database"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-database/-companion/open-or-create-database/#openorcreatedatabase","text":"[androidJvm]\\ @ JvmStatic () fun openOrCreateDatabase (file: File , configuration: DatabaseConfiguration , key: ByteArray ?): SQLiteDatabase","title":"openOrCreateDatabase"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenHelper SQLiteOpenHelper [androidJvm]\\ class SQLiteOpenHelper : ISQLiteOpenHelper The SQLiteOpenHelper class contains a useful set of APIs for managing your database. When you use this class to obtain references to your database, the system performs the potentially long-running operations of creating and updating the database lazily and only when needed, not during application startup. All you need to do is call writableDatabase(). Since v0.1.0. Constructors SQLiteOpenHelper [androidJvm] fun SQLiteOpenHelper (context: Context , configuration: ISQLiteOpenHelper.Configuration , version: Int , openParams: SQLiteOpenParams = SQLiteOpenParams()) Functions Name Summary close [androidJvm] open override fun close () Properties Name Summary databaseName [androidJvm] open override val databaseName : String writableDatabase [androidJvm] open override val writableDatabase : SQLiteDatabase Create and/or open a database that will be used for reading and writing.","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/#sqliteopenhelper","text":"[androidJvm]\\ class SQLiteOpenHelper : ISQLiteOpenHelper The SQLiteOpenHelper class contains a useful set of APIs for managing your database. When you use this class to obtain references to your database, the system performs the potentially long-running operations of creating and updating the database lazily and only when needed, not during application startup. All you need to do is call writableDatabase().","title":"SQLiteOpenHelper"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/#since","text":"v0.1.0.","title":"Since"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/#constructors","text":"SQLiteOpenHelper [androidJvm] fun SQLiteOpenHelper (context: Context , configuration: ISQLiteOpenHelper.Configuration , version: Int , openParams: SQLiteOpenParams = SQLiteOpenParams())","title":"Constructors"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/#functions","text":"Name Summary close [androidJvm] open override fun close ()","title":"Functions"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/#properties","text":"Name Summary databaseName [androidJvm] open override val databaseName : String writableDatabase [androidJvm] open override val writableDatabase : SQLiteDatabase Create and/or open a database that will be used for reading and writing.","title":"Properties"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/-s-q-lite-open-helper/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenHelper / SQLiteOpenHelper SQLiteOpenHelper [androidJvm]\\ fun SQLiteOpenHelper (context: Context , configuration: ISQLiteOpenHelper.Configuration , version: Int , openParams: SQLiteOpenParams = SQLiteOpenParams())","title":" s q lite open helper"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/-s-q-lite-open-helper/#sqliteopenhelper","text":"[androidJvm]\\ fun SQLiteOpenHelper (context: Context , configuration: ISQLiteOpenHelper.Configuration , version: Int , openParams: SQLiteOpenParams = SQLiteOpenParams())","title":"SQLiteOpenHelper"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/close/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenHelper / close close [androidJvm]\\ open override fun close ()","title":"Close"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/close/#close","text":"[androidJvm]\\ open override fun close ()","title":"close"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/database-name/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenHelper / databaseName databaseName [androidJvm]\\ open override val databaseName : String","title":"Database name"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/database-name/#databasename","text":"[androidJvm]\\ open override val databaseName : String","title":"databaseName"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/writable-database/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenHelper / writableDatabase writableDatabase [androidJvm]\\ open override val writableDatabase : SQLiteDatabase Create and/or open a database that will be used for reading and writing. The first time this is called, the database will be opened and onCreate(SQLiteDatabase) and onUpgrade(SQLiteDatabase, int, int) or onDowngrade(SQLiteDatabase) can be called and each inside a transaction. If the transaction succeeds onOpen(SQLiteDatabase) is called. Once opened successfully, the database is cached, so you can call this method every time you need to write to the database. (Make sure to call close() when you no longer need the database.) Errors such as bad permissions or a full disk may cause this method to fail, but future attempts may succeed if the problem is fixed.","title":"Writable database"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-helper/writable-database/#writabledatabase","text":"[androidJvm]\\ open override val writableDatabase : SQLiteDatabase Create and/or open a database that will be used for reading and writing. The first time this is called, the database will be opened and onCreate(SQLiteDatabase) and onUpgrade(SQLiteDatabase, int, int) or onDowngrade(SQLiteDatabase) can be called and each inside a transaction. If the transaction succeeds onOpen(SQLiteDatabase) is called. Once opened successfully, the database is cached, so you can call this method every time you need to write to the database. (Make sure to call close() when you no longer need the database.) Errors such as bad permissions or a full disk may cause this method to fail, but future attempts may succeed if the problem is fixed.","title":"writableDatabase"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams SQLiteOpenParams [androidJvm]\\ data class SQLiteOpenParams ( journalMode : SQLiteJournalMode , pageSizeExponent : Int , trace : SQLiteTraceEventMode ?) Wrapper for configuration parameters that are used for opening a SQLiteDatabase . Constructors SQLiteOpenParams [androidJvm] fun SQLiteOpenParams (journalMode: SQLiteJournalMode = SQLiteJournalMode.WAL, pageSizeExponent: Int = 12, trace: SQLiteTraceEventMode ? = null) Types Name Summary Builder [androidJvm] @NotThreadSafe() class Builder ( journalMode : SQLiteJournalMode , pageSizeExponent : Int , trace : SQLiteTraceEventMode ?) Companion [androidJvm] object Companion Properties Name Summary journalMode [androidJvm] val journalMode : SQLiteJournalMode pageSizeExponent [androidJvm] val pageSizeExponent : Int = 12 trace [androidJvm] val trace : SQLiteTraceEventMode ? = null","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/#sqliteopenparams","text":"[androidJvm]\\ data class SQLiteOpenParams ( journalMode : SQLiteJournalMode , pageSizeExponent : Int , trace : SQLiteTraceEventMode ?) Wrapper for configuration parameters that are used for opening a SQLiteDatabase .","title":"SQLiteOpenParams"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/#constructors","text":"SQLiteOpenParams [androidJvm] fun SQLiteOpenParams (journalMode: SQLiteJournalMode = SQLiteJournalMode.WAL, pageSizeExponent: Int = 12, trace: SQLiteTraceEventMode ? = null)","title":"Constructors"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/#types","text":"Name Summary Builder [androidJvm] @NotThreadSafe() class Builder ( journalMode : SQLiteJournalMode , pageSizeExponent : Int , trace : SQLiteTraceEventMode ?) Companion [androidJvm] object Companion","title":"Types"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/#properties","text":"Name Summary journalMode [androidJvm] val journalMode : SQLiteJournalMode pageSizeExponent [androidJvm] val pageSizeExponent : Int = 12 trace [androidJvm] val trace : SQLiteTraceEventMode ? = null","title":"Properties"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-s-q-lite-open-params/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams / SQLiteOpenParams SQLiteOpenParams [androidJvm]\\ fun SQLiteOpenParams (journalMode: SQLiteJournalMode = SQLiteJournalMode.WAL, pageSizeExponent: Int = 12, trace: SQLiteTraceEventMode ? = null)","title":" s q lite open params"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-s-q-lite-open-params/#sqliteopenparams","text":"[androidJvm]\\ fun SQLiteOpenParams (journalMode: SQLiteJournalMode = SQLiteJournalMode.WAL, pageSizeExponent: Int = 12, trace: SQLiteTraceEventMode ? = null)","title":"SQLiteOpenParams"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/journal-mode/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams / journalMode journalMode [androidJvm]\\ val journalMode : SQLiteJournalMode","title":"Journal mode"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/journal-mode/#journalmode","text":"[androidJvm]\\ val journalMode : SQLiteJournalMode","title":"journalMode"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/page-size-exponent/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams / pageSizeExponent pageSizeExponent [androidJvm]\\ val pageSizeExponent : Int = 12","title":"Page size exponent"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/page-size-exponent/#pagesizeexponent","text":"[androidJvm]\\ val pageSizeExponent : Int = 12","title":"pageSizeExponent"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/trace/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams / trace trace [androidJvm]\\ val trace : SQLiteTraceEventMode ? = null","title":"Trace"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/trace/#trace","text":"[androidJvm]\\ val trace : SQLiteTraceEventMode ? = null","title":"trace"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-builder/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams / Builder Builder [androidJvm]\\ @NotThreadSafe() class Builder ( journalMode : SQLiteJournalMode , pageSizeExponent : Int , trace : SQLiteTraceEventMode ?) Functions Name Summary build [androidJvm] fun build (): SQLiteOpenParams setJournalMode [androidJvm] fun setJournalMode (journalMode: SQLiteJournalMode ): SQLiteOpenParams.Builder setPageSizeExponent [androidJvm] fun setPageSizeExponent (pageSizeExponent: Int ): SQLiteOpenParams.Builder setTraceEventMode [androidJvm] fun setTraceEventMode (trace: SQLiteTraceEventMode ?): SQLiteOpenParams.Builder","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-builder/#builder","text":"[androidJvm]\\ @NotThreadSafe() class Builder ( journalMode : SQLiteJournalMode , pageSizeExponent : Int , trace : SQLiteTraceEventMode ?)","title":"Builder"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-builder/#functions","text":"Name Summary build [androidJvm] fun build (): SQLiteOpenParams setJournalMode [androidJvm] fun setJournalMode (journalMode: SQLiteJournalMode ): SQLiteOpenParams.Builder setPageSizeExponent [androidJvm] fun setPageSizeExponent (pageSizeExponent: Int ): SQLiteOpenParams.Builder setTraceEventMode [androidJvm] fun setTraceEventMode (trace: SQLiteTraceEventMode ?): SQLiteOpenParams.Builder","title":"Functions"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-builder/-builder/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams / Builder / Builder Builder [androidJvm]\\ fun Builder (journalMode: SQLiteJournalMode = SQLiteJournalMode.WAL, pageSizeExponent: Int = 12, trace: SQLiteTraceEventMode ? = null)","title":" builder"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-builder/-builder/#builder","text":"[androidJvm]\\ fun Builder (journalMode: SQLiteJournalMode = SQLiteJournalMode.WAL, pageSizeExponent: Int = 12, trace: SQLiteTraceEventMode ? = null)","title":"Builder"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-builder/build/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams / Builder / build build [androidJvm]\\ fun build (): SQLiteOpenParams","title":"Build"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-builder/build/#build","text":"[androidJvm]\\ fun build (): SQLiteOpenParams","title":"build"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-builder/set-journal-mode/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams / Builder / setJournalMode setJournalMode [androidJvm]\\ fun setJournalMode (journalMode: SQLiteJournalMode ): SQLiteOpenParams.Builder","title":"Set journal mode"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-builder/set-journal-mode/#setjournalmode","text":"[androidJvm]\\ fun setJournalMode (journalMode: SQLiteJournalMode ): SQLiteOpenParams.Builder","title":"setJournalMode"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-builder/set-page-size-exponent/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams / Builder / setPageSizeExponent setPageSizeExponent [androidJvm]\\ fun setPageSizeExponent (pageSizeExponent: Int ): SQLiteOpenParams.Builder","title":"Set page size exponent"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-builder/set-page-size-exponent/#setpagesizeexponent","text":"[androidJvm]\\ fun setPageSizeExponent (pageSizeExponent: Int ): SQLiteOpenParams.Builder","title":"setPageSizeExponent"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-builder/set-trace-event-mode/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams / Builder / setTraceEventMode setTraceEventMode [androidJvm]\\ fun setTraceEventMode (trace: SQLiteTraceEventMode ?): SQLiteOpenParams.Builder","title":"Set trace event mode"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-builder/set-trace-event-mode/#settraceeventmode","text":"[androidJvm]\\ fun setTraceEventMode (trace: SQLiteTraceEventMode ?): SQLiteOpenParams.Builder","title":"setTraceEventMode"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-companion/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams / Companion Companion [androidJvm]\\ object Companion Properties Name Summary HIGHEST_PAGE_SIZE_EXPONENT [androidJvm] const val HIGHEST_PAGE_SIZE_EXPONENT : Int = 16 LOWEST_PAGE_SIZE_EXPONENT [androidJvm] const val LOWEST_PAGE_SIZE_EXPONENT : Int = 9","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-companion/#companion","text":"[androidJvm]\\ object Companion","title":"Companion"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-companion/#properties","text":"Name Summary HIGHEST_PAGE_SIZE_EXPONENT [androidJvm] const val HIGHEST_PAGE_SIZE_EXPONENT : Int = 16 LOWEST_PAGE_SIZE_EXPONENT [androidJvm] const val LOWEST_PAGE_SIZE_EXPONENT : Int = 9","title":"Properties"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-companion/-h-i-g-h-e-s-t_-p-a-g-e_-s-i-z-e_-e-x-p-o-n-e-n-t/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams / Companion / HIGHEST_PAGE_SIZE_EXPONENT HIGHEST_PAGE_SIZE_EXPONENT [androidJvm]\\ const val HIGHEST_PAGE_SIZE_EXPONENT : Int = 16","title":" h i g h e s t  p a g e  s i z e  e x p o n e n t"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-companion/-h-i-g-h-e-s-t_-p-a-g-e_-s-i-z-e_-e-x-p-o-n-e-n-t/#highest_page_size_exponent","text":"[androidJvm]\\ const val HIGHEST_PAGE_SIZE_EXPONENT : Int = 16","title":"HIGHEST_PAGE_SIZE_EXPONENT"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-companion/-l-o-w-e-s-t_-p-a-g-e_-s-i-z-e_-e-x-p-o-n-e-n-t/","text":"// Selekt / com.bloomberg.selekt.android / SQLiteOpenParams / Companion / LOWEST_PAGE_SIZE_EXPONENT LOWEST_PAGE_SIZE_EXPONENT [androidJvm]\\ const val LOWEST_PAGE_SIZE_EXPONENT : Int = 9","title":" l o w e s t  p a g e  s i z e  e x p o n e n t"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-s-q-lite-open-params/-companion/-l-o-w-e-s-t_-p-a-g-e_-s-i-z-e_-e-x-p-o-n-e-n-t/#lowest_page_size_exponent","text":"[androidJvm]\\ const val LOWEST_PAGE_SIZE_EXPONENT : Int = 9","title":"LOWEST_PAGE_SIZE_EXPONENT"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/","text":"// Selekt / com.bloomberg.selekt.android / Selekt Selekt [androidJvm]\\ object Selekt Functions Name Summary gitCommit [androidJvm] fun gitCommit (): registerComponentCallbackWith [androidJvm] fun registerComponentCallbackWith (application: Application ) Allow Selekt to register a component callback with an Application, allowing Selekt to respond to important memory pressure events during the Application's lifecycle. sqliteLibVersion [androidJvm] fun sqliteLibVersion (): sqliteLibVersionNumber [androidJvm] fun sqliteLibVersionNumber (): unregisterComponentCallbackFrom [androidJvm] fun unregisterComponentCallbackFrom (application: Application ) Allow Selekt to unregister its component callback from an Application.","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/#selekt","text":"[androidJvm]\\ object Selekt","title":"Selekt"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/#functions","text":"Name Summary gitCommit [androidJvm] fun gitCommit (): registerComponentCallbackWith [androidJvm] fun registerComponentCallbackWith (application: Application ) Allow Selekt to register a component callback with an Application, allowing Selekt to respond to important memory pressure events during the Application's lifecycle. sqliteLibVersion [androidJvm] fun sqliteLibVersion (): sqliteLibVersionNumber [androidJvm] fun sqliteLibVersionNumber (): unregisterComponentCallbackFrom [androidJvm] fun unregisterComponentCallbackFrom (application: Application ) Allow Selekt to unregister its component callback from an Application.","title":"Functions"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/git-commit/","text":"// Selekt / com.bloomberg.selekt.android / Selekt / gitCommit gitCommit [androidJvm]\\ fun gitCommit ():","title":"Git commit"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/git-commit/#gitcommit","text":"[androidJvm]\\ fun gitCommit ():","title":"gitCommit"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/register-component-callback-with/","text":"// Selekt / com.bloomberg.selekt.android / Selekt / registerComponentCallbackWith registerComponentCallbackWith [androidJvm]\\ fun registerComponentCallbackWith (application: Application ) Allow Selekt to register a component callback with an Application, allowing Selekt to respond to important memory pressure events during the Application's lifecycle. Since 0.10.0 Parameters androidJvm application with which to register the callback.","title":"Register component callback with"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/register-component-callback-with/#registercomponentcallbackwith","text":"[androidJvm]\\ fun registerComponentCallbackWith (application: Application ) Allow Selekt to register a component callback with an Application, allowing Selekt to respond to important memory pressure events during the Application's lifecycle.","title":"registerComponentCallbackWith"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/register-component-callback-with/#since","text":"0.10.0","title":"Since"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/register-component-callback-with/#parameters","text":"androidJvm application with which to register the callback.","title":"Parameters"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/sqlite-lib-version-number/","text":"// Selekt / com.bloomberg.selekt.android / Selekt / sqliteLibVersionNumber sqliteLibVersionNumber [androidJvm]\\ fun sqliteLibVersionNumber ():","title":"Sqlite lib version number"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/sqlite-lib-version-number/#sqlitelibversionnumber","text":"[androidJvm]\\ fun sqliteLibVersionNumber ():","title":"sqliteLibVersionNumber"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/sqlite-lib-version/","text":"// Selekt / com.bloomberg.selekt.android / Selekt / sqliteLibVersion sqliteLibVersion [androidJvm]\\ fun sqliteLibVersion ():","title":"Sqlite lib version"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/sqlite-lib-version/#sqlitelibversion","text":"[androidJvm]\\ fun sqliteLibVersion ():","title":"sqliteLibVersion"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/unregister-component-callback-from/","text":"// Selekt / com.bloomberg.selekt.android / Selekt / unregisterComponentCallbackFrom unregisterComponentCallbackFrom [androidJvm]\\ fun unregisterComponentCallbackFrom (application: Application ) Allow Selekt to unregister its component callback from an Application. Since 0.10.0 Parameters androidJvm application from which to unregister the callback.","title":"Unregister component callback from"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/unregister-component-callback-from/#unregistercomponentcallbackfrom","text":"[androidJvm]\\ fun unregisterComponentCallbackFrom (application: Application ) Allow Selekt to unregister its component callback from an Application.","title":"unregisterComponentCallbackFrom"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/unregister-component-callback-from/#since","text":"0.10.0","title":"Since"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android/-selekt/unregister-component-callback-from/#parameters","text":"androidJvm application from which to unregister the callback.","title":"Parameters"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android.support/","text":"// Selekt / com.bloomberg.selekt.android.support Package com.bloomberg.selekt.android.support Functions Name Summary createSupportSQLiteOpenHelperFactory [androidJvm] fun createSupportSQLiteOpenHelperFactory (journalMode: SQLiteJournalMode , key: ByteArray ?): SupportSQLiteOpenHelper.Factory","title":"Index"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android.support/#package-combloombergselektandroidsupport","text":"","title":"Package com.bloomberg.selekt.android.support"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android.support/#functions","text":"Name Summary createSupportSQLiteOpenHelperFactory [androidJvm] fun createSupportSQLiteOpenHelperFactory (journalMode: SQLiteJournalMode , key: ByteArray ?): SupportSQLiteOpenHelper.Factory","title":"Functions"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android.support/create-support-s-q-lite-open-helper-factory/","text":"// Selekt / com.bloomberg.selekt.android.support / createSupportSQLiteOpenHelperFactory createSupportSQLiteOpenHelperFactory [androidJvm]\\ fun createSupportSQLiteOpenHelperFactory (journalMode: SQLiteJournalMode , key: ByteArray ?): SupportSQLiteOpenHelper.Factory","title":"Create support s q lite open helper factory"},{"location":"kdoc/AndroidLib/-selekt/com.bloomberg.selekt.android.support/create-support-s-q-lite-open-helper-factory/#createsupportsqliteopenhelperfactory","text":"[androidJvm]\\ fun createSupportSQLiteOpenHelperFactory (journalMode: SQLiteJournalMode , key: ByteArray ?): SupportSQLiteOpenHelper.Factory","title":"createSupportSQLiteOpenHelperFactory"},{"location":"kdoc/ApiLib/","text":"// ApiLib ApiLib Packages Name com.bloomberg.selekt","title":"Index"},{"location":"kdoc/ApiLib/#apilib","text":"","title":"ApiLib"},{"location":"kdoc/ApiLib/#packages","text":"Name com.bloomberg.selekt","title":"Packages"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/","text":"// ApiLib / com.bloomberg.selekt Package com.bloomberg.selekt Types Name Summary DatabaseConfiguration [jvm] data class DatabaseConfiguration ( borrowWaitTimeoutMillis : Long , busyTimeoutMillis : Int , evictionDelayMillis : Long , maxConnectionPoolSize : Int , maxSqlCacheSize : Int , name : String , secureDelete : SQLiteSecureDelete , timeBetweenEvictionRunsMillis : Long , trace : SQLiteTraceEventMode ?) Experimental [jvm] @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION ]) annotation class Experimental ISQLProgram [jvm] interface ISQLProgram : Closeable ISQLQuery [jvm] interface ISQLQuery ISQLStatement [jvm] interface ISQLStatement : ISQLProgram SQLiteAutoVacuumMode [jvm] enum SQLiteAutoVacuumMode : Enum < SQLiteAutoVacuumMode > SQLiteJournalMode [jvm] enum SQLiteJournalMode : Enum < SQLiteJournalMode > SQLiteSecureDelete [jvm] enum SQLiteSecureDelete : Enum < SQLiteSecureDelete > When secure_delete is on, SQLite overwrites deleted content with zeros. SQLiteThreadingMode [jvm] enum SQLiteThreadingMode : Enum < SQLiteThreadingMode > SQLiteTraceEventMode [jvm] @NotThreadSafe() class SQLiteTraceEventMode SQLiteTransactionMode [jvm] enum SQLiteTransactionMode : Enum < SQLiteTransactionMode > SQLTraceEventCode [jvm] enum SQLTraceEventCode : Enum < SQLTraceEventCode > ZeroBlob [jvm] @ JvmInline () value class ZeroBlob ( size : Int )","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/#package-combloombergselekt","text":"","title":"Package com.bloomberg.selekt"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/#types","text":"Name Summary DatabaseConfiguration [jvm] data class DatabaseConfiguration ( borrowWaitTimeoutMillis : Long , busyTimeoutMillis : Int , evictionDelayMillis : Long , maxConnectionPoolSize : Int , maxSqlCacheSize : Int , name : String , secureDelete : SQLiteSecureDelete , timeBetweenEvictionRunsMillis : Long , trace : SQLiteTraceEventMode ?) Experimental [jvm] @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION ]) annotation class Experimental ISQLProgram [jvm] interface ISQLProgram : Closeable ISQLQuery [jvm] interface ISQLQuery ISQLStatement [jvm] interface ISQLStatement : ISQLProgram SQLiteAutoVacuumMode [jvm] enum SQLiteAutoVacuumMode : Enum < SQLiteAutoVacuumMode > SQLiteJournalMode [jvm] enum SQLiteJournalMode : Enum < SQLiteJournalMode > SQLiteSecureDelete [jvm] enum SQLiteSecureDelete : Enum < SQLiteSecureDelete > When secure_delete is on, SQLite overwrites deleted content with zeros. SQLiteThreadingMode [jvm] enum SQLiteThreadingMode : Enum < SQLiteThreadingMode > SQLiteTraceEventMode [jvm] @NotThreadSafe() class SQLiteTraceEventMode SQLiteTransactionMode [jvm] enum SQLiteTransactionMode : Enum < SQLiteTransactionMode > SQLTraceEventCode [jvm] enum SQLTraceEventCode : Enum < SQLTraceEventCode > ZeroBlob [jvm] @ JvmInline () value class ZeroBlob ( size : Int )","title":"Types"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/","text":"// ApiLib / com.bloomberg.selekt / DatabaseConfiguration DatabaseConfiguration [jvm]\\ data class DatabaseConfiguration ( borrowWaitTimeoutMillis : Long , busyTimeoutMillis : Int , evictionDelayMillis : Long , maxConnectionPoolSize : Int , maxSqlCacheSize : Int , name : String , secureDelete : SQLiteSecureDelete , timeBetweenEvictionRunsMillis : Long , trace : SQLiteTraceEventMode ?) Types Name Summary Companion [jvm] object Companion Properties Name Summary borrowWaitTimeoutMillis [jvm] val borrowWaitTimeoutMillis : Long busyTimeoutMillis [jvm] val busyTimeoutMillis : Int = 0 evictionDelayMillis [jvm] val evictionDelayMillis : Long maxConnectionPoolSize [jvm] val maxConnectionPoolSize : Int maxSqlCacheSize [jvm] val maxSqlCacheSize : Int Maximum size of the prepared statement cache. name [jvm] val name : String secureDelete [jvm] val secureDelete : SQLiteSecureDelete timeBetweenEvictionRunsMillis [jvm] val timeBetweenEvictionRunsMillis : Long Time between idle connection eviction runs in milliseconds, -1L for never. trace [jvm] val trace : SQLiteTraceEventMode ? = null","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/#databaseconfiguration","text":"[jvm]\\ data class DatabaseConfiguration ( borrowWaitTimeoutMillis : Long , busyTimeoutMillis : Int , evictionDelayMillis : Long , maxConnectionPoolSize : Int , maxSqlCacheSize : Int , name : String , secureDelete : SQLiteSecureDelete , timeBetweenEvictionRunsMillis : Long , trace : SQLiteTraceEventMode ?)","title":"DatabaseConfiguration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/#types","text":"Name Summary Companion [jvm] object Companion","title":"Types"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/#properties","text":"Name Summary borrowWaitTimeoutMillis [jvm] val borrowWaitTimeoutMillis : Long busyTimeoutMillis [jvm] val busyTimeoutMillis : Int = 0 evictionDelayMillis [jvm] val evictionDelayMillis : Long maxConnectionPoolSize [jvm] val maxConnectionPoolSize : Int maxSqlCacheSize [jvm] val maxSqlCacheSize : Int Maximum size of the prepared statement cache. name [jvm] val name : String secureDelete [jvm] val secureDelete : SQLiteSecureDelete timeBetweenEvictionRunsMillis [jvm] val timeBetweenEvictionRunsMillis : Long Time between idle connection eviction runs in milliseconds, -1L for never. trace [jvm] val trace : SQLiteTraceEventMode ? = null","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/-database-configuration/","text":"// ApiLib / com.bloomberg.selekt / DatabaseConfiguration / DatabaseConfiguration DatabaseConfiguration [jvm]\\ fun DatabaseConfiguration (borrowWaitTimeoutMillis: Long = -1L, busyTimeoutMillis: Int = 0, evictionDelayMillis: Long , maxConnectionPoolSize: Int , maxSqlCacheSize: Int , name: String = \"main\", secureDelete: SQLiteSecureDelete = SQLiteSecureDelete.FAST, timeBetweenEvictionRunsMillis: Long , trace: SQLiteTraceEventMode ? = null)","title":" database configuration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/-database-configuration/#databaseconfiguration","text":"[jvm]\\ fun DatabaseConfiguration (borrowWaitTimeoutMillis: Long = -1L, busyTimeoutMillis: Int = 0, evictionDelayMillis: Long , maxConnectionPoolSize: Int , maxSqlCacheSize: Int , name: String = \"main\", secureDelete: SQLiteSecureDelete = SQLiteSecureDelete.FAST, timeBetweenEvictionRunsMillis: Long , trace: SQLiteTraceEventMode ? = null)","title":"DatabaseConfiguration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/borrow-wait-timeout-millis/","text":"// ApiLib / com.bloomberg.selekt / DatabaseConfiguration / borrowWaitTimeoutMillis borrowWaitTimeoutMillis [jvm]\\ val borrowWaitTimeoutMillis : Long","title":"Borrow wait timeout millis"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/borrow-wait-timeout-millis/#borrowwaittimeoutmillis","text":"[jvm]\\ val borrowWaitTimeoutMillis : Long","title":"borrowWaitTimeoutMillis"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/busy-timeout-millis/","text":"// ApiLib / com.bloomberg.selekt / DatabaseConfiguration / busyTimeoutMillis busyTimeoutMillis [jvm]\\ val busyTimeoutMillis : Int = 0","title":"Busy timeout millis"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/busy-timeout-millis/#busytimeoutmillis","text":"[jvm]\\ val busyTimeoutMillis : Int = 0","title":"busyTimeoutMillis"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/eviction-delay-millis/","text":"// ApiLib / com.bloomberg.selekt / DatabaseConfiguration / evictionDelayMillis evictionDelayMillis [jvm]\\ val evictionDelayMillis : Long","title":"Eviction delay millis"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/eviction-delay-millis/#evictiondelaymillis","text":"[jvm]\\ val evictionDelayMillis : Long","title":"evictionDelayMillis"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/max-connection-pool-size/","text":"// ApiLib / com.bloomberg.selekt / DatabaseConfiguration / maxConnectionPoolSize maxConnectionPoolSize [jvm]\\ val maxConnectionPoolSize : Int","title":"Max connection pool size"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/max-connection-pool-size/#maxconnectionpoolsize","text":"[jvm]\\ val maxConnectionPoolSize : Int","title":"maxConnectionPoolSize"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/max-sql-cache-size/","text":"// ApiLib / com.bloomberg.selekt / DatabaseConfiguration / maxSqlCacheSize maxSqlCacheSize [jvm]\\ val maxSqlCacheSize : Int Maximum size of the prepared statement cache. Each prepared statement is between 1KB and 6KB, depending on the complexity of the SQL statement and schema. A large cache may use a significant amount of memory.","title":"Max sql cache size"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/max-sql-cache-size/#maxsqlcachesize","text":"[jvm]\\ val maxSqlCacheSize : Int Maximum size of the prepared statement cache. Each prepared statement is between 1KB and 6KB, depending on the complexity of the SQL statement and schema. A large cache may use a significant amount of memory.","title":"maxSqlCacheSize"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/name/","text":"// ApiLib / com.bloomberg.selekt / DatabaseConfiguration / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/secure-delete/","text":"// ApiLib / com.bloomberg.selekt / DatabaseConfiguration / secureDelete secureDelete [jvm]\\ val secureDelete : SQLiteSecureDelete","title":"Secure delete"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/secure-delete/#securedelete","text":"[jvm]\\ val secureDelete : SQLiteSecureDelete","title":"secureDelete"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/time-between-eviction-runs-millis/","text":"// ApiLib / com.bloomberg.selekt / DatabaseConfiguration / timeBetweenEvictionRunsMillis timeBetweenEvictionRunsMillis [jvm]\\ val timeBetweenEvictionRunsMillis : Long Time between idle connection eviction runs in milliseconds, -1L for never.","title":"Time between eviction runs millis"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/time-between-eviction-runs-millis/#timebetweenevictionrunsmillis","text":"[jvm]\\ val timeBetweenEvictionRunsMillis : Long Time between idle connection eviction runs in milliseconds, -1L for never.","title":"timeBetweenEvictionRunsMillis"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/trace/","text":"// ApiLib / com.bloomberg.selekt / DatabaseConfiguration / trace trace [jvm]\\ val trace : SQLiteTraceEventMode ? = null","title":"Trace"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/trace/#trace","text":"[jvm]\\ val trace : SQLiteTraceEventMode ? = null","title":"trace"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/-companion/","text":"// ApiLib / com.bloomberg.selekt / DatabaseConfiguration / Companion Companion [jvm]\\ object Companion Properties Name Summary COMMON_BUSY_TIMEOUT_MILLIS [jvm] const val COMMON_BUSY_TIMEOUT_MILLIS : Int = 2_500 When using WAL, a timeout could occur if one connection is busy performing an auto-checkpoint operation.","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/-companion/#companion","text":"[jvm]\\ object Companion","title":"Companion"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/-companion/#properties","text":"Name Summary COMMON_BUSY_TIMEOUT_MILLIS [jvm] const val COMMON_BUSY_TIMEOUT_MILLIS : Int = 2_500 When using WAL, a timeout could occur if one connection is busy performing an auto-checkpoint operation.","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/-companion/-c-o-m-m-o-n_-b-u-s-y_-t-i-m-e-o-u-t_-m-i-l-l-i-s/","text":"// ApiLib / com.bloomberg.selekt / DatabaseConfiguration / Companion / COMMON_BUSY_TIMEOUT_MILLIS COMMON_BUSY_TIMEOUT_MILLIS [jvm]\\ const val COMMON_BUSY_TIMEOUT_MILLIS : Int = 2_500 When using WAL, a timeout could occur if one connection is busy performing an auto-checkpoint operation. The busy timeout needs to be long enough to tolerate slow I/O write operations but not so long as to cause the application to hang indefinitely if there is a problem acquiring a database lock. See also jvm SQLite's busy_timeout","title":" c o m m o n  b u s y  t i m e o u t  m i l l i s"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/-companion/-c-o-m-m-o-n_-b-u-s-y_-t-i-m-e-o-u-t_-m-i-l-l-i-s/#common_busy_timeout_millis","text":"[jvm]\\ const val COMMON_BUSY_TIMEOUT_MILLIS : Int = 2_500 When using WAL, a timeout could occur if one connection is busy performing an auto-checkpoint operation. The busy timeout needs to be long enough to tolerate slow I/O write operations but not so long as to cause the application to hang indefinitely if there is a problem acquiring a database lock.","title":"COMMON_BUSY_TIMEOUT_MILLIS"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-database-configuration/-companion/-c-o-m-m-o-n_-b-u-s-y_-t-i-m-e-o-u-t_-m-i-l-l-i-s/#see-also","text":"jvm SQLite's busy_timeout","title":"See also"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-experimental/","text":"// ApiLib / com.bloomberg.selekt / Experimental Experimental [jvm]\\ @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION ]) annotation class Experimental","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-experimental/#experimental","text":"[jvm]\\ @ Target (allowedTargets = [ AnnotationTarget.CLASS , AnnotationTarget.FUNCTION ]) annotation class Experimental","title":"Experimental"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-experimental/-experimental/","text":"// ApiLib / com.bloomberg.selekt / Experimental / Experimental Experimental [jvm]\\ fun Experimental ()","title":" experimental"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-experimental/-experimental/#experimental","text":"[jvm]\\ fun Experimental ()","title":"Experimental"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/","text":"// ApiLib / com.bloomberg.selekt / ISQLProgram ISQLProgram [jvm]\\ interface ISQLProgram : Closeable Functions Name Summary bindBlob [jvm] abstract fun bindBlob (index: Int , value: ByteArray ) Bind a byte array value to this statement. bindDouble [jvm] abstract fun bindDouble (index: Int , value: Double ) Bind a double value to this statement. bindInt [jvm] abstract fun bindInt (index: Int , value: Int ) Bind an integer value to this statement. bindLong [jvm] abstract fun bindLong (index: Int , value: Long ) Bind a long value to this statement. bindNull [jvm] abstract fun bindNull (index: Int ) Bind a null value to this statement. bindString [jvm] abstract fun bindString (index: Int , value: String ) Bind a String value to this statement. clearBindings [jvm] abstract fun clearBindings () Clears all existing bindings. close [jvm] abstract override fun close () Inheritors Name ISQLStatement","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/#isqlprogram","text":"[jvm]\\ interface ISQLProgram : Closeable","title":"ISQLProgram"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/#functions","text":"Name Summary bindBlob [jvm] abstract fun bindBlob (index: Int , value: ByteArray ) Bind a byte array value to this statement. bindDouble [jvm] abstract fun bindDouble (index: Int , value: Double ) Bind a double value to this statement. bindInt [jvm] abstract fun bindInt (index: Int , value: Int ) Bind an integer value to this statement. bindLong [jvm] abstract fun bindLong (index: Int , value: Long ) Bind a long value to this statement. bindNull [jvm] abstract fun bindNull (index: Int ) Bind a null value to this statement. bindString [jvm] abstract fun bindString (index: Int , value: String ) Bind a String value to this statement. clearBindings [jvm] abstract fun clearBindings () Clears all existing bindings. close [jvm] abstract override fun close ()","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/#inheritors","text":"Name ISQLStatement","title":"Inheritors"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-blob/","text":"// ApiLib / com.bloomberg.selekt / ISQLProgram / bindBlob bindBlob [jvm]\\ abstract fun bindBlob (index: Int , value: ByteArray ) Bind a byte array value to this statement. The value remains bound until clearBindings is called. Parameters jvm index The 1-based index to the parameter to bind. value The value to bind.","title":"Bind blob"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-blob/#bindblob","text":"[jvm]\\ abstract fun bindBlob (index: Int , value: ByteArray ) Bind a byte array value to this statement. The value remains bound until clearBindings is called.","title":"bindBlob"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-blob/#parameters","text":"jvm index The 1-based index to the parameter to bind. value The value to bind.","title":"Parameters"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-double/","text":"// ApiLib / com.bloomberg.selekt / ISQLProgram / bindDouble bindDouble [jvm]\\ abstract fun bindDouble (index: Int , value: Double ) Bind a double value to this statement. The value remains bound until clearBindings is called. Parameters jvm index The 1-based index to the parameter to bind. value The value to bind.","title":"Bind double"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-double/#binddouble","text":"[jvm]\\ abstract fun bindDouble (index: Int , value: Double ) Bind a double value to this statement. The value remains bound until clearBindings is called.","title":"bindDouble"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-double/#parameters","text":"jvm index The 1-based index to the parameter to bind. value The value to bind.","title":"Parameters"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-int/","text":"// ApiLib / com.bloomberg.selekt / ISQLProgram / bindInt bindInt [jvm]\\ abstract fun bindInt (index: Int , value: Int ) Bind an integer value to this statement. The value remains bound until clearBindings is called. Parameters jvm index The 1-based index to the parameter to bind. value The value to bind.","title":"Bind int"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-int/#bindint","text":"[jvm]\\ abstract fun bindInt (index: Int , value: Int ) Bind an integer value to this statement. The value remains bound until clearBindings is called.","title":"bindInt"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-int/#parameters","text":"jvm index The 1-based index to the parameter to bind. value The value to bind.","title":"Parameters"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-long/","text":"// ApiLib / com.bloomberg.selekt / ISQLProgram / bindLong bindLong [jvm]\\ abstract fun bindLong (index: Int , value: Long ) Bind a long value to this statement. The value remains bound until clearBindings is called. Parameters jvm index The 1-based index to the parameter to bind. value The value to bind.","title":"Bind long"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-long/#bindlong","text":"[jvm]\\ abstract fun bindLong (index: Int , value: Long ) Bind a long value to this statement. The value remains bound until clearBindings is called.","title":"bindLong"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-long/#parameters","text":"jvm index The 1-based index to the parameter to bind. value The value to bind.","title":"Parameters"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-null/","text":"// ApiLib / com.bloomberg.selekt / ISQLProgram / bindNull bindNull [jvm]\\ abstract fun bindNull (index: Int ) Bind a null value to this statement. The value remains bound until clearBindings is called. Parameters jvm index The 1-based index to the parameter to bind.","title":"Bind null"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-null/#bindnull","text":"[jvm]\\ abstract fun bindNull (index: Int ) Bind a null value to this statement. The value remains bound until clearBindings is called.","title":"bindNull"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-null/#parameters","text":"jvm index The 1-based index to the parameter to bind.","title":"Parameters"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-string/","text":"// ApiLib / com.bloomberg.selekt / ISQLProgram / bindString bindString [jvm]\\ abstract fun bindString (index: Int , value: String ) Bind a String value to this statement. The value remains bound until clearBindings is called. Parameters jvm index The 1-based index to the parameter to bind. value The value to bind.","title":"Bind string"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-string/#bindstring","text":"[jvm]\\ abstract fun bindString (index: Int , value: String ) Bind a String value to this statement. The value remains bound until clearBindings is called.","title":"bindString"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/bind-string/#parameters","text":"jvm index The 1-based index to the parameter to bind. value The value to bind.","title":"Parameters"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/clear-bindings/","text":"// ApiLib / com.bloomberg.selekt / ISQLProgram / clearBindings clearBindings [jvm]\\ abstract fun clearBindings () Clears all existing bindings. Unset bindings are treated as null.","title":"Clear bindings"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-program/clear-bindings/#clearbindings","text":"[jvm]\\ abstract fun clearBindings () Clears all existing bindings. Unset bindings are treated as null.","title":"clearBindings"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-query/","text":"// ApiLib / com.bloomberg.selekt / ISQLQuery ISQLQuery [jvm]\\ interface ISQLQuery Functions Name Summary bindTo [jvm] abstract fun bindTo (statement: ISQLProgram ) Properties Name Summary argCount [jvm] abstract val argCount : Int sql [jvm] abstract val sql : String","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-query/#isqlquery","text":"[jvm]\\ interface ISQLQuery","title":"ISQLQuery"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-query/#functions","text":"Name Summary bindTo [jvm] abstract fun bindTo (statement: ISQLProgram )","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-query/#properties","text":"Name Summary argCount [jvm] abstract val argCount : Int sql [jvm] abstract val sql : String","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-query/arg-count/","text":"// ApiLib / com.bloomberg.selekt / ISQLQuery / argCount argCount [jvm]\\ abstract val argCount : Int","title":"Arg count"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-query/arg-count/#argcount","text":"[jvm]\\ abstract val argCount : Int","title":"argCount"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-query/bind-to/","text":"// ApiLib / com.bloomberg.selekt / ISQLQuery / bindTo bindTo [jvm]\\ abstract fun bindTo (statement: ISQLProgram )","title":"Bind to"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-query/bind-to/#bindto","text":"[jvm]\\ abstract fun bindTo (statement: ISQLProgram )","title":"bindTo"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-query/sql/","text":"// ApiLib / com.bloomberg.selekt / ISQLQuery / sql sql [jvm]\\ abstract val sql : String","title":"Sql"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-query/sql/#sql","text":"[jvm]\\ abstract val sql : String","title":"sql"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-statement/","text":"// ApiLib / com.bloomberg.selekt / ISQLStatement ISQLStatement [jvm]\\ interface ISQLStatement : ISQLProgram Functions Name Summary bindBlob [jvm] abstract fun bindBlob (index: Int , value: ByteArray ) Bind a byte array value to this statement. bindDouble [jvm] abstract fun bindDouble (index: Int , value: Double ) Bind a double value to this statement. bindInt [jvm] abstract fun bindInt (index: Int , value: Int ) Bind an integer value to this statement. bindLong [jvm] abstract fun bindLong (index: Int , value: Long ) Bind a long value to this statement. bindNull [jvm] abstract fun bindNull (index: Int ) Bind a null value to this statement. bindString [jvm] abstract fun bindString (index: Int , value: String ) Bind a String value to this statement. clearBindings [jvm] abstract fun clearBindings () Clears all existing bindings. close [jvm] abstract override fun close () execute [jvm] abstract fun execute () executeInsert [jvm] abstract fun executeInsert (): Long executeUpdateDelete [jvm] abstract fun executeUpdateDelete (): Int simpleQueryForLong [jvm] abstract fun simpleQueryForLong (): Long simpleQueryForString [jvm] abstract fun simpleQueryForString (): String ?","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-statement/#isqlstatement","text":"[jvm]\\ interface ISQLStatement : ISQLProgram","title":"ISQLStatement"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-statement/#functions","text":"Name Summary bindBlob [jvm] abstract fun bindBlob (index: Int , value: ByteArray ) Bind a byte array value to this statement. bindDouble [jvm] abstract fun bindDouble (index: Int , value: Double ) Bind a double value to this statement. bindInt [jvm] abstract fun bindInt (index: Int , value: Int ) Bind an integer value to this statement. bindLong [jvm] abstract fun bindLong (index: Int , value: Long ) Bind a long value to this statement. bindNull [jvm] abstract fun bindNull (index: Int ) Bind a null value to this statement. bindString [jvm] abstract fun bindString (index: Int , value: String ) Bind a String value to this statement. clearBindings [jvm] abstract fun clearBindings () Clears all existing bindings. close [jvm] abstract override fun close () execute [jvm] abstract fun execute () executeInsert [jvm] abstract fun executeInsert (): Long executeUpdateDelete [jvm] abstract fun executeUpdateDelete (): Int simpleQueryForLong [jvm] abstract fun simpleQueryForLong (): Long simpleQueryForString [jvm] abstract fun simpleQueryForString (): String ?","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-statement/execute-insert/","text":"// ApiLib / com.bloomberg.selekt / ISQLStatement / executeInsert executeInsert [jvm]\\ abstract fun executeInsert (): Long","title":"Execute insert"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-statement/execute-insert/#executeinsert","text":"[jvm]\\ abstract fun executeInsert (): Long","title":"executeInsert"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-statement/execute-update-delete/","text":"// ApiLib / com.bloomberg.selekt / ISQLStatement / executeUpdateDelete executeUpdateDelete [jvm]\\ abstract fun executeUpdateDelete (): Int","title":"Execute update delete"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-statement/execute-update-delete/#executeupdatedelete","text":"[jvm]\\ abstract fun executeUpdateDelete (): Int","title":"executeUpdateDelete"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-statement/execute/","text":"// ApiLib / com.bloomberg.selekt / ISQLStatement / execute execute [jvm]\\ abstract fun execute ()","title":"Execute"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-statement/execute/#execute","text":"[jvm]\\ abstract fun execute ()","title":"execute"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-statement/simple-query-for-long/","text":"// ApiLib / com.bloomberg.selekt / ISQLStatement / simpleQueryForLong simpleQueryForLong [jvm]\\ abstract fun simpleQueryForLong (): Long","title":"Simple query for long"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-statement/simple-query-for-long/#simplequeryforlong","text":"[jvm]\\ abstract fun simpleQueryForLong (): Long","title":"simpleQueryForLong"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-statement/simple-query-for-string/","text":"// ApiLib / com.bloomberg.selekt / ISQLStatement / simpleQueryForString simpleQueryForString [jvm]\\ abstract fun simpleQueryForString (): String ?","title":"Simple query for string"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-i-s-q-l-statement/simple-query-for-string/#simplequeryforstring","text":"[jvm]\\ abstract fun simpleQueryForString (): String ?","title":"simpleQueryForString"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode SQLTraceEventCode [jvm]\\ enum SQLTraceEventCode : Enum < SQLTraceEventCode > Entries CLOSE [jvm] CLOSE (TraceCodes.CLOSE) ROW [jvm] ROW (TraceCodes.ROW) PROFILE [jvm] PROFILE (TraceCodes.PROFILE) STATEMENT [jvm] STATEMENT (TraceCodes.STATEMENT) Functions Name Summary invoke [jvm] operator fun invoke (): Int Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/#sqltraceeventcode","text":"[jvm]\\ enum SQLTraceEventCode : Enum < SQLTraceEventCode >","title":"SQLTraceEventCode"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/#entries","text":"CLOSE [jvm] CLOSE (TraceCodes.CLOSE) ROW [jvm] ROW (TraceCodes.ROW) PROFILE [jvm] PROFILE (TraceCodes.PROFILE) STATEMENT [jvm] STATEMENT (TraceCodes.STATEMENT)","title":"Entries"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/#functions","text":"Name Summary invoke [jvm] operator fun invoke (): Int","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/invoke/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode / invoke invoke [jvm]\\ operator fun invoke (): Int","title":"Invoke"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/invoke/#invoke","text":"[jvm]\\ operator fun invoke (): Int","title":"invoke"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-c-l-o-s-e/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode / CLOSE CLOSE [jvm]\\ CLOSE (TraceCodes.CLOSE) Functions Name Summary invoke [jvm] operator fun invoke (): Int Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-c-l-o-s-e/#close","text":"[jvm]\\ CLOSE (TraceCodes.CLOSE)","title":"CLOSE"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-c-l-o-s-e/#functions","text":"Name Summary invoke [jvm] operator fun invoke (): Int","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-c-l-o-s-e/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-c-l-o-s-e/name/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode / CLOSE / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-c-l-o-s-e/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-c-l-o-s-e/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode / CLOSE / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-c-l-o-s-e/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-p-r-o-f-i-l-e/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode / PROFILE PROFILE [jvm]\\ PROFILE (TraceCodes.PROFILE) Functions Name Summary invoke [jvm] operator fun invoke (): Int Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-p-r-o-f-i-l-e/#profile","text":"[jvm]\\ PROFILE (TraceCodes.PROFILE)","title":"PROFILE"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-p-r-o-f-i-l-e/#functions","text":"Name Summary invoke [jvm] operator fun invoke (): Int","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-p-r-o-f-i-l-e/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-p-r-o-f-i-l-e/name/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode / PROFILE / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-p-r-o-f-i-l-e/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-p-r-o-f-i-l-e/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode / PROFILE / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-p-r-o-f-i-l-e/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-r-o-w/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode / ROW ROW [jvm]\\ ROW (TraceCodes.ROW) Functions Name Summary invoke [jvm] operator fun invoke (): Int Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-r-o-w/#row","text":"[jvm]\\ ROW (TraceCodes.ROW)","title":"ROW"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-r-o-w/#functions","text":"Name Summary invoke [jvm] operator fun invoke (): Int","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-r-o-w/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-r-o-w/name/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode / ROW / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-r-o-w/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-r-o-w/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode / ROW / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-r-o-w/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-s-t-a-t-e-m-e-n-t/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode / STATEMENT STATEMENT [jvm]\\ STATEMENT (TraceCodes.STATEMENT) Functions Name Summary invoke [jvm] operator fun invoke (): Int Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-s-t-a-t-e-m-e-n-t/#statement","text":"[jvm]\\ STATEMENT (TraceCodes.STATEMENT)","title":"STATEMENT"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-s-t-a-t-e-m-e-n-t/#functions","text":"Name Summary invoke [jvm] operator fun invoke (): Int","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-s-t-a-t-e-m-e-n-t/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-s-t-a-t-e-m-e-n-t/name/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode / STATEMENT / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-s-t-a-t-e-m-e-n-t/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-s-t-a-t-e-m-e-n-t/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLTraceEventCode / STATEMENT / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-l-trace-event-code/-s-t-a-t-e-m-e-n-t/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/","text":"// ApiLib / com.bloomberg.selekt / SQLiteAutoVacuumMode SQLiteAutoVacuumMode [jvm]\\ enum SQLiteAutoVacuumMode : Enum < SQLiteAutoVacuumMode > Entries INCREMENTAL [jvm] INCREMENTAL (2) The additional information needed to do auto-vacuuming is stored in the database file but auto-vacuuming does not occur automatically at each commit as it does with \"full\". FULL [jvm] FULL (1) The freelist pages are moved to the end of the database file and the database file is truncated to remove the freelist pages at every transaction commit. NONE [jvm] NONE (0) Auto-vacuum is disabled. Functions Name Summary invoke [jvm] operator fun invoke (): Int Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/#sqliteautovacuummode","text":"[jvm]\\ enum SQLiteAutoVacuumMode : Enum < SQLiteAutoVacuumMode >","title":"SQLiteAutoVacuumMode"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/#entries","text":"INCREMENTAL [jvm] INCREMENTAL (2) The additional information needed to do auto-vacuuming is stored in the database file but auto-vacuuming does not occur automatically at each commit as it does with \"full\". FULL [jvm] FULL (1) The freelist pages are moved to the end of the database file and the database file is truncated to remove the freelist pages at every transaction commit. NONE [jvm] NONE (0) Auto-vacuum is disabled.","title":"Entries"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/#functions","text":"Name Summary invoke [jvm] operator fun invoke (): Int","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/invoke/","text":"// ApiLib / com.bloomberg.selekt / SQLiteAutoVacuumMode / invoke invoke [jvm]\\ operator fun invoke (): Int","title":"Invoke"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/invoke/#invoke","text":"[jvm]\\ operator fun invoke (): Int","title":"invoke"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-f-u-l-l/","text":"// ApiLib / com.bloomberg.selekt / SQLiteAutoVacuumMode / FULL FULL [jvm]\\ FULL (1) The freelist pages are moved to the end of the database file and the database file is truncated to remove the freelist pages at every transaction commit. Note, however, that auto-vacuum only truncates the freelist pages from the file. Auto-vacuum does not defragment the database nor repack individual database pages the way that vacuum does. In fact, because it moves pages around within the file, auto-vacuum can actually make fragmentation worse. Functions Name Summary invoke [jvm] operator fun invoke (): Int Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-f-u-l-l/#full","text":"[jvm]\\ FULL (1) The freelist pages are moved to the end of the database file and the database file is truncated to remove the freelist pages at every transaction commit. Note, however, that auto-vacuum only truncates the freelist pages from the file. Auto-vacuum does not defragment the database nor repack individual database pages the way that vacuum does. In fact, because it moves pages around within the file, auto-vacuum can actually make fragmentation worse.","title":"FULL"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-f-u-l-l/#functions","text":"Name Summary invoke [jvm] operator fun invoke (): Int","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-f-u-l-l/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-f-u-l-l/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteAutoVacuumMode / FULL / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-f-u-l-l/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-f-u-l-l/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteAutoVacuumMode / FULL / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-f-u-l-l/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-i-n-c-r-e-m-e-n-t-a-l/","text":"// ApiLib / com.bloomberg.selekt / SQLiteAutoVacuumMode / INCREMENTAL INCREMENTAL [jvm]\\ INCREMENTAL (2) The additional information needed to do auto-vacuuming is stored in the database file but auto-vacuuming does not occur automatically at each commit as it does with \"full\". In incremental mode, the separate incremental vacuum pragma must be invoked to cause the auto-vacuum to occur. Functions Name Summary invoke [jvm] operator fun invoke (): Int Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-i-n-c-r-e-m-e-n-t-a-l/#incremental","text":"[jvm]\\ INCREMENTAL (2) The additional information needed to do auto-vacuuming is stored in the database file but auto-vacuuming does not occur automatically at each commit as it does with \"full\". In incremental mode, the separate incremental vacuum pragma must be invoked to cause the auto-vacuum to occur.","title":"INCREMENTAL"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-i-n-c-r-e-m-e-n-t-a-l/#functions","text":"Name Summary invoke [jvm] operator fun invoke (): Int","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-i-n-c-r-e-m-e-n-t-a-l/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-i-n-c-r-e-m-e-n-t-a-l/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteAutoVacuumMode / INCREMENTAL / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-i-n-c-r-e-m-e-n-t-a-l/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-i-n-c-r-e-m-e-n-t-a-l/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteAutoVacuumMode / INCREMENTAL / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-i-n-c-r-e-m-e-n-t-a-l/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-n-o-n-e/","text":"// ApiLib / com.bloomberg.selekt / SQLiteAutoVacuumMode / NONE NONE [jvm]\\ NONE (0) Auto-vacuum is disabled. When auto-vacuum is disabled and data is deleted data from a database, the database file remains the same size. Unused database file pages are added to a \"freelist\" and reused for subsequent inserts. So no database file space is lost. However, the database file does not shrink. In this mode vacuum can be used to rebuild the entire database file and thus reclaim unused disk space. Functions Name Summary invoke [jvm] operator fun invoke (): Int Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-n-o-n-e/#none","text":"[jvm]\\ NONE (0) Auto-vacuum is disabled. When auto-vacuum is disabled and data is deleted data from a database, the database file remains the same size. Unused database file pages are added to a \"freelist\" and reused for subsequent inserts. So no database file space is lost. However, the database file does not shrink. In this mode vacuum can be used to rebuild the entire database file and thus reclaim unused disk space.","title":"NONE"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-n-o-n-e/#functions","text":"Name Summary invoke [jvm] operator fun invoke (): Int","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-n-o-n-e/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-n-o-n-e/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteAutoVacuumMode / NONE / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-n-o-n-e/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-n-o-n-e/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteAutoVacuumMode / NONE / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-auto-vacuum-mode/-n-o-n-e/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode SQLiteJournalMode [jvm]\\ enum SQLiteJournalMode : Enum < SQLiteJournalMode > Since v0.1.0. Entries WAL [jvm] WAL (commonMultipleConnectionConfiguration) The WAL journaling mode uses a write-ahead log instead of a rollback journal to implement transactions. TRUNCATE [jvm] TRUNCATE () The TRUNCATE journaling mode commits transactions by truncating the rollback journal to zero-length instead of deleting it. PERSIST [jvm] PERSIST () The PERSIST journaling mode prevents the rollback journal from being deleted at the end of each transaction. OFF [jvm] OFF () The OFF journaling mode disables the rollback journal completely. MEMORY [jvm] MEMORY (commonInMemoryConfiguration) The MEMORY journaling mode stores the rollback journal in volatile RAM. DELETE [jvm] DELETE () The DELETE journaling mode is the normal behavior. Properties Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/#sqlitejournalmode","text":"[jvm]\\ enum SQLiteJournalMode : Enum < SQLiteJournalMode >","title":"SQLiteJournalMode"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/#since","text":"v0.1.0.","title":"Since"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/#entries","text":"WAL [jvm] WAL (commonMultipleConnectionConfiguration) The WAL journaling mode uses a write-ahead log instead of a rollback journal to implement transactions. TRUNCATE [jvm] TRUNCATE () The TRUNCATE journaling mode commits transactions by truncating the rollback journal to zero-length instead of deleting it. PERSIST [jvm] PERSIST () The PERSIST journaling mode prevents the rollback journal from being deleted at the end of each transaction. OFF [jvm] OFF () The OFF journaling mode disables the rollback journal completely. MEMORY [jvm] MEMORY (commonInMemoryConfiguration) The MEMORY journaling mode stores the rollback journal in volatile RAM. DELETE [jvm] DELETE () The DELETE journaling mode is the normal behavior.","title":"Entries"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/#properties","text":"Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/database-configuration/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / databaseConfiguration databaseConfiguration [jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"Database configuration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/database-configuration/#databaseconfiguration","text":"[jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"databaseConfiguration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-d-e-l-e-t-e/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / DELETE DELETE [jvm]\\ DELETE () The DELETE journaling mode is the normal behavior. In the DELETE mode, the rollback journal is deleted at the conclusion of each transaction. Indeed, the delete operation is the action that causes the transaction to commit. Properties Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-d-e-l-e-t-e/#delete","text":"[jvm]\\ DELETE () The DELETE journaling mode is the normal behavior. In the DELETE mode, the rollback journal is deleted at the conclusion of each transaction. Indeed, the delete operation is the action that causes the transaction to commit.","title":"DELETE"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-d-e-l-e-t-e/#properties","text":"Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-d-e-l-e-t-e/database-configuration/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / DELETE / databaseConfiguration databaseConfiguration [jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"Database configuration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-d-e-l-e-t-e/database-configuration/#databaseconfiguration","text":"[jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"databaseConfiguration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-d-e-l-e-t-e/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / DELETE / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-d-e-l-e-t-e/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-d-e-l-e-t-e/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / DELETE / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-d-e-l-e-t-e/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-m-e-m-o-r-y/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / MEMORY MEMORY [jvm]\\ MEMORY (commonInMemoryConfiguration) The MEMORY journaling mode stores the rollback journal in volatile RAM. This saves disk I/O but at the expense of database safety and integrity. If the application using SQLite crashes in the middle of a transaction when the MEMORY journaling mode is set, then the database file will very likely go corrupt. Properties Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-m-e-m-o-r-y/#memory","text":"[jvm]\\ MEMORY (commonInMemoryConfiguration) The MEMORY journaling mode stores the rollback journal in volatile RAM. This saves disk I/O but at the expense of database safety and integrity. If the application using SQLite crashes in the middle of a transaction when the MEMORY journaling mode is set, then the database file will very likely go corrupt.","title":"MEMORY"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-m-e-m-o-r-y/#properties","text":"Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-m-e-m-o-r-y/database-configuration/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / MEMORY / databaseConfiguration databaseConfiguration [jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"Database configuration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-m-e-m-o-r-y/database-configuration/#databaseconfiguration","text":"[jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"databaseConfiguration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-m-e-m-o-r-y/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / MEMORY / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-m-e-m-o-r-y/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-m-e-m-o-r-y/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / MEMORY / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-m-e-m-o-r-y/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-o-f-f/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / OFF OFF [jvm]\\ OFF () The OFF journaling mode disables the rollback journal completely. No rollback journal is ever created and hence there is never a rollback journal to delete. The OFF journaling mode disables the atomic commit and rollback capabilities of SQLite. The ROLLBACK command no longer works; it behaves in an undefined way. Applications must avoid using the ROLLBACK command when the journal mode is OFF. If the application crashes in the middle of a transaction when the OFF journaling mode is set, then the database file will very likely go corrupt. Without a journal, there is no way for a statement to unwind partially completed operations following a constraint error. This might also leave the database in a corrupted state. Properties Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-o-f-f/#off","text":"[jvm]\\ OFF () The OFF journaling mode disables the rollback journal completely. No rollback journal is ever created and hence there is never a rollback journal to delete. The OFF journaling mode disables the atomic commit and rollback capabilities of SQLite. The ROLLBACK command no longer works; it behaves in an undefined way. Applications must avoid using the ROLLBACK command when the journal mode is OFF. If the application crashes in the middle of a transaction when the OFF journaling mode is set, then the database file will very likely go corrupt. Without a journal, there is no way for a statement to unwind partially completed operations following a constraint error. This might also leave the database in a corrupted state.","title":"OFF"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-o-f-f/#properties","text":"Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-o-f-f/database-configuration/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / OFF / databaseConfiguration databaseConfiguration [jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"Database configuration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-o-f-f/database-configuration/#databaseconfiguration","text":"[jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"databaseConfiguration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-o-f-f/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / OFF / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-o-f-f/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-o-f-f/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / OFF / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-o-f-f/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-p-e-r-s-i-s-t/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / PERSIST PERSIST [jvm]\\ PERSIST () The PERSIST journaling mode prevents the rollback journal from being deleted at the end of each transaction. Instead, the header of the journal is overwritten with zeros. This will prevent other database connections from rolling the journal back. The PERSIST journaling mode is useful as an optimization on platforms where deleting or truncating a file is much more expensive than overwriting the first block of a file with zeros. Properties Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-p-e-r-s-i-s-t/#persist","text":"[jvm]\\ PERSIST () The PERSIST journaling mode prevents the rollback journal from being deleted at the end of each transaction. Instead, the header of the journal is overwritten with zeros. This will prevent other database connections from rolling the journal back. The PERSIST journaling mode is useful as an optimization on platforms where deleting or truncating a file is much more expensive than overwriting the first block of a file with zeros.","title":"PERSIST"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-p-e-r-s-i-s-t/#properties","text":"Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-p-e-r-s-i-s-t/database-configuration/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / PERSIST / databaseConfiguration databaseConfiguration [jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"Database configuration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-p-e-r-s-i-s-t/database-configuration/#databaseconfiguration","text":"[jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"databaseConfiguration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-p-e-r-s-i-s-t/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / PERSIST / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-p-e-r-s-i-s-t/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-p-e-r-s-i-s-t/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / PERSIST / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-p-e-r-s-i-s-t/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-t-r-u-n-c-a-t-e/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / TRUNCATE TRUNCATE [jvm]\\ TRUNCATE () The TRUNCATE journaling mode commits transactions by truncating the rollback journal to zero-length instead of deleting it. On many systems, truncating a file is much faster than deleting the file since the containing directory does not need to be changed. Properties Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-t-r-u-n-c-a-t-e/#truncate","text":"[jvm]\\ TRUNCATE () The TRUNCATE journaling mode commits transactions by truncating the rollback journal to zero-length instead of deleting it. On many systems, truncating a file is much faster than deleting the file since the containing directory does not need to be changed.","title":"TRUNCATE"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-t-r-u-n-c-a-t-e/#properties","text":"Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-t-r-u-n-c-a-t-e/database-configuration/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / TRUNCATE / databaseConfiguration databaseConfiguration [jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"Database configuration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-t-r-u-n-c-a-t-e/database-configuration/#databaseconfiguration","text":"[jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"databaseConfiguration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-t-r-u-n-c-a-t-e/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / TRUNCATE / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-t-r-u-n-c-a-t-e/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-t-r-u-n-c-a-t-e/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / TRUNCATE / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-t-r-u-n-c-a-t-e/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-w-a-l/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / WAL WAL [jvm]\\ WAL (commonMultipleConnectionConfiguration) The WAL journaling mode uses a write-ahead log instead of a rollback journal to implement transactions. The WAL journaling mode is persistent; after being set it stays in effect across multiple database connections and after closing and reopening the database. See also jvm SQLite's WAL journal mode Properties Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-w-a-l/#wal","text":"[jvm]\\ WAL (commonMultipleConnectionConfiguration) The WAL journaling mode uses a write-ahead log instead of a rollback journal to implement transactions. The WAL journaling mode is persistent; after being set it stays in effect across multiple database connections and after closing and reopening the database.","title":"WAL"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-w-a-l/#see-also","text":"jvm SQLite's WAL journal mode","title":"See also"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-w-a-l/#properties","text":"Name Summary databaseConfiguration [jvm] val databaseConfiguration : DatabaseConfiguration name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-w-a-l/database-configuration/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / WAL / databaseConfiguration databaseConfiguration [jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"Database configuration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-w-a-l/database-configuration/#databaseconfiguration","text":"[jvm]\\ val databaseConfiguration : DatabaseConfiguration","title":"databaseConfiguration"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-w-a-l/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / WAL / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-w-a-l/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-w-a-l/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteJournalMode / WAL / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-journal-mode/-w-a-l/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/","text":"// ApiLib / com.bloomberg.selekt / SQLiteSecureDelete SQLiteSecureDelete [jvm]\\ enum SQLiteSecureDelete : Enum < SQLiteSecureDelete > When secure_delete is on, SQLite overwrites deleted content with zeros. Entries ON [jvm] ON () OFF [jvm] OFF () FAST [jvm] FAST () The \"fast\" setting is an intermediate setting in between \"on\" and \"off\". Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/#sqlitesecuredelete","text":"[jvm]\\ enum SQLiteSecureDelete : Enum < SQLiteSecureDelete > When secure_delete is on, SQLite overwrites deleted content with zeros.","title":"SQLiteSecureDelete"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/#entries","text":"ON [jvm] ON () OFF [jvm] OFF () FAST [jvm] FAST () The \"fast\" setting is an intermediate setting in between \"on\" and \"off\".","title":"Entries"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-f-a-s-t/","text":"// ApiLib / com.bloomberg.selekt / SQLiteSecureDelete / FAST FAST [jvm]\\ FAST () The \"fast\" setting is an intermediate setting in between \"on\" and \"off\". When secure_delete is set to \"fast\", SQLite will overwrite deleted content with zeros only if doing so does not increase the amount of I/O. In other words, the \"fast\" setting uses more CPU cycles but does not use more I/O. This has the effect of purging all old content from b-tree pages, but leaving forensic traces on freelist pages. Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-f-a-s-t/#fast","text":"[jvm]\\ FAST () The \"fast\" setting is an intermediate setting in between \"on\" and \"off\". When secure_delete is set to \"fast\", SQLite will overwrite deleted content with zeros only if doing so does not increase the amount of I/O. In other words, the \"fast\" setting uses more CPU cycles but does not use more I/O. This has the effect of purging all old content from b-tree pages, but leaving forensic traces on freelist pages.","title":"FAST"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-f-a-s-t/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-f-a-s-t/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteSecureDelete / FAST / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-f-a-s-t/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-f-a-s-t/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteSecureDelete / FAST / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-f-a-s-t/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-f-f/","text":"// ApiLib / com.bloomberg.selekt / SQLiteSecureDelete / OFF OFF [jvm]\\ OFF () Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-f-f/#off","text":"[jvm]\\ OFF ()","title":"OFF"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-f-f/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-f-f/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteSecureDelete / OFF / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-f-f/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-f-f/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteSecureDelete / OFF / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-f-f/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-n/","text":"// ApiLib / com.bloomberg.selekt / SQLiteSecureDelete / ON ON [jvm]\\ ON () Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-n/#on","text":"[jvm]\\ ON ()","title":"ON"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-n/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-n/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteSecureDelete / ON / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-n/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-n/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteSecureDelete / ON / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-secure-delete/-o-n/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/","text":"// ApiLib / com.bloomberg.selekt / SQLiteThreadingMode SQLiteThreadingMode [jvm]\\ enum SQLiteThreadingMode : Enum < SQLiteThreadingMode > Entries SINGLETHREAD [jvm] SINGLETHREAD (0) This option sets the threading mode to \"single-thread\". SERIALIZED [jvm] SERIALIZED (1) This option sets the threading mode to \"serialized\". MULTITHREAD [jvm] MULTITHREAD (2) This option sets the threading mode to \"multi-thread\". Functions Name Summary toString [jvm] open override fun toString (): String Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/#sqlitethreadingmode","text":"[jvm]\\ enum SQLiteThreadingMode : Enum < SQLiteThreadingMode >","title":"SQLiteThreadingMode"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/#entries","text":"SINGLETHREAD [jvm] SINGLETHREAD (0) This option sets the threading mode to \"single-thread\". SERIALIZED [jvm] SERIALIZED (1) This option sets the threading mode to \"serialized\". MULTITHREAD [jvm] MULTITHREAD (2) This option sets the threading mode to \"multi-thread\".","title":"Entries"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/#functions","text":"Name Summary toString [jvm] open override fun toString (): String","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/to-string/","text":"// ApiLib / com.bloomberg.selekt / SQLiteThreadingMode / toString toString [jvm]\\ open override fun toString (): String","title":"To string"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/to-string/#tostring","text":"[jvm]\\ open override fun toString (): String","title":"toString"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-m-u-l-t-i-t-h-r-e-a-d/","text":"// ApiLib / com.bloomberg.selekt / SQLiteThreadingMode / MULTITHREAD MULTITHREAD [jvm]\\ MULTITHREAD (2) This option sets the threading mode to \"multi-thread\". In other words, it disables mutexing on database connection and prepared statement objects. The application is responsible for serializing access to database connections and prepared statements. But other mutexes are enabled so that SQLite will be safe to use in a multi-threaded environment as long as no two threads attempt to use the same database connection at the same time. Functions Name Summary toString [jvm] open override fun toString (): String Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-m-u-l-t-i-t-h-r-e-a-d/#multithread","text":"[jvm]\\ MULTITHREAD (2) This option sets the threading mode to \"multi-thread\". In other words, it disables mutexing on database connection and prepared statement objects. The application is responsible for serializing access to database connections and prepared statements. But other mutexes are enabled so that SQLite will be safe to use in a multi-threaded environment as long as no two threads attempt to use the same database connection at the same time.","title":"MULTITHREAD"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-m-u-l-t-i-t-h-r-e-a-d/#functions","text":"Name Summary toString [jvm] open override fun toString (): String","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-m-u-l-t-i-t-h-r-e-a-d/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-m-u-l-t-i-t-h-r-e-a-d/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteThreadingMode / MULTITHREAD / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-m-u-l-t-i-t-h-r-e-a-d/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-m-u-l-t-i-t-h-r-e-a-d/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteThreadingMode / MULTITHREAD / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-m-u-l-t-i-t-h-r-e-a-d/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-e-r-i-a-l-i-z-e-d/","text":"// ApiLib / com.bloomberg.selekt / SQLiteThreadingMode / SERIALIZED SERIALIZED [jvm]\\ SERIALIZED (1) This option sets the threading mode to \"serialized\". In other words, this option enables all mutexes including the recursive mutexes on database connection and prepared statement objects. In this mode the SQLite library will itself serialize access to database connections and prepared statements so that the application is free to use the same database connection or the same prepared statement in different threads at the same time. Functions Name Summary toString [jvm] open override fun toString (): String Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-e-r-i-a-l-i-z-e-d/#serialized","text":"[jvm]\\ SERIALIZED (1) This option sets the threading mode to \"serialized\". In other words, this option enables all mutexes including the recursive mutexes on database connection and prepared statement objects. In this mode the SQLite library will itself serialize access to database connections and prepared statements so that the application is free to use the same database connection or the same prepared statement in different threads at the same time.","title":"SERIALIZED"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-e-r-i-a-l-i-z-e-d/#functions","text":"Name Summary toString [jvm] open override fun toString (): String","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-e-r-i-a-l-i-z-e-d/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-e-r-i-a-l-i-z-e-d/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteThreadingMode / SERIALIZED / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-e-r-i-a-l-i-z-e-d/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-e-r-i-a-l-i-z-e-d/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteThreadingMode / SERIALIZED / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-e-r-i-a-l-i-z-e-d/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-i-n-g-l-e-t-h-r-e-a-d/","text":"// ApiLib / com.bloomberg.selekt / SQLiteThreadingMode / SINGLETHREAD SINGLETHREAD [jvm]\\ SINGLETHREAD (0) This option sets the threading mode to \"single-thread\". In other words, it disables all mutexing and puts SQLite into a mode where it can only be used by a single thread. Functions Name Summary toString [jvm] open override fun toString (): String Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-i-n-g-l-e-t-h-r-e-a-d/#singlethread","text":"[jvm]\\ SINGLETHREAD (0) This option sets the threading mode to \"single-thread\". In other words, it disables all mutexing and puts SQLite into a mode where it can only be used by a single thread.","title":"SINGLETHREAD"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-i-n-g-l-e-t-h-r-e-a-d/#functions","text":"Name Summary toString [jvm] open override fun toString (): String","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-i-n-g-l-e-t-h-r-e-a-d/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-i-n-g-l-e-t-h-r-e-a-d/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteThreadingMode / SINGLETHREAD / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-i-n-g-l-e-t-h-r-e-a-d/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-i-n-g-l-e-t-h-r-e-a-d/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteThreadingMode / SINGLETHREAD / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-threading-mode/-s-i-n-g-l-e-t-h-r-e-a-d/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTraceEventMode SQLiteTraceEventMode [jvm]\\ @NotThreadSafe() class SQLiteTraceEventMode Functions Name Summary enableClose [jvm] fun enableClose (): SQLiteTraceEventMode Tracing is invoked when a database connection object closes. enableProfile [jvm] fun enableProfile (): SQLiteTraceEventMode Tracing is invoked with the estimated number of nanoseconds that a prepared statement took to run. enableRow [jvm] fun enableRow (): SQLiteTraceEventMode Tracing is invoked whenever a prepared statement generates a single row of result. enableStatement [jvm] fun enableStatement (): SQLiteTraceEventMode Tracing is invoked when a prepared statement first begins running and possibly at other times during the execution of the prepared statement, such as at the start of each trigger subprogram. invoke [jvm] operator fun invoke (): Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/#sqlitetraceeventmode","text":"[jvm]\\ @NotThreadSafe() class SQLiteTraceEventMode","title":"SQLiteTraceEventMode"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/#functions","text":"Name Summary enableClose [jvm] fun enableClose (): SQLiteTraceEventMode Tracing is invoked when a database connection object closes. enableProfile [jvm] fun enableProfile (): SQLiteTraceEventMode Tracing is invoked with the estimated number of nanoseconds that a prepared statement took to run. enableRow [jvm] fun enableRow (): SQLiteTraceEventMode Tracing is invoked whenever a prepared statement generates a single row of result. enableStatement [jvm] fun enableStatement (): SQLiteTraceEventMode Tracing is invoked when a prepared statement first begins running and possibly at other times during the execution of the prepared statement, such as at the start of each trigger subprogram. invoke [jvm] operator fun invoke (): Int","title":"Functions"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/-s-q-lite-trace-event-mode/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTraceEventMode / SQLiteTraceEventMode SQLiteTraceEventMode [jvm]\\ fun SQLiteTraceEventMode ()","title":" s q lite trace event mode"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/-s-q-lite-trace-event-mode/#sqlitetraceeventmode","text":"[jvm]\\ fun SQLiteTraceEventMode ()","title":"SQLiteTraceEventMode"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/enable-close/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTraceEventMode / enableClose enableClose [jvm]\\ fun enableClose (): SQLiteTraceEventMode Tracing is invoked when a database connection object closes.","title":"Enable close"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/enable-close/#enableclose","text":"[jvm]\\ fun enableClose (): SQLiteTraceEventMode Tracing is invoked when a database connection object closes.","title":"enableClose"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/enable-profile/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTraceEventMode / enableProfile enableProfile [jvm]\\ fun enableProfile (): SQLiteTraceEventMode Tracing is invoked with the estimated number of nanoseconds that a prepared statement took to run.","title":"Enable profile"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/enable-profile/#enableprofile","text":"[jvm]\\ fun enableProfile (): SQLiteTraceEventMode Tracing is invoked with the estimated number of nanoseconds that a prepared statement took to run.","title":"enableProfile"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/enable-row/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTraceEventMode / enableRow enableRow [jvm]\\ fun enableRow (): SQLiteTraceEventMode Tracing is invoked whenever a prepared statement generates a single row of result.","title":"Enable row"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/enable-row/#enablerow","text":"[jvm]\\ fun enableRow (): SQLiteTraceEventMode Tracing is invoked whenever a prepared statement generates a single row of result.","title":"enableRow"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/enable-statement/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTraceEventMode / enableStatement enableStatement [jvm]\\ fun enableStatement (): SQLiteTraceEventMode Tracing is invoked when a prepared statement first begins running and possibly at other times during the execution of the prepared statement, such as at the start of each trigger subprogram.","title":"Enable statement"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/enable-statement/#enablestatement","text":"[jvm]\\ fun enableStatement (): SQLiteTraceEventMode Tracing is invoked when a prepared statement first begins running and possibly at other times during the execution of the prepared statement, such as at the start of each trigger subprogram.","title":"enableStatement"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/invoke/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTraceEventMode / invoke invoke [jvm]\\ operator fun invoke (): Int","title":"Invoke"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-trace-event-mode/invoke/#invoke","text":"[jvm]\\ operator fun invoke (): Int","title":"invoke"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTransactionMode SQLiteTransactionMode [jvm]\\ enum SQLiteTransactionMode : Enum < SQLiteTransactionMode > Entries IMMEDIATE [jvm] IMMEDIATE () EXCLUSIVE [jvm] EXCLUSIVE () Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] val sql : String","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/#sqlitetransactionmode","text":"[jvm]\\ enum SQLiteTransactionMode : Enum < SQLiteTransactionMode >","title":"SQLiteTransactionMode"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/#entries","text":"IMMEDIATE [jvm] IMMEDIATE () EXCLUSIVE [jvm] EXCLUSIVE ()","title":"Entries"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] val sql : String","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/sql/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTransactionMode / sql sql [jvm]\\ val sql : String","title":"Sql"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/sql/#sql","text":"[jvm]\\ val sql : String","title":"sql"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-e-x-c-l-u-s-i-v-e/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTransactionMode / EXCLUSIVE EXCLUSIVE [jvm]\\ EXCLUSIVE () Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] val sql : String","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-e-x-c-l-u-s-i-v-e/#exclusive","text":"[jvm]\\ EXCLUSIVE ()","title":"EXCLUSIVE"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-e-x-c-l-u-s-i-v-e/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] val sql : String","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-e-x-c-l-u-s-i-v-e/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTransactionMode / EXCLUSIVE / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-e-x-c-l-u-s-i-v-e/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-e-x-c-l-u-s-i-v-e/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTransactionMode / EXCLUSIVE / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-e-x-c-l-u-s-i-v-e/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-e-x-c-l-u-s-i-v-e/sql/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTransactionMode / EXCLUSIVE / sql sql [jvm]\\ val sql : String","title":"Sql"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-e-x-c-l-u-s-i-v-e/sql/#sql","text":"[jvm]\\ val sql : String","title":"sql"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-i-m-m-e-d-i-a-t-e/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTransactionMode / IMMEDIATE IMMEDIATE [jvm]\\ IMMEDIATE () Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] val sql : String","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-i-m-m-e-d-i-a-t-e/#immediate","text":"[jvm]\\ IMMEDIATE ()","title":"IMMEDIATE"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-i-m-m-e-d-i-a-t-e/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] val sql : String","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-i-m-m-e-d-i-a-t-e/name/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTransactionMode / IMMEDIATE / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-i-m-m-e-d-i-a-t-e/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-i-m-m-e-d-i-a-t-e/ordinal/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTransactionMode / IMMEDIATE / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-i-m-m-e-d-i-a-t-e/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-i-m-m-e-d-i-a-t-e/sql/","text":"// ApiLib / com.bloomberg.selekt / SQLiteTransactionMode / IMMEDIATE / sql sql [jvm]\\ val sql : String","title":"Sql"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-s-q-lite-transaction-mode/-i-m-m-e-d-i-a-t-e/sql/#sql","text":"[jvm]\\ val sql : String","title":"sql"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-zero-blob/","text":"// ApiLib / com.bloomberg.selekt / ZeroBlob ZeroBlob [jvm]\\ @ JvmInline () value class ZeroBlob ( size : Int ) Since 0.7.3 Constructors ZeroBlob [jvm] fun ZeroBlob (size: Int ) Properties Name Summary size [jvm] val size : Int","title":"Index"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-zero-blob/#zeroblob","text":"[jvm]\\ @ JvmInline () value class ZeroBlob ( size : Int )","title":"ZeroBlob"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-zero-blob/#since","text":"0.7.3","title":"Since"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-zero-blob/#constructors","text":"ZeroBlob [jvm] fun ZeroBlob (size: Int )","title":"Constructors"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-zero-blob/#properties","text":"Name Summary size [jvm] val size : Int","title":"Properties"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-zero-blob/-zero-blob/","text":"// ApiLib / com.bloomberg.selekt / ZeroBlob / ZeroBlob ZeroBlob [jvm]\\ fun ZeroBlob (size: Int )","title":" zero blob"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-zero-blob/-zero-blob/#zeroblob","text":"[jvm]\\ fun ZeroBlob (size: Int )","title":"ZeroBlob"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-zero-blob/size/","text":"// ApiLib / com.bloomberg.selekt / ZeroBlob / size size [jvm]\\ val size : Int","title":"Size"},{"location":"kdoc/ApiLib/-api-lib/com.bloomberg.selekt/-zero-blob/size/#size","text":"[jvm]\\ val size : Int","title":"size"},{"location":"kdoc/Lib/","text":"// Lib Lib Packages Name com.bloomberg.selekt com.bloomberg.selekt.commons com.bloomberg.selekt.pools","title":"Index"},{"location":"kdoc/Lib/#lib","text":"","title":"Lib"},{"location":"kdoc/Lib/#packages","text":"Name com.bloomberg.selekt com.bloomberg.selekt.commons com.bloomberg.selekt.pools","title":"Packages"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/","text":"// Lib / com.bloomberg.selekt Package com.bloomberg.selekt Types Name Summary ColumnType [jvm] enum ColumnType : Enum < ColumnType > CommonThreadLocalRandom [jvm] object CommonThreadLocalRandom : IRandom ConflictAlgorithm [jvm] enum ConflictAlgorithm : Enum < ConflictAlgorithm > , IConflictAlgorithm ContentValues [jvm] @NotThreadSafe() class ContentValues : IContentValues IConflictAlgorithm [jvm] interface IConflictAlgorithm IContentValues [jvm] interface IContentValues ICursor [jvm] interface ICursor : Closeable IDatabase [jvm] interface IDatabase : IReadableDatabase , ISQLTransactor IRandom [jvm] interface IRandom IReadableDatabase [jvm] interface IReadableDatabase : Closeable ISQLTransactor [jvm] interface ISQLTransactor Pointer [jvm] typealias Pointer = Long SharedCloseable [jvm] @ThreadSafe() abstract class SharedCloseable : Closeable SimpleSQLQuery [jvm] class SimpleSQLQuery ( sql : String , bindArgs : Array Any ?>) : ISQLQuery SQLDatabase [jvm] @ThreadSafe() class SQLDatabase ( path : String , sqlite : SQLite , configuration : DatabaseConfiguration , key : ByteArray ?, random : IRandom ) : SharedCloseable , IDatabase The use of ThreadLocal underpins SQLDatabase 's thread-safety. SQLite [jvm] open class SQLite ( sqlite : ExternalSQLite ) SQLOpenOperation [jvm] typealias SQLOpenOperation = Int SQLTransactionListener [jvm] interface SQLTransactionListener Properties Name Summary NULL [jvm] const val NULL : Pointer = 0L SQL_BLOB [jvm] const val SQL_BLOB : Int = 4 SQL_FLOAT [jvm] const val SQL_FLOAT : Int = 2 SQL_INTEGER [jvm] const val SQL_INTEGER : Int = 1 SQL_NULL [jvm] const val SQL_NULL : Int = 5 SQL_OPEN_CREATE [jvm] const val SQL_OPEN_CREATE : SQLOpenOperation SQL_OPEN_FULL_MUTEX [jvm] const val SQL_OPEN_FULL_MUTEX : SQLOpenOperation SQL_OPEN_NO_MUTEX [jvm] const val SQL_OPEN_NO_MUTEX : SQLOpenOperation = 0x00008000 SQL_OPEN_PRIVATE_CACHE [jvm] const val SQL_OPEN_PRIVATE_CACHE : SQLOpenOperation SQL_OPEN_READONLY [jvm] const val SQL_OPEN_READONLY : SQLOpenOperation = 1 SQL_OPEN_READWRITE [jvm] const val SQL_OPEN_READWRITE : SQLOpenOperation SQL_OPEN_SHARED_CACHE [jvm] const val SQL_OPEN_SHARED_CACHE : SQLOpenOperation SQL_TEXT [jvm] const val SQL_TEXT : Int = 3","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/#package-combloombergselekt","text":"","title":"Package com.bloomberg.selekt"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/#types","text":"Name Summary ColumnType [jvm] enum ColumnType : Enum < ColumnType > CommonThreadLocalRandom [jvm] object CommonThreadLocalRandom : IRandom ConflictAlgorithm [jvm] enum ConflictAlgorithm : Enum < ConflictAlgorithm > , IConflictAlgorithm ContentValues [jvm] @NotThreadSafe() class ContentValues : IContentValues IConflictAlgorithm [jvm] interface IConflictAlgorithm IContentValues [jvm] interface IContentValues ICursor [jvm] interface ICursor : Closeable IDatabase [jvm] interface IDatabase : IReadableDatabase , ISQLTransactor IRandom [jvm] interface IRandom IReadableDatabase [jvm] interface IReadableDatabase : Closeable ISQLTransactor [jvm] interface ISQLTransactor Pointer [jvm] typealias Pointer = Long SharedCloseable [jvm] @ThreadSafe() abstract class SharedCloseable : Closeable SimpleSQLQuery [jvm] class SimpleSQLQuery ( sql : String , bindArgs : Array Any ?>) : ISQLQuery SQLDatabase [jvm] @ThreadSafe() class SQLDatabase ( path : String , sqlite : SQLite , configuration : DatabaseConfiguration , key : ByteArray ?, random : IRandom ) : SharedCloseable , IDatabase The use of ThreadLocal underpins SQLDatabase 's thread-safety. SQLite [jvm] open class SQLite ( sqlite : ExternalSQLite ) SQLOpenOperation [jvm] typealias SQLOpenOperation = Int SQLTransactionListener [jvm] interface SQLTransactionListener","title":"Types"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/#properties","text":"Name Summary NULL [jvm] const val NULL : Pointer = 0L SQL_BLOB [jvm] const val SQL_BLOB : Int = 4 SQL_FLOAT [jvm] const val SQL_FLOAT : Int = 2 SQL_INTEGER [jvm] const val SQL_INTEGER : Int = 1 SQL_NULL [jvm] const val SQL_NULL : Int = 5 SQL_OPEN_CREATE [jvm] const val SQL_OPEN_CREATE : SQLOpenOperation SQL_OPEN_FULL_MUTEX [jvm] const val SQL_OPEN_FULL_MUTEX : SQLOpenOperation SQL_OPEN_NO_MUTEX [jvm] const val SQL_OPEN_NO_MUTEX : SQLOpenOperation = 0x00008000 SQL_OPEN_PRIVATE_CACHE [jvm] const val SQL_OPEN_PRIVATE_CACHE : SQLOpenOperation SQL_OPEN_READONLY [jvm] const val SQL_OPEN_READONLY : SQLOpenOperation = 1 SQL_OPEN_READWRITE [jvm] const val SQL_OPEN_READWRITE : SQLOpenOperation SQL_OPEN_SHARED_CACHE [jvm] const val SQL_OPEN_SHARED_CACHE : SQLOpenOperation SQL_TEXT [jvm] const val SQL_TEXT : Int = 3","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-n-u-l-l/","text":"// Lib / com.bloomberg.selekt / NULL NULL [jvm]\\ const val NULL : Pointer = 0L","title":" n u l l"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-n-u-l-l/#null","text":"[jvm]\\ const val NULL : Pointer = 0L","title":"NULL"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-b-l-o-b/","text":"// Lib / com.bloomberg.selekt / SQL_BLOB SQL_BLOB [jvm]\\ const val SQL_BLOB : Int = 4","title":" s q l  b l o b"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-b-l-o-b/#sql_blob","text":"[jvm]\\ const val SQL_BLOB : Int = 4","title":"SQL_BLOB"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-f-l-o-a-t/","text":"// Lib / com.bloomberg.selekt / SQL_FLOAT SQL_FLOAT [jvm]\\ const val SQL_FLOAT : Int = 2","title":" s q l  f l o a t"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-f-l-o-a-t/#sql_float","text":"[jvm]\\ const val SQL_FLOAT : Int = 2","title":"SQL_FLOAT"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-i-n-t-e-g-e-r/","text":"// Lib / com.bloomberg.selekt / SQL_INTEGER SQL_INTEGER [jvm]\\ const val SQL_INTEGER : Int = 1","title":" s q l  i n t e g e r"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-i-n-t-e-g-e-r/#sql_integer","text":"[jvm]\\ const val SQL_INTEGER : Int = 1","title":"SQL_INTEGER"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-n-u-l-l/","text":"// Lib / com.bloomberg.selekt / SQL_NULL SQL_NULL [jvm]\\ const val SQL_NULL : Int = 5","title":" s q l  n u l l"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-n-u-l-l/#sql_null","text":"[jvm]\\ const val SQL_NULL : Int = 5","title":"SQL_NULL"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-c-r-e-a-t-e/","text":"// Lib / com.bloomberg.selekt / SQL_OPEN_CREATE SQL_OPEN_CREATE [jvm]\\ const val SQL_OPEN_CREATE : SQLOpenOperation","title":" s q l  o p e n  c r e a t e"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-c-r-e-a-t-e/#sql_open_create","text":"[jvm]\\ const val SQL_OPEN_CREATE : SQLOpenOperation","title":"SQL_OPEN_CREATE"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-f-u-l-l_-m-u-t-e-x/","text":"// Lib / com.bloomberg.selekt / SQL_OPEN_FULL_MUTEX SQL_OPEN_FULL_MUTEX [jvm]\\ const val SQL_OPEN_FULL_MUTEX : SQLOpenOperation","title":" s q l  o p e n  f u l l  m u t e x"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-f-u-l-l_-m-u-t-e-x/#sql_open_full_mutex","text":"[jvm]\\ const val SQL_OPEN_FULL_MUTEX : SQLOpenOperation","title":"SQL_OPEN_FULL_MUTEX"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-n-o_-m-u-t-e-x/","text":"// Lib / com.bloomberg.selekt / SQL_OPEN_NO_MUTEX SQL_OPEN_NO_MUTEX [jvm]\\ const val SQL_OPEN_NO_MUTEX : SQLOpenOperation = 0x00008000","title":" s q l  o p e n  n o  m u t e x"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-n-o_-m-u-t-e-x/#sql_open_no_mutex","text":"[jvm]\\ const val SQL_OPEN_NO_MUTEX : SQLOpenOperation = 0x00008000","title":"SQL_OPEN_NO_MUTEX"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-p-r-i-v-a-t-e_-c-a-c-h-e/","text":"// Lib / com.bloomberg.selekt / SQL_OPEN_PRIVATE_CACHE SQL_OPEN_PRIVATE_CACHE [jvm]\\ const val SQL_OPEN_PRIVATE_CACHE : SQLOpenOperation","title":" s q l  o p e n  p r i v a t e  c a c h e"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-p-r-i-v-a-t-e_-c-a-c-h-e/#sql_open_private_cache","text":"[jvm]\\ const val SQL_OPEN_PRIVATE_CACHE : SQLOpenOperation","title":"SQL_OPEN_PRIVATE_CACHE"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-r-e-a-d-o-n-l-y/","text":"// Lib / com.bloomberg.selekt / SQL_OPEN_READONLY SQL_OPEN_READONLY [jvm]\\ const val SQL_OPEN_READONLY : SQLOpenOperation = 1","title":" s q l  o p e n  r e a d o n l y"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-r-e-a-d-o-n-l-y/#sql_open_readonly","text":"[jvm]\\ const val SQL_OPEN_READONLY : SQLOpenOperation = 1","title":"SQL_OPEN_READONLY"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-r-e-a-d-w-r-i-t-e/","text":"// Lib / com.bloomberg.selekt / SQL_OPEN_READWRITE SQL_OPEN_READWRITE [jvm]\\ const val SQL_OPEN_READWRITE : SQLOpenOperation","title":" s q l  o p e n  r e a d w r i t e"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-r-e-a-d-w-r-i-t-e/#sql_open_readwrite","text":"[jvm]\\ const val SQL_OPEN_READWRITE : SQLOpenOperation","title":"SQL_OPEN_READWRITE"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-s-h-a-r-e-d_-c-a-c-h-e/","text":"// Lib / com.bloomberg.selekt / SQL_OPEN_SHARED_CACHE SQL_OPEN_SHARED_CACHE [jvm]\\ const val SQL_OPEN_SHARED_CACHE : SQLOpenOperation","title":" s q l  o p e n  s h a r e d  c a c h e"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-o-p-e-n_-s-h-a-r-e-d_-c-a-c-h-e/#sql_open_shared_cache","text":"[jvm]\\ const val SQL_OPEN_SHARED_CACHE : SQLOpenOperation","title":"SQL_OPEN_SHARED_CACHE"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-t-e-x-t/","text":"// Lib / com.bloomberg.selekt / SQL_TEXT SQL_TEXT [jvm]\\ const val SQL_TEXT : Int = 3","title":" s q l  t e x t"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l_-t-e-x-t/#sql_text","text":"[jvm]\\ const val SQL_TEXT : Int = 3","title":"SQL_TEXT"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/","text":"// Lib / com.bloomberg.selekt / ColumnType ColumnType [jvm]\\ enum ColumnType : Enum < ColumnType > Entries NULL [jvm] NULL (SQL_NULL) BLOB [jvm] BLOB (SQL_BLOB) STRING [jvm] STRING (SQL_TEXT) FLOAT [jvm] FLOAT (SQL_FLOAT) INTEGER [jvm] INTEGER (SQL_INTEGER) Types Name Summary Companion [jvm] object Companion Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sqlDataType [jvm] val sqlDataType : SQLDataType","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/#columntype","text":"[jvm]\\ enum ColumnType : Enum < ColumnType >","title":"ColumnType"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/#entries","text":"NULL [jvm] NULL (SQL_NULL) BLOB [jvm] BLOB (SQL_BLOB) STRING [jvm] STRING (SQL_TEXT) FLOAT [jvm] FLOAT (SQL_FLOAT) INTEGER [jvm] INTEGER (SQL_INTEGER)","title":"Entries"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/#types","text":"Name Summary Companion [jvm] object Companion","title":"Types"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sqlDataType [jvm] val sqlDataType : SQLDataType","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/sql-data-type/","text":"// Lib / com.bloomberg.selekt / ColumnType / sqlDataType sqlDataType [jvm]\\ val sqlDataType : SQLDataType","title":"Sql data type"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/sql-data-type/#sqldatatype","text":"[jvm]\\ val sqlDataType : SQLDataType","title":"sqlDataType"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-b-l-o-b/","text":"// Lib / com.bloomberg.selekt / ColumnType / BLOB BLOB [jvm]\\ BLOB (SQL_BLOB) Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sqlDataType [jvm] val sqlDataType : SQLDataType","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-b-l-o-b/#blob","text":"[jvm]\\ BLOB (SQL_BLOB)","title":"BLOB"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-b-l-o-b/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sqlDataType [jvm] val sqlDataType : SQLDataType","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-b-l-o-b/name/","text":"// Lib / com.bloomberg.selekt / ColumnType / BLOB / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-b-l-o-b/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-b-l-o-b/ordinal/","text":"// Lib / com.bloomberg.selekt / ColumnType / BLOB / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-b-l-o-b/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-b-l-o-b/sql-data-type/","text":"// Lib / com.bloomberg.selekt / ColumnType / BLOB / sqlDataType sqlDataType [jvm]\\ val sqlDataType : SQLDataType","title":"Sql data type"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-b-l-o-b/sql-data-type/#sqldatatype","text":"[jvm]\\ val sqlDataType : SQLDataType","title":"sqlDataType"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-companion/","text":"// Lib / com.bloomberg.selekt / ColumnType / Companion Companion [jvm]\\ object Companion Functions Name Summary toColumnType [jvm] fun toColumnType (sqlDataType: SQLDataType ): ColumnType","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-companion/#companion","text":"[jvm]\\ object Companion","title":"Companion"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-companion/#functions","text":"Name Summary toColumnType [jvm] fun toColumnType (sqlDataType: SQLDataType ): ColumnType","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-companion/to-column-type/","text":"// Lib / com.bloomberg.selekt / ColumnType / Companion / toColumnType toColumnType [jvm]\\ fun toColumnType (sqlDataType: SQLDataType ): ColumnType","title":"To column type"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-companion/to-column-type/#tocolumntype","text":"[jvm]\\ fun toColumnType (sqlDataType: SQLDataType ): ColumnType","title":"toColumnType"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-f-l-o-a-t/","text":"// Lib / com.bloomberg.selekt / ColumnType / FLOAT FLOAT [jvm]\\ FLOAT (SQL_FLOAT) Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sqlDataType [jvm] val sqlDataType : SQLDataType","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-f-l-o-a-t/#float","text":"[jvm]\\ FLOAT (SQL_FLOAT)","title":"FLOAT"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-f-l-o-a-t/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sqlDataType [jvm] val sqlDataType : SQLDataType","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-f-l-o-a-t/name/","text":"// Lib / com.bloomberg.selekt / ColumnType / FLOAT / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-f-l-o-a-t/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-f-l-o-a-t/ordinal/","text":"// Lib / com.bloomberg.selekt / ColumnType / FLOAT / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-f-l-o-a-t/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-f-l-o-a-t/sql-data-type/","text":"// Lib / com.bloomberg.selekt / ColumnType / FLOAT / sqlDataType sqlDataType [jvm]\\ val sqlDataType : SQLDataType","title":"Sql data type"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-f-l-o-a-t/sql-data-type/#sqldatatype","text":"[jvm]\\ val sqlDataType : SQLDataType","title":"sqlDataType"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-i-n-t-e-g-e-r/","text":"// Lib / com.bloomberg.selekt / ColumnType / INTEGER INTEGER [jvm]\\ INTEGER (SQL_INTEGER) Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sqlDataType [jvm] val sqlDataType : SQLDataType","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-i-n-t-e-g-e-r/#integer","text":"[jvm]\\ INTEGER (SQL_INTEGER)","title":"INTEGER"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-i-n-t-e-g-e-r/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sqlDataType [jvm] val sqlDataType : SQLDataType","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-i-n-t-e-g-e-r/name/","text":"// Lib / com.bloomberg.selekt / ColumnType / INTEGER / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-i-n-t-e-g-e-r/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-i-n-t-e-g-e-r/ordinal/","text":"// Lib / com.bloomberg.selekt / ColumnType / INTEGER / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-i-n-t-e-g-e-r/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-i-n-t-e-g-e-r/sql-data-type/","text":"// Lib / com.bloomberg.selekt / ColumnType / INTEGER / sqlDataType sqlDataType [jvm]\\ val sqlDataType : SQLDataType","title":"Sql data type"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-i-n-t-e-g-e-r/sql-data-type/#sqldatatype","text":"[jvm]\\ val sqlDataType : SQLDataType","title":"sqlDataType"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-n-u-l-l/","text":"// Lib / com.bloomberg.selekt / ColumnType / NULL NULL [jvm]\\ NULL (SQL_NULL) Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sqlDataType [jvm] val sqlDataType : SQLDataType","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-n-u-l-l/#null","text":"[jvm]\\ NULL (SQL_NULL)","title":"NULL"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-n-u-l-l/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sqlDataType [jvm] val sqlDataType : SQLDataType","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-n-u-l-l/name/","text":"// Lib / com.bloomberg.selekt / ColumnType / NULL / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-n-u-l-l/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-n-u-l-l/ordinal/","text":"// Lib / com.bloomberg.selekt / ColumnType / NULL / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-n-u-l-l/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-n-u-l-l/sql-data-type/","text":"// Lib / com.bloomberg.selekt / ColumnType / NULL / sqlDataType sqlDataType [jvm]\\ val sqlDataType : SQLDataType","title":"Sql data type"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-n-u-l-l/sql-data-type/#sqldatatype","text":"[jvm]\\ val sqlDataType : SQLDataType","title":"sqlDataType"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-s-t-r-i-n-g/","text":"// Lib / com.bloomberg.selekt / ColumnType / STRING STRING [jvm]\\ STRING (SQL_TEXT) Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sqlDataType [jvm] val sqlDataType : SQLDataType","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-s-t-r-i-n-g/#string","text":"[jvm]\\ STRING (SQL_TEXT)","title":"STRING"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-s-t-r-i-n-g/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sqlDataType [jvm] val sqlDataType : SQLDataType","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-s-t-r-i-n-g/name/","text":"// Lib / com.bloomberg.selekt / ColumnType / STRING / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-s-t-r-i-n-g/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-s-t-r-i-n-g/ordinal/","text":"// Lib / com.bloomberg.selekt / ColumnType / STRING / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-s-t-r-i-n-g/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-s-t-r-i-n-g/sql-data-type/","text":"// Lib / com.bloomberg.selekt / ColumnType / STRING / sqlDataType sqlDataType [jvm]\\ val sqlDataType : SQLDataType","title":"Sql data type"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-column-type/-s-t-r-i-n-g/sql-data-type/#sqldatatype","text":"[jvm]\\ val sqlDataType : SQLDataType","title":"sqlDataType"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-common-thread-local-random/","text":"// Lib / com.bloomberg.selekt / CommonThreadLocalRandom CommonThreadLocalRandom [jvm]\\ object CommonThreadLocalRandom : IRandom Functions Name Summary nextLong [jvm] open override fun nextLong (bound: Long ): Long","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-common-thread-local-random/#commonthreadlocalrandom","text":"[jvm]\\ object CommonThreadLocalRandom : IRandom","title":"CommonThreadLocalRandom"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-common-thread-local-random/#functions","text":"Name Summary nextLong [jvm] open override fun nextLong (bound: Long ): Long","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-common-thread-local-random/next-long/","text":"// Lib / com.bloomberg.selekt / CommonThreadLocalRandom / nextLong nextLong [jvm]\\ open override fun nextLong (bound: Long ): Long","title":"Next long"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-common-thread-local-random/next-long/#nextlong","text":"[jvm]\\ open override fun nextLong (bound: Long ): Long","title":"nextLong"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm ConflictAlgorithm [jvm]\\ enum ConflictAlgorithm : Enum < ConflictAlgorithm > , IConflictAlgorithm Entries ROLLBACK [jvm] ROLLBACK (\" OR ROLLBACK \") REPLACE [jvm] REPLACE (\" OR REPLACE \") NONE [jvm] NONE (\" \") IGNORE [jvm] IGNORE (\" OR IGNORE \") FAIL [jvm] FAIL (\" OR FAIL \") ABORT [jvm] ABORT (\" OR ABORT \") Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/#conflictalgorithm","text":"[jvm]\\ enum ConflictAlgorithm : Enum < ConflictAlgorithm > , IConflictAlgorithm","title":"ConflictAlgorithm"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/#entries","text":"ROLLBACK [jvm] ROLLBACK (\" OR ROLLBACK \") REPLACE [jvm] REPLACE (\" OR REPLACE \") NONE [jvm] NONE (\" \") IGNORE [jvm] IGNORE (\" OR IGNORE \") FAIL [jvm] FAIL (\" OR FAIL \") ABORT [jvm] ABORT (\" OR ABORT \")","title":"Entries"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/sql/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / sql sql [jvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/sql/#sql","text":"[jvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-a-b-o-r-t/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / ABORT ABORT [jvm]\\ ABORT (\" OR ABORT \") Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-a-b-o-r-t/#abort","text":"[jvm]\\ ABORT (\" OR ABORT \")","title":"ABORT"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-a-b-o-r-t/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-a-b-o-r-t/name/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / ABORT / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-a-b-o-r-t/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-a-b-o-r-t/ordinal/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / ABORT / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-a-b-o-r-t/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-a-b-o-r-t/sql/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / ABORT / sql sql [jvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-a-b-o-r-t/sql/#sql","text":"[jvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-f-a-i-l/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / FAIL FAIL [jvm]\\ FAIL (\" OR FAIL \") Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-f-a-i-l/#fail","text":"[jvm]\\ FAIL (\" OR FAIL \")","title":"FAIL"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-f-a-i-l/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-f-a-i-l/name/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / FAIL / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-f-a-i-l/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-f-a-i-l/ordinal/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / FAIL / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-f-a-i-l/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-f-a-i-l/sql/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / FAIL / sql sql [jvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-f-a-i-l/sql/#sql","text":"[jvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-i-g-n-o-r-e/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / IGNORE IGNORE [jvm]\\ IGNORE (\" OR IGNORE \") Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-i-g-n-o-r-e/#ignore","text":"[jvm]\\ IGNORE (\" OR IGNORE \")","title":"IGNORE"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-i-g-n-o-r-e/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-i-g-n-o-r-e/name/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / IGNORE / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-i-g-n-o-r-e/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-i-g-n-o-r-e/ordinal/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / IGNORE / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-i-g-n-o-r-e/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-i-g-n-o-r-e/sql/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / IGNORE / sql sql [jvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-i-g-n-o-r-e/sql/#sql","text":"[jvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-n-o-n-e/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / NONE NONE [jvm]\\ NONE (\" \") Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-n-o-n-e/#none","text":"[jvm]\\ NONE (\" \")","title":"NONE"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-n-o-n-e/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-n-o-n-e/name/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / NONE / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-n-o-n-e/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-n-o-n-e/ordinal/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / NONE / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-n-o-n-e/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-n-o-n-e/sql/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / NONE / sql sql [jvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-n-o-n-e/sql/#sql","text":"[jvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-e-p-l-a-c-e/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / REPLACE REPLACE [jvm]\\ REPLACE (\" OR REPLACE \") Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-e-p-l-a-c-e/#replace","text":"[jvm]\\ REPLACE (\" OR REPLACE \")","title":"REPLACE"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-e-p-l-a-c-e/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-e-p-l-a-c-e/name/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / REPLACE / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-e-p-l-a-c-e/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-e-p-l-a-c-e/ordinal/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / REPLACE / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-e-p-l-a-c-e/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-e-p-l-a-c-e/sql/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / REPLACE / sql sql [jvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-e-p-l-a-c-e/sql/#sql","text":"[jvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-o-l-l-b-a-c-k/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / ROLLBACK ROLLBACK [jvm]\\ ROLLBACK (\" OR ROLLBACK \") Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-o-l-l-b-a-c-k/#rollback","text":"[jvm]\\ ROLLBACK (\" OR ROLLBACK \")","title":"ROLLBACK"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-o-l-l-b-a-c-k/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int sql [jvm] open override val sql : String","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-o-l-l-b-a-c-k/name/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / ROLLBACK / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-o-l-l-b-a-c-k/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-o-l-l-b-a-c-k/ordinal/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / ROLLBACK / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-o-l-l-b-a-c-k/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-o-l-l-b-a-c-k/sql/","text":"// Lib / com.bloomberg.selekt / ConflictAlgorithm / ROLLBACK / sql sql [jvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-conflict-algorithm/-r-o-l-l-b-a-c-k/sql/#sql","text":"[jvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/","text":"// Lib / com.bloomberg.selekt / ContentValues ContentValues [jvm]\\ @NotThreadSafe() class ContentValues : IContentValues Functions Name Summary put [jvm] open override fun put (key: String , value: Byte ) open override fun put (key: String , value: ByteArray ) open override fun put (key: String , value: Double ) open override fun put (key: String , value: Float ) open override fun put (key: String , value: Int ) open override fun put (key: String , value: Long ) open override fun put (key: String , value: Short ) open override fun put (key: String , value: String ) putNull [jvm] open override fun putNull (key: String ) Properties Name Summary entrySet [jvm] open override val entrySet : Set < Map.Entry < String , Any ?>> isEmpty [jvm] open override val isEmpty : Boolean size [jvm] open override val size : Int","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/#contentvalues","text":"[jvm]\\ @NotThreadSafe() class ContentValues : IContentValues","title":"ContentValues"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/#functions","text":"Name Summary put [jvm] open override fun put (key: String , value: Byte ) open override fun put (key: String , value: ByteArray ) open override fun put (key: String , value: Double ) open override fun put (key: String , value: Float ) open override fun put (key: String , value: Int ) open override fun put (key: String , value: Long ) open override fun put (key: String , value: Short ) open override fun put (key: String , value: String ) putNull [jvm] open override fun putNull (key: String )","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/#properties","text":"Name Summary entrySet [jvm] open override val entrySet : Set < Map.Entry < String , Any ?>> isEmpty [jvm] open override val isEmpty : Boolean size [jvm] open override val size : Int","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/-content-values/","text":"// Lib / com.bloomberg.selekt / ContentValues / ContentValues ContentValues [jvm]\\ fun ContentValues ()","title":" content values"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/-content-values/#contentvalues","text":"[jvm]\\ fun ContentValues ()","title":"ContentValues"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/entry-set/","text":"// Lib / com.bloomberg.selekt / ContentValues / entrySet entrySet [jvm]\\ open override val entrySet : Set < Map.Entry < String , Any ?>>","title":"Entry set"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/entry-set/#entryset","text":"[jvm]\\ open override val entrySet : Set < Map.Entry < String , Any ?>>","title":"entrySet"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/is-empty/","text":"// Lib / com.bloomberg.selekt / ContentValues / isEmpty isEmpty [jvm]\\ open override val isEmpty : Boolean","title":"Is empty"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/is-empty/#isempty","text":"[jvm]\\ open override val isEmpty : Boolean","title":"isEmpty"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/put-null/","text":"// Lib / com.bloomberg.selekt / ContentValues / putNull putNull [jvm]\\ open override fun putNull (key: String )","title":"Put null"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/put-null/#putnull","text":"[jvm]\\ open override fun putNull (key: String )","title":"putNull"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/put/","text":"// Lib / com.bloomberg.selekt / ContentValues / put put [jvm]\\ open override fun put (key: String , value: Byte ) open override fun put (key: String , value: ByteArray ) open override fun put (key: String , value: Double ) open override fun put (key: String , value: Float ) open override fun put (key: String , value: Int ) open override fun put (key: String , value: Long ) open override fun put (key: String , value: Short ) open override fun put (key: String , value: String )","title":"Put"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/put/#put","text":"[jvm]\\ open override fun put (key: String , value: Byte ) open override fun put (key: String , value: ByteArray ) open override fun put (key: String , value: Double ) open override fun put (key: String , value: Float ) open override fun put (key: String , value: Int ) open override fun put (key: String , value: Long ) open override fun put (key: String , value: Short ) open override fun put (key: String , value: String )","title":"put"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/size/","text":"// Lib / com.bloomberg.selekt / ContentValues / size size [jvm]\\ open override val size : Int","title":"Size"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-content-values/size/#size","text":"[jvm]\\ open override val size : Int","title":"size"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-conflict-algorithm/","text":"// Lib / com.bloomberg.selekt / IConflictAlgorithm IConflictAlgorithm [jvm]\\ interface IConflictAlgorithm Properties Name Summary sql [jvm] abstract val sql : String Inheritors Name ConflictAlgorithm","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-conflict-algorithm/#iconflictalgorithm","text":"[jvm]\\ interface IConflictAlgorithm","title":"IConflictAlgorithm"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-conflict-algorithm/#properties","text":"Name Summary sql [jvm] abstract val sql : String","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-conflict-algorithm/#inheritors","text":"Name ConflictAlgorithm","title":"Inheritors"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-conflict-algorithm/sql/","text":"// Lib / com.bloomberg.selekt / IConflictAlgorithm / sql sql [jvm]\\ abstract val sql : String","title":"Sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-conflict-algorithm/sql/#sql","text":"[jvm]\\ abstract val sql : String","title":"sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/","text":"// Lib / com.bloomberg.selekt / IContentValues IContentValues [jvm]\\ interface IContentValues Functions Name Summary put [jvm] abstract fun put (key: String , value: Byte ) abstract fun put (key: String , value: ByteArray ) abstract fun put (key: String , value: Double ) abstract fun put (key: String , value: Float ) abstract fun put (key: String , value: Int ) abstract fun put (key: String , value: Long ) abstract fun put (key: String , value: Short ) abstract fun put (key: String , value: String ) putNull [jvm] abstract fun putNull (key: String ) Properties Name Summary entrySet [jvm] abstract val entrySet : Set < Map.Entry < String , Any ?>> isEmpty [jvm] abstract val isEmpty : Boolean size [jvm] abstract val size : Int Inheritors Name ContentValues","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/#icontentvalues","text":"[jvm]\\ interface IContentValues","title":"IContentValues"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/#functions","text":"Name Summary put [jvm] abstract fun put (key: String , value: Byte ) abstract fun put (key: String , value: ByteArray ) abstract fun put (key: String , value: Double ) abstract fun put (key: String , value: Float ) abstract fun put (key: String , value: Int ) abstract fun put (key: String , value: Long ) abstract fun put (key: String , value: Short ) abstract fun put (key: String , value: String ) putNull [jvm] abstract fun putNull (key: String )","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/#properties","text":"Name Summary entrySet [jvm] abstract val entrySet : Set < Map.Entry < String , Any ?>> isEmpty [jvm] abstract val isEmpty : Boolean size [jvm] abstract val size : Int","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/#inheritors","text":"Name ContentValues","title":"Inheritors"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/entry-set/","text":"// Lib / com.bloomberg.selekt / IContentValues / entrySet entrySet [jvm]\\ abstract val entrySet : Set < Map.Entry < String , Any ?>>","title":"Entry set"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/entry-set/#entryset","text":"[jvm]\\ abstract val entrySet : Set < Map.Entry < String , Any ?>>","title":"entrySet"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/is-empty/","text":"// Lib / com.bloomberg.selekt / IContentValues / isEmpty isEmpty [jvm]\\ abstract val isEmpty : Boolean","title":"Is empty"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/is-empty/#isempty","text":"[jvm]\\ abstract val isEmpty : Boolean","title":"isEmpty"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/put-null/","text":"// Lib / com.bloomberg.selekt / IContentValues / putNull putNull [jvm]\\ abstract fun putNull (key: String )","title":"Put null"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/put-null/#putnull","text":"[jvm]\\ abstract fun putNull (key: String )","title":"putNull"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/put/","text":"// Lib / com.bloomberg.selekt / IContentValues / put put [jvm]\\ abstract fun put (key: String , value: Byte ) abstract fun put (key: String , value: ByteArray ) abstract fun put (key: String , value: Double ) abstract fun put (key: String , value: Float ) abstract fun put (key: String , value: Int ) abstract fun put (key: String , value: Long ) abstract fun put (key: String , value: Short ) abstract fun put (key: String , value: String )","title":"Put"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/put/#put","text":"[jvm]\\ abstract fun put (key: String , value: Byte ) abstract fun put (key: String , value: ByteArray ) abstract fun put (key: String , value: Double ) abstract fun put (key: String , value: Float ) abstract fun put (key: String , value: Int ) abstract fun put (key: String , value: Long ) abstract fun put (key: String , value: Short ) abstract fun put (key: String , value: String )","title":"put"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/size/","text":"// Lib / com.bloomberg.selekt / IContentValues / size size [jvm]\\ abstract val size : Int","title":"Size"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-content-values/size/#size","text":"[jvm]\\ abstract val size : Int","title":"size"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/","text":"// Lib / com.bloomberg.selekt / ICursor ICursor [jvm]\\ interface ICursor : Closeable Functions Name Summary close [jvm] abstract override fun close () columnIndex [jvm] abstract fun columnIndex (name: String ): Int columnName [jvm] abstract fun columnName (index: Int ): String columnNames [jvm] abstract fun columnNames (): Array String > getBlob [jvm] abstract fun getBlob (index: Int ): ByteArray ? getDouble [jvm] abstract fun getDouble (index: Int ): Double getFloat [jvm] open fun getFloat (index: Int ): Float getInt [jvm] abstract fun getInt (index: Int ): Int getLong [jvm] abstract fun getLong (index: Int ): Long getShort [jvm] open fun getShort (index: Int ): Short getString [jvm] abstract fun getString (index: Int ): String ? isAfterLast [jvm] abstract fun isAfterLast (): Boolean isBeforeFirst [jvm] abstract fun isBeforeFirst (): Boolean isClosed [jvm] abstract fun isClosed (): Boolean isFirst [jvm] abstract fun isFirst (): Boolean isLast [jvm] abstract fun isLast (): Boolean isNull [jvm] abstract fun isNull (index: Int ): Boolean move [jvm] abstract fun move (offset: Int ): Boolean moveToFirst [jvm] abstract fun moveToFirst (): Boolean moveToLast [jvm] abstract fun moveToLast (): Boolean moveToNext [jvm] abstract fun moveToNext (): Boolean moveToPosition [jvm] abstract fun moveToPosition (position: Int ): Boolean moveToPrevious [jvm] abstract fun moveToPrevious (): Boolean position [jvm] abstract fun position (): Int type [jvm] abstract fun type (index: Int ): ColumnType Properties Name Summary columnCount [jvm] abstract val columnCount : Int count [jvm] abstract val count : Int","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/#icursor","text":"[jvm]\\ interface ICursor : Closeable","title":"ICursor"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/#functions","text":"Name Summary close [jvm] abstract override fun close () columnIndex [jvm] abstract fun columnIndex (name: String ): Int columnName [jvm] abstract fun columnName (index: Int ): String columnNames [jvm] abstract fun columnNames (): Array String > getBlob [jvm] abstract fun getBlob (index: Int ): ByteArray ? getDouble [jvm] abstract fun getDouble (index: Int ): Double getFloat [jvm] open fun getFloat (index: Int ): Float getInt [jvm] abstract fun getInt (index: Int ): Int getLong [jvm] abstract fun getLong (index: Int ): Long getShort [jvm] open fun getShort (index: Int ): Short getString [jvm] abstract fun getString (index: Int ): String ? isAfterLast [jvm] abstract fun isAfterLast (): Boolean isBeforeFirst [jvm] abstract fun isBeforeFirst (): Boolean isClosed [jvm] abstract fun isClosed (): Boolean isFirst [jvm] abstract fun isFirst (): Boolean isLast [jvm] abstract fun isLast (): Boolean isNull [jvm] abstract fun isNull (index: Int ): Boolean move [jvm] abstract fun move (offset: Int ): Boolean moveToFirst [jvm] abstract fun moveToFirst (): Boolean moveToLast [jvm] abstract fun moveToLast (): Boolean moveToNext [jvm] abstract fun moveToNext (): Boolean moveToPosition [jvm] abstract fun moveToPosition (position: Int ): Boolean moveToPrevious [jvm] abstract fun moveToPrevious (): Boolean position [jvm] abstract fun position (): Int type [jvm] abstract fun type (index: Int ): ColumnType","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/#properties","text":"Name Summary columnCount [jvm] abstract val columnCount : Int count [jvm] abstract val count : Int","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/column-count/","text":"// Lib / com.bloomberg.selekt / ICursor / columnCount columnCount [jvm]\\ abstract val columnCount : Int","title":"Column count"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/column-count/#columncount","text":"[jvm]\\ abstract val columnCount : Int","title":"columnCount"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/column-index/","text":"// Lib / com.bloomberg.selekt / ICursor / columnIndex columnIndex [jvm]\\ abstract fun columnIndex (name: String ): Int","title":"Column index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/column-index/#columnindex","text":"[jvm]\\ abstract fun columnIndex (name: String ): Int","title":"columnIndex"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/column-name/","text":"// Lib / com.bloomberg.selekt / ICursor / columnName columnName [jvm]\\ abstract fun columnName (index: Int ): String","title":"Column name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/column-name/#columnname","text":"[jvm]\\ abstract fun columnName (index: Int ): String","title":"columnName"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/column-names/","text":"// Lib / com.bloomberg.selekt / ICursor / columnNames columnNames [jvm]\\ abstract fun columnNames (): Array String >","title":"Column names"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/column-names/#columnnames","text":"[jvm]\\ abstract fun columnNames (): Array String >","title":"columnNames"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/count/","text":"// Lib / com.bloomberg.selekt / ICursor / count count [jvm]\\ abstract val count : Int","title":"Count"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/count/#count","text":"[jvm]\\ abstract val count : Int","title":"count"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-blob/","text":"// Lib / com.bloomberg.selekt / ICursor / getBlob getBlob [jvm]\\ abstract fun getBlob (index: Int ): ByteArray ?","title":"Get blob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-blob/#getblob","text":"[jvm]\\ abstract fun getBlob (index: Int ): ByteArray ?","title":"getBlob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-double/","text":"// Lib / com.bloomberg.selekt / ICursor / getDouble getDouble [jvm]\\ abstract fun getDouble (index: Int ): Double","title":"Get double"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-double/#getdouble","text":"[jvm]\\ abstract fun getDouble (index: Int ): Double","title":"getDouble"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-float/","text":"// Lib / com.bloomberg.selekt / ICursor / getFloat getFloat [jvm]\\ open fun getFloat (index: Int ): Float","title":"Get float"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-float/#getfloat","text":"[jvm]\\ open fun getFloat (index: Int ): Float","title":"getFloat"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-int/","text":"// Lib / com.bloomberg.selekt / ICursor / getInt getInt [jvm]\\ abstract fun getInt (index: Int ): Int","title":"Get int"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-int/#getint","text":"[jvm]\\ abstract fun getInt (index: Int ): Int","title":"getInt"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-long/","text":"// Lib / com.bloomberg.selekt / ICursor / getLong getLong [jvm]\\ abstract fun getLong (index: Int ): Long","title":"Get long"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-long/#getlong","text":"[jvm]\\ abstract fun getLong (index: Int ): Long","title":"getLong"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-short/","text":"// Lib / com.bloomberg.selekt / ICursor / getShort getShort [jvm]\\ open fun getShort (index: Int ): Short","title":"Get short"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-short/#getshort","text":"[jvm]\\ open fun getShort (index: Int ): Short","title":"getShort"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-string/","text":"// Lib / com.bloomberg.selekt / ICursor / getString getString [jvm]\\ abstract fun getString (index: Int ): String ?","title":"Get string"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/get-string/#getstring","text":"[jvm]\\ abstract fun getString (index: Int ): String ?","title":"getString"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/is-after-last/","text":"// Lib / com.bloomberg.selekt / ICursor / isAfterLast isAfterLast [jvm]\\ abstract fun isAfterLast (): Boolean","title":"Is after last"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/is-after-last/#isafterlast","text":"[jvm]\\ abstract fun isAfterLast (): Boolean","title":"isAfterLast"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/is-before-first/","text":"// Lib / com.bloomberg.selekt / ICursor / isBeforeFirst isBeforeFirst [jvm]\\ abstract fun isBeforeFirst (): Boolean","title":"Is before first"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/is-before-first/#isbeforefirst","text":"[jvm]\\ abstract fun isBeforeFirst (): Boolean","title":"isBeforeFirst"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/is-closed/","text":"// Lib / com.bloomberg.selekt / ICursor / isClosed isClosed [jvm]\\ abstract fun isClosed (): Boolean","title":"Is closed"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/is-closed/#isclosed","text":"[jvm]\\ abstract fun isClosed (): Boolean","title":"isClosed"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/is-first/","text":"// Lib / com.bloomberg.selekt / ICursor / isFirst isFirst [jvm]\\ abstract fun isFirst (): Boolean","title":"Is first"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/is-first/#isfirst","text":"[jvm]\\ abstract fun isFirst (): Boolean","title":"isFirst"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/is-last/","text":"// Lib / com.bloomberg.selekt / ICursor / isLast isLast [jvm]\\ abstract fun isLast (): Boolean","title":"Is last"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/is-last/#islast","text":"[jvm]\\ abstract fun isLast (): Boolean","title":"isLast"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/is-null/","text":"// Lib / com.bloomberg.selekt / ICursor / isNull isNull [jvm]\\ abstract fun isNull (index: Int ): Boolean","title":"Is null"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/is-null/#isnull","text":"[jvm]\\ abstract fun isNull (index: Int ): Boolean","title":"isNull"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/move-to-first/","text":"// Lib / com.bloomberg.selekt / ICursor / moveToFirst moveToFirst [jvm]\\ abstract fun moveToFirst (): Boolean","title":"Move to first"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/move-to-first/#movetofirst","text":"[jvm]\\ abstract fun moveToFirst (): Boolean","title":"moveToFirst"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/move-to-last/","text":"// Lib / com.bloomberg.selekt / ICursor / moveToLast moveToLast [jvm]\\ abstract fun moveToLast (): Boolean","title":"Move to last"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/move-to-last/#movetolast","text":"[jvm]\\ abstract fun moveToLast (): Boolean","title":"moveToLast"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/move-to-next/","text":"// Lib / com.bloomberg.selekt / ICursor / moveToNext moveToNext [jvm]\\ abstract fun moveToNext (): Boolean","title":"Move to next"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/move-to-next/#movetonext","text":"[jvm]\\ abstract fun moveToNext (): Boolean","title":"moveToNext"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/move-to-position/","text":"// Lib / com.bloomberg.selekt / ICursor / moveToPosition moveToPosition [jvm]\\ abstract fun moveToPosition (position: Int ): Boolean","title":"Move to position"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/move-to-position/#movetoposition","text":"[jvm]\\ abstract fun moveToPosition (position: Int ): Boolean","title":"moveToPosition"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/move-to-previous/","text":"// Lib / com.bloomberg.selekt / ICursor / moveToPrevious moveToPrevious [jvm]\\ abstract fun moveToPrevious (): Boolean","title":"Move to previous"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/move-to-previous/#movetoprevious","text":"[jvm]\\ abstract fun moveToPrevious (): Boolean","title":"moveToPrevious"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/move/","text":"// Lib / com.bloomberg.selekt / ICursor / move move [jvm]\\ abstract fun move (offset: Int ): Boolean","title":"Move"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/move/#move","text":"[jvm]\\ abstract fun move (offset: Int ): Boolean","title":"move"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/position/","text":"// Lib / com.bloomberg.selekt / ICursor / position position [jvm]\\ abstract fun position (): Int","title":"Position"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/position/#position","text":"[jvm]\\ abstract fun position (): Int","title":"position"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/type/","text":"// Lib / com.bloomberg.selekt / ICursor / type type [jvm]\\ abstract fun type (index: Int ): ColumnType","title":"Type"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-cursor/type/#type","text":"[jvm]\\ abstract fun type (index: Int ): ColumnType","title":"type"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/","text":"// Lib / com.bloomberg.selekt / IDatabase IDatabase [jvm]\\ interface IDatabase : IReadableDatabase , ISQLTransactor Functions Name Summary beginExclusiveTransaction [jvm] abstract fun beginExclusiveTransaction () beginExclusiveTransactionWithListener [jvm] abstract fun beginExclusiveTransactionWithListener (listener: SQLTransactionListener ) beginImmediateTransaction [jvm] abstract fun beginImmediateTransaction () beginImmediateTransactionWithListener [jvm] abstract fun beginImmediateTransactionWithListener (listener: SQLTransactionListener ) close [jvm] abstract override fun close () compileStatement [jvm] abstract fun compileStatement (sql: String , bindArgs: Array Any ?>? = null): ISQLStatement delete [jvm] abstract fun delete (table: String , whereClause: String , whereArgs: Array Any ?>): Int endTransaction [jvm] abstract fun endTransaction () exec [jvm] abstract fun exec (sql: String , bindArgs: Array Any ?>? = null) insert [jvm] abstract fun insert (table: String , values: IContentValues , conflictAlgorithm: IConflictAlgorithm ): Long isOpen [jvm] abstract fun isOpen (): Boolean query [jvm] abstract fun query (query: ISQLQuery ): ICursor abstract fun query (sql: String , selectionArgs: Array Any ?>): ICursor abstract fun query (distinct: Boolean , table: String , columns: Array String >, selection: String , selectionArgs: Array Any ?>, groupBy: String ?, having: String ?, orderBy: String ?, limit: Int ?): ICursor setTransactionSuccessful [jvm] abstract fun setTransactionSuccessful () update [jvm] abstract fun update (table: String , values: IContentValues , whereClause: String , whereArgs: Array Any ?>, conflictAlgorithm: IConflictAlgorithm ): Int upsert [jvm] abstract fun upsert (table: String , values: IContentValues , columns: Array String >, update: String ): Long yieldTransaction [jvm] abstract fun yieldTransaction (): Boolean abstract fun yieldTransaction (pauseMillis: Long ): Boolean Properties Name Summary inTransaction [jvm] abstract val inTransaction : Boolean version [jvm] abstract var version : Int Inheritors Name SQLDatabase","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/#idatabase","text":"[jvm]\\ interface IDatabase : IReadableDatabase , ISQLTransactor","title":"IDatabase"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/#functions","text":"Name Summary beginExclusiveTransaction [jvm] abstract fun beginExclusiveTransaction () beginExclusiveTransactionWithListener [jvm] abstract fun beginExclusiveTransactionWithListener (listener: SQLTransactionListener ) beginImmediateTransaction [jvm] abstract fun beginImmediateTransaction () beginImmediateTransactionWithListener [jvm] abstract fun beginImmediateTransactionWithListener (listener: SQLTransactionListener ) close [jvm] abstract override fun close () compileStatement [jvm] abstract fun compileStatement (sql: String , bindArgs: Array Any ?>? = null): ISQLStatement delete [jvm] abstract fun delete (table: String , whereClause: String , whereArgs: Array Any ?>): Int endTransaction [jvm] abstract fun endTransaction () exec [jvm] abstract fun exec (sql: String , bindArgs: Array Any ?>? = null) insert [jvm] abstract fun insert (table: String , values: IContentValues , conflictAlgorithm: IConflictAlgorithm ): Long isOpen [jvm] abstract fun isOpen (): Boolean query [jvm] abstract fun query (query: ISQLQuery ): ICursor abstract fun query (sql: String , selectionArgs: Array Any ?>): ICursor abstract fun query (distinct: Boolean , table: String , columns: Array String >, selection: String , selectionArgs: Array Any ?>, groupBy: String ?, having: String ?, orderBy: String ?, limit: Int ?): ICursor setTransactionSuccessful [jvm] abstract fun setTransactionSuccessful () update [jvm] abstract fun update (table: String , values: IContentValues , whereClause: String , whereArgs: Array Any ?>, conflictAlgorithm: IConflictAlgorithm ): Int upsert [jvm] abstract fun upsert (table: String , values: IContentValues , columns: Array String >, update: String ): Long yieldTransaction [jvm] abstract fun yieldTransaction (): Boolean abstract fun yieldTransaction (pauseMillis: Long ): Boolean","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/#properties","text":"Name Summary inTransaction [jvm] abstract val inTransaction : Boolean version [jvm] abstract var version : Int","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/#inheritors","text":"Name SQLDatabase","title":"Inheritors"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/compile-statement/","text":"// Lib / com.bloomberg.selekt / IDatabase / compileStatement compileStatement [jvm]\\ abstract fun compileStatement (sql: String , bindArgs: Array Any ?>? = null): ISQLStatement","title":"Compile statement"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/compile-statement/#compilestatement","text":"[jvm]\\ abstract fun compileStatement (sql: String , bindArgs: Array Any ?>? = null): ISQLStatement","title":"compileStatement"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/delete/","text":"// Lib / com.bloomberg.selekt / IDatabase / delete delete [jvm]\\ abstract fun delete (table: String , whereClause: String , whereArgs: Array Any ?>): Int","title":"Delete"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/delete/#delete","text":"[jvm]\\ abstract fun delete (table: String , whereClause: String , whereArgs: Array Any ?>): Int","title":"delete"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/exec/","text":"// Lib / com.bloomberg.selekt / IDatabase / exec exec [jvm]\\ abstract fun exec (sql: String , bindArgs: Array Any ?>? = null)","title":"Exec"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/exec/#exec","text":"[jvm]\\ abstract fun exec (sql: String , bindArgs: Array Any ?>? = null)","title":"exec"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/insert/","text":"// Lib / com.bloomberg.selekt / IDatabase / insert insert [jvm]\\ abstract fun insert (table: String , values: IContentValues , conflictAlgorithm: IConflictAlgorithm ): Long","title":"Insert"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/insert/#insert","text":"[jvm]\\ abstract fun insert (table: String , values: IContentValues , conflictAlgorithm: IConflictAlgorithm ): Long","title":"insert"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/update/","text":"// Lib / com.bloomberg.selekt / IDatabase / update update [jvm]\\ abstract fun update (table: String , values: IContentValues , whereClause: String , whereArgs: Array Any ?>, conflictAlgorithm: IConflictAlgorithm ): Int","title":"Update"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/update/#update","text":"[jvm]\\ abstract fun update (table: String , values: IContentValues , whereClause: String , whereArgs: Array Any ?>, conflictAlgorithm: IConflictAlgorithm ): Int","title":"update"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/upsert/","text":"// Lib / com.bloomberg.selekt / IDatabase / upsert upsert [jvm]\\ abstract fun upsert (table: String , values: IContentValues , columns: Array String >, update: String ): Long","title":"Upsert"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/upsert/#upsert","text":"[jvm]\\ abstract fun upsert (table: String , values: IContentValues , columns: Array String >, update: String ): Long","title":"upsert"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/version/","text":"// Lib / com.bloomberg.selekt / IDatabase / version version [jvm]\\ abstract var version : Int","title":"Version"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-database/version/#version","text":"[jvm]\\ abstract var version : Int","title":"version"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-random/","text":"// Lib / com.bloomberg.selekt / IRandom IRandom [jvm]\\ interface IRandom Functions Name Summary nextLong [jvm] abstract fun nextLong (bound: Long ): Long Inheritors Name CommonThreadLocalRandom","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-random/#irandom","text":"[jvm]\\ interface IRandom","title":"IRandom"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-random/#functions","text":"Name Summary nextLong [jvm] abstract fun nextLong (bound: Long ): Long","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-random/#inheritors","text":"Name CommonThreadLocalRandom","title":"Inheritors"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-random/next-long/","text":"// Lib / com.bloomberg.selekt / IRandom / nextLong nextLong [jvm]\\ abstract fun nextLong (bound: Long ): Long","title":"Next long"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-random/next-long/#nextlong","text":"[jvm]\\ abstract fun nextLong (bound: Long ): Long","title":"nextLong"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-readable-database/","text":"// Lib / com.bloomberg.selekt / IReadableDatabase IReadableDatabase [jvm]\\ interface IReadableDatabase : Closeable Functions Name Summary close [jvm] abstract override fun close () isOpen [jvm] abstract fun isOpen (): Boolean query [jvm] abstract fun query (query: ISQLQuery ): ICursor abstract fun query (sql: String , selectionArgs: Array Any ?>): ICursor abstract fun query (distinct: Boolean , table: String , columns: Array String >, selection: String , selectionArgs: Array Any ?>, groupBy: String ?, having: String ?, orderBy: String ?, limit: Int ?): ICursor Inheritors Name IDatabase","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-readable-database/#ireadabledatabase","text":"[jvm]\\ interface IReadableDatabase : Closeable","title":"IReadableDatabase"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-readable-database/#functions","text":"Name Summary close [jvm] abstract override fun close () isOpen [jvm] abstract fun isOpen (): Boolean query [jvm] abstract fun query (query: ISQLQuery ): ICursor abstract fun query (sql: String , selectionArgs: Array Any ?>): ICursor abstract fun query (distinct: Boolean , table: String , columns: Array String >, selection: String , selectionArgs: Array Any ?>, groupBy: String ?, having: String ?, orderBy: String ?, limit: Int ?): ICursor","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-readable-database/#inheritors","text":"Name IDatabase","title":"Inheritors"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-readable-database/is-open/","text":"// Lib / com.bloomberg.selekt / IReadableDatabase / isOpen isOpen [jvm]\\ abstract fun isOpen (): Boolean","title":"Is open"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-readable-database/is-open/#isopen","text":"[jvm]\\ abstract fun isOpen (): Boolean","title":"isOpen"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-readable-database/query/","text":"// Lib / com.bloomberg.selekt / IReadableDatabase / query query [jvm]\\ abstract fun query (distinct: Boolean , table: String , columns: Array String >, selection: String , selectionArgs: Array Any ?>, groupBy: String ?, having: String ?, orderBy: String ?, limit: Int ?): ICursor abstract fun query (sql: String , selectionArgs: Array Any ?>): ICursor abstract fun query (query: ISQLQuery ): ICursor","title":"Query"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-readable-database/query/#query","text":"[jvm]\\ abstract fun query (distinct: Boolean , table: String , columns: Array String >, selection: String , selectionArgs: Array Any ?>, groupBy: String ?, having: String ?, orderBy: String ?, limit: Int ?): ICursor abstract fun query (sql: String , selectionArgs: Array Any ?>): ICursor abstract fun query (query: ISQLQuery ): ICursor","title":"query"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/","text":"// Lib / com.bloomberg.selekt / ISQLTransactor ISQLTransactor [jvm]\\ interface ISQLTransactor Functions Name Summary beginExclusiveTransaction [jvm] abstract fun beginExclusiveTransaction () beginExclusiveTransactionWithListener [jvm] abstract fun beginExclusiveTransactionWithListener (listener: SQLTransactionListener ) beginImmediateTransaction [jvm] abstract fun beginImmediateTransaction () beginImmediateTransactionWithListener [jvm] abstract fun beginImmediateTransactionWithListener (listener: SQLTransactionListener ) endTransaction [jvm] abstract fun endTransaction () setTransactionSuccessful [jvm] abstract fun setTransactionSuccessful () yieldTransaction [jvm] abstract fun yieldTransaction (): Boolean abstract fun yieldTransaction (pauseMillis: Long ): Boolean Properties Name Summary inTransaction [jvm] abstract val inTransaction : Boolean Inheritors Name IDatabase","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/#isqltransactor","text":"[jvm]\\ interface ISQLTransactor","title":"ISQLTransactor"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/#functions","text":"Name Summary beginExclusiveTransaction [jvm] abstract fun beginExclusiveTransaction () beginExclusiveTransactionWithListener [jvm] abstract fun beginExclusiveTransactionWithListener (listener: SQLTransactionListener ) beginImmediateTransaction [jvm] abstract fun beginImmediateTransaction () beginImmediateTransactionWithListener [jvm] abstract fun beginImmediateTransactionWithListener (listener: SQLTransactionListener ) endTransaction [jvm] abstract fun endTransaction () setTransactionSuccessful [jvm] abstract fun setTransactionSuccessful () yieldTransaction [jvm] abstract fun yieldTransaction (): Boolean abstract fun yieldTransaction (pauseMillis: Long ): Boolean","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/#properties","text":"Name Summary inTransaction [jvm] abstract val inTransaction : Boolean","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/#inheritors","text":"Name IDatabase","title":"Inheritors"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/begin-exclusive-transaction-with-listener/","text":"// Lib / com.bloomberg.selekt / ISQLTransactor / beginExclusiveTransactionWithListener beginExclusiveTransactionWithListener [jvm]\\ abstract fun beginExclusiveTransactionWithListener (listener: SQLTransactionListener )","title":"Begin exclusive transaction with listener"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/begin-exclusive-transaction-with-listener/#beginexclusivetransactionwithlistener","text":"[jvm]\\ abstract fun beginExclusiveTransactionWithListener (listener: SQLTransactionListener )","title":"beginExclusiveTransactionWithListener"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/begin-exclusive-transaction/","text":"// Lib / com.bloomberg.selekt / ISQLTransactor / beginExclusiveTransaction beginExclusiveTransaction [jvm]\\ abstract fun beginExclusiveTransaction ()","title":"Begin exclusive transaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/begin-exclusive-transaction/#beginexclusivetransaction","text":"[jvm]\\ abstract fun beginExclusiveTransaction ()","title":"beginExclusiveTransaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/begin-immediate-transaction-with-listener/","text":"// Lib / com.bloomberg.selekt / ISQLTransactor / beginImmediateTransactionWithListener beginImmediateTransactionWithListener [jvm]\\ abstract fun beginImmediateTransactionWithListener (listener: SQLTransactionListener )","title":"Begin immediate transaction with listener"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/begin-immediate-transaction-with-listener/#beginimmediatetransactionwithlistener","text":"[jvm]\\ abstract fun beginImmediateTransactionWithListener (listener: SQLTransactionListener )","title":"beginImmediateTransactionWithListener"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/begin-immediate-transaction/","text":"// Lib / com.bloomberg.selekt / ISQLTransactor / beginImmediateTransaction beginImmediateTransaction [jvm]\\ abstract fun beginImmediateTransaction ()","title":"Begin immediate transaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/begin-immediate-transaction/#beginimmediatetransaction","text":"[jvm]\\ abstract fun beginImmediateTransaction ()","title":"beginImmediateTransaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/end-transaction/","text":"// Lib / com.bloomberg.selekt / ISQLTransactor / endTransaction endTransaction [jvm]\\ abstract fun endTransaction ()","title":"End transaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/end-transaction/#endtransaction","text":"[jvm]\\ abstract fun endTransaction ()","title":"endTransaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/in-transaction/","text":"// Lib / com.bloomberg.selekt / ISQLTransactor / inTransaction inTransaction [jvm]\\ abstract val inTransaction : Boolean","title":"In transaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/in-transaction/#intransaction","text":"[jvm]\\ abstract val inTransaction : Boolean","title":"inTransaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/set-transaction-successful/","text":"// Lib / com.bloomberg.selekt / ISQLTransactor / setTransactionSuccessful setTransactionSuccessful [jvm]\\ abstract fun setTransactionSuccessful ()","title":"Set transaction successful"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/set-transaction-successful/#settransactionsuccessful","text":"[jvm]\\ abstract fun setTransactionSuccessful ()","title":"setTransactionSuccessful"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/yield-transaction/","text":"// Lib / com.bloomberg.selekt / ISQLTransactor / yieldTransaction yieldTransaction [jvm]\\ abstract fun yieldTransaction (): Boolean abstract fun yieldTransaction (pauseMillis: Long ): Boolean","title":"Yield transaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-i-s-q-l-transactor/yield-transaction/#yieldtransaction","text":"[jvm]\\ abstract fun yieldTransaction (): Boolean abstract fun yieldTransaction (pauseMillis: Long ): Boolean","title":"yieldTransaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/","text":"// Lib / com.bloomberg.selekt / SQLDatabase SQLDatabase [jvm]\\ @ThreadSafe() class SQLDatabase ( path : String , sqlite : SQLite , configuration : DatabaseConfiguration , key : ByteArray ?, random : IRandom ) : SharedCloseable , IDatabase The use of ThreadLocal underpins SQLDatabase 's thread-safety. A thread can acquire at most one connection session per database instance. Sessions hold at most one connection at any given time, and exclusively. Sessions control all access to a database's connections and each session is thread-bound. This prevents two threads from ever sharing a single connection. This is the same strategy Google employs in the Android SDK. See also jvm Android's SQLiteDatabase Constructors SQLDatabase [jvm] fun SQLDatabase (path: String , sqlite: SQLite , configuration: DatabaseConfiguration , key: ByteArray ?, random: IRandom = CommonThreadLocalRandom) Functions Name Summary batch [jvm] fun batch (sql: String , bindArgs: Sequence < Array Any ?>>): Int beginExclusiveTransaction [jvm] open override fun beginExclusiveTransaction () beginExclusiveTransactionWithListener [jvm] open override fun beginExclusiveTransactionWithListener (listener: SQLTransactionListener ) beginImmediateTransaction [jvm] open override fun beginImmediateTransaction () beginImmediateTransactionWithListener [jvm] open override fun beginImmediateTransactionWithListener (listener: SQLTransactionListener ) close [jvm] abstract override fun close () compileStatement [jvm] open override fun compileStatement (sql: String , bindArgs: Array Any ?>?): ISQLStatement delete [jvm] open override fun delete (table: String , whereClause: String , whereArgs: Array Any ?>): Int endTransaction [jvm] open override fun endTransaction () exec [jvm] open override fun exec (sql: String , bindArgs: Array Any ?>?) execute [jvm] fun < T > execute (readOnly: Boolean , block: SQLDatabase .() -> T ): T insert [jvm] open override fun insert (table: String , values: IContentValues , conflictAlgorithm: IConflictAlgorithm ): Long isOpen [jvm] abstract fun isOpen (): Boolean pragma [jvm] fun pragma (key: String ): String fun pragma (key: String , value: Any ): String ? query [jvm] open override fun query (query: ISQLQuery ): ICursor open override fun query (sql: String , selectionArgs: Array Any ?>): ICursor open override fun query (distinct: Boolean , table: String , columns: Array String >, selection: String , selectionArgs: Array Any ?>, groupBy: String ?, having: String ?, orderBy: String ?, limit: Int ?): ICursor readFromBlob [jvm] fun readFromBlob (name: String , table: String , column: String , row: Long , offset: Int , limit: Int , stream: OutputStream ) releaseMemory [jvm] fun releaseMemory (priority: Priority ) setTransactionSuccessful [jvm] open override fun setTransactionSuccessful () sizeOfBlob [jvm] fun sizeOfBlob (name: String , table: String , column: String , row: Long ): Int transact [jvm] fun < T > transact (transactionMode: SQLiteTransactionMode = SQLiteTransactionMode.EXCLUSIVE, block: SQLDatabase .() -> T ): T fun < D , T > transact (database: D , transactionMode: SQLiteTransactionMode = SQLiteTransactionMode.EXCLUSIVE, block: D .() -> T ): T update [jvm] open override fun update (table: String , values: IContentValues , whereClause: String , whereArgs: Array Any ?>, conflictAlgorithm: IConflictAlgorithm ): Int upsert [jvm] open override fun upsert (table: String , values: IContentValues , columns: Array String >, update: String ): Long writeToBlob [jvm] fun writeToBlob (name: String , table: String , column: String , row: Long , offset: Int , stream: InputStream ) yieldTransaction [jvm] open override fun yieldTransaction (): Boolean open override fun yieldTransaction (pauseMillis: Long ): Boolean Properties Name Summary inTransaction [jvm] open override val inTransaction : Boolean isCurrentThreadSessionActive [jvm] val isCurrentThreadSessionActive : Boolean path [jvm] val path : String version [jvm] open override var version : Int","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/#sqldatabase","text":"[jvm]\\ @ThreadSafe() class SQLDatabase ( path : String , sqlite : SQLite , configuration : DatabaseConfiguration , key : ByteArray ?, random : IRandom ) : SharedCloseable , IDatabase The use of ThreadLocal underpins SQLDatabase 's thread-safety. A thread can acquire at most one connection session per database instance. Sessions hold at most one connection at any given time, and exclusively. Sessions control all access to a database's connections and each session is thread-bound. This prevents two threads from ever sharing a single connection. This is the same strategy Google employs in the Android SDK.","title":"SQLDatabase"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/#see-also","text":"jvm Android's SQLiteDatabase","title":"See also"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/#constructors","text":"SQLDatabase [jvm] fun SQLDatabase (path: String , sqlite: SQLite , configuration: DatabaseConfiguration , key: ByteArray ?, random: IRandom = CommonThreadLocalRandom)","title":"Constructors"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/#functions","text":"Name Summary batch [jvm] fun batch (sql: String , bindArgs: Sequence < Array Any ?>>): Int beginExclusiveTransaction [jvm] open override fun beginExclusiveTransaction () beginExclusiveTransactionWithListener [jvm] open override fun beginExclusiveTransactionWithListener (listener: SQLTransactionListener ) beginImmediateTransaction [jvm] open override fun beginImmediateTransaction () beginImmediateTransactionWithListener [jvm] open override fun beginImmediateTransactionWithListener (listener: SQLTransactionListener ) close [jvm] abstract override fun close () compileStatement [jvm] open override fun compileStatement (sql: String , bindArgs: Array Any ?>?): ISQLStatement delete [jvm] open override fun delete (table: String , whereClause: String , whereArgs: Array Any ?>): Int endTransaction [jvm] open override fun endTransaction () exec [jvm] open override fun exec (sql: String , bindArgs: Array Any ?>?) execute [jvm] fun < T > execute (readOnly: Boolean , block: SQLDatabase .() -> T ): T insert [jvm] open override fun insert (table: String , values: IContentValues , conflictAlgorithm: IConflictAlgorithm ): Long isOpen [jvm] abstract fun isOpen (): Boolean pragma [jvm] fun pragma (key: String ): String fun pragma (key: String , value: Any ): String ? query [jvm] open override fun query (query: ISQLQuery ): ICursor open override fun query (sql: String , selectionArgs: Array Any ?>): ICursor open override fun query (distinct: Boolean , table: String , columns: Array String >, selection: String , selectionArgs: Array Any ?>, groupBy: String ?, having: String ?, orderBy: String ?, limit: Int ?): ICursor readFromBlob [jvm] fun readFromBlob (name: String , table: String , column: String , row: Long , offset: Int , limit: Int , stream: OutputStream ) releaseMemory [jvm] fun releaseMemory (priority: Priority ) setTransactionSuccessful [jvm] open override fun setTransactionSuccessful () sizeOfBlob [jvm] fun sizeOfBlob (name: String , table: String , column: String , row: Long ): Int transact [jvm] fun < T > transact (transactionMode: SQLiteTransactionMode = SQLiteTransactionMode.EXCLUSIVE, block: SQLDatabase .() -> T ): T fun < D , T > transact (database: D , transactionMode: SQLiteTransactionMode = SQLiteTransactionMode.EXCLUSIVE, block: D .() -> T ): T update [jvm] open override fun update (table: String , values: IContentValues , whereClause: String , whereArgs: Array Any ?>, conflictAlgorithm: IConflictAlgorithm ): Int upsert [jvm] open override fun upsert (table: String , values: IContentValues , columns: Array String >, update: String ): Long writeToBlob [jvm] fun writeToBlob (name: String , table: String , column: String , row: Long , offset: Int , stream: InputStream ) yieldTransaction [jvm] open override fun yieldTransaction (): Boolean open override fun yieldTransaction (pauseMillis: Long ): Boolean","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/#properties","text":"Name Summary inTransaction [jvm] open override val inTransaction : Boolean isCurrentThreadSessionActive [jvm] val isCurrentThreadSessionActive : Boolean path [jvm] val path : String version [jvm] open override var version : Int","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/-s-q-l-database/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / SQLDatabase SQLDatabase [jvm]\\ fun SQLDatabase (path: String , sqlite: SQLite , configuration: DatabaseConfiguration , key: ByteArray ?, random: IRandom = CommonThreadLocalRandom)","title":" s q l database"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/-s-q-l-database/#sqldatabase","text":"[jvm]\\ fun SQLDatabase (path: String , sqlite: SQLite , configuration: DatabaseConfiguration , key: ByteArray ?, random: IRandom = CommonThreadLocalRandom)","title":"SQLDatabase"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/batch/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / batch batch [jvm]\\ fun batch (sql: String , bindArgs: Sequence < Array Any ?>>): Int","title":"Batch"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/batch/#batch","text":"[jvm]\\ fun batch (sql: String , bindArgs: Sequence < Array Any ?>>): Int","title":"batch"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/begin-exclusive-transaction-with-listener/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / beginExclusiveTransactionWithListener beginExclusiveTransactionWithListener [jvm]\\ open override fun beginExclusiveTransactionWithListener (listener: SQLTransactionListener )","title":"Begin exclusive transaction with listener"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/begin-exclusive-transaction-with-listener/#beginexclusivetransactionwithlistener","text":"[jvm]\\ open override fun beginExclusiveTransactionWithListener (listener: SQLTransactionListener )","title":"beginExclusiveTransactionWithListener"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/begin-exclusive-transaction/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / beginExclusiveTransaction beginExclusiveTransaction [jvm]\\ open override fun beginExclusiveTransaction ()","title":"Begin exclusive transaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/begin-exclusive-transaction/#beginexclusivetransaction","text":"[jvm]\\ open override fun beginExclusiveTransaction ()","title":"beginExclusiveTransaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/begin-immediate-transaction-with-listener/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / beginImmediateTransactionWithListener beginImmediateTransactionWithListener [jvm]\\ open override fun beginImmediateTransactionWithListener (listener: SQLTransactionListener )","title":"Begin immediate transaction with listener"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/begin-immediate-transaction-with-listener/#beginimmediatetransactionwithlistener","text":"[jvm]\\ open override fun beginImmediateTransactionWithListener (listener: SQLTransactionListener )","title":"beginImmediateTransactionWithListener"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/begin-immediate-transaction/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / beginImmediateTransaction beginImmediateTransaction [jvm]\\ open override fun beginImmediateTransaction ()","title":"Begin immediate transaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/begin-immediate-transaction/#beginimmediatetransaction","text":"[jvm]\\ open override fun beginImmediateTransaction ()","title":"beginImmediateTransaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/compile-statement/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / compileStatement compileStatement [jvm]\\ open override fun compileStatement (sql: String , bindArgs: Array Any ?>?): ISQLStatement","title":"Compile statement"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/compile-statement/#compilestatement","text":"[jvm]\\ open override fun compileStatement (sql: String , bindArgs: Array Any ?>?): ISQLStatement","title":"compileStatement"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/delete/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / delete delete [jvm]\\ open override fun delete (table: String , whereClause: String , whereArgs: Array Any ?>): Int","title":"Delete"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/delete/#delete","text":"[jvm]\\ open override fun delete (table: String , whereClause: String , whereArgs: Array Any ?>): Int","title":"delete"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/end-transaction/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / endTransaction endTransaction [jvm]\\ open override fun endTransaction ()","title":"End transaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/end-transaction/#endtransaction","text":"[jvm]\\ open override fun endTransaction ()","title":"endTransaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/exec/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / exec exec [jvm]\\ open override fun exec (sql: String , bindArgs: Array Any ?>?)","title":"Exec"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/exec/#exec","text":"[jvm]\\ open override fun exec (sql: String , bindArgs: Array Any ?>?)","title":"exec"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/execute/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / execute execute [jvm]\\ fun < T > execute (readOnly: Boolean , block: SQLDatabase .() -> T ): T","title":"Execute"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/execute/#execute","text":"[jvm]\\ fun < T > execute (readOnly: Boolean , block: SQLDatabase .() -> T ): T","title":"execute"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/in-transaction/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / inTransaction inTransaction [jvm]\\ open override val inTransaction : Boolean","title":"In transaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/in-transaction/#intransaction","text":"[jvm]\\ open override val inTransaction : Boolean","title":"inTransaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/insert/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / insert insert [jvm]\\ open override fun insert (table: String , values: IContentValues , conflictAlgorithm: IConflictAlgorithm ): Long","title":"Insert"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/insert/#insert","text":"[jvm]\\ open override fun insert (table: String , values: IContentValues , conflictAlgorithm: IConflictAlgorithm ): Long","title":"insert"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/is-current-thread-session-active/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / isCurrentThreadSessionActive isCurrentThreadSessionActive [jvm]\\ val isCurrentThreadSessionActive : Boolean","title":"Is current thread session active"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/is-current-thread-session-active/#iscurrentthreadsessionactive","text":"[jvm]\\ val isCurrentThreadSessionActive : Boolean","title":"isCurrentThreadSessionActive"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/path/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / path path [jvm]\\ val path : String","title":"Path"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/path/#path","text":"[jvm]\\ val path : String","title":"path"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/pragma/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / pragma pragma [jvm]\\ fun pragma (key: String ): String fun pragma (key: String , value: Any ): String ?","title":"Pragma"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/pragma/#pragma","text":"[jvm]\\ fun pragma (key: String ): String fun pragma (key: String , value: Any ): String ?","title":"pragma"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/query/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / query query [jvm]\\ open override fun query (distinct: Boolean , table: String , columns: Array String >, selection: String , selectionArgs: Array Any ?>, groupBy: String ?, having: String ?, orderBy: String ?, limit: Int ?): ICursor open override fun query (sql: String , selectionArgs: Array Any ?>): ICursor open override fun query (query: ISQLQuery ): ICursor","title":"Query"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/query/#query","text":"[jvm]\\ open override fun query (distinct: Boolean , table: String , columns: Array String >, selection: String , selectionArgs: Array Any ?>, groupBy: String ?, having: String ?, orderBy: String ?, limit: Int ?): ICursor open override fun query (sql: String , selectionArgs: Array Any ?>): ICursor open override fun query (query: ISQLQuery ): ICursor","title":"query"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/read-from-blob/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / readFromBlob readFromBlob [jvm]\\ fun readFromBlob (name: String , table: String , column: String , row: Long , offset: Int , limit: Int , stream: OutputStream )","title":"Read from blob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/read-from-blob/#readfromblob","text":"[jvm]\\ fun readFromBlob (name: String , table: String , column: String , row: Long , offset: Int , limit: Int , stream: OutputStream )","title":"readFromBlob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/release-memory/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / releaseMemory releaseMemory [jvm]\\ fun releaseMemory (priority: Priority )","title":"Release memory"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/release-memory/#releasememory","text":"[jvm]\\ fun releaseMemory (priority: Priority )","title":"releaseMemory"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/set-transaction-successful/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / setTransactionSuccessful setTransactionSuccessful [jvm]\\ open override fun setTransactionSuccessful ()","title":"Set transaction successful"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/set-transaction-successful/#settransactionsuccessful","text":"[jvm]\\ open override fun setTransactionSuccessful ()","title":"setTransactionSuccessful"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/size-of-blob/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / sizeOfBlob sizeOfBlob [jvm]\\ fun sizeOfBlob (name: String , table: String , column: String , row: Long ): Int","title":"Size of blob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/size-of-blob/#sizeofblob","text":"[jvm]\\ fun sizeOfBlob (name: String , table: String , column: String , row: Long ): Int","title":"sizeOfBlob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/transact/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / transact transact [jvm]\\ fun < T > transact (transactionMode: SQLiteTransactionMode = SQLiteTransactionMode.EXCLUSIVE, block: SQLDatabase .() -> T ): T fun < D , T > transact (database: D , transactionMode: SQLiteTransactionMode = SQLiteTransactionMode.EXCLUSIVE, block: D .() -> T ): T","title":"Transact"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/transact/#transact","text":"[jvm]\\ fun < T > transact (transactionMode: SQLiteTransactionMode = SQLiteTransactionMode.EXCLUSIVE, block: SQLDatabase .() -> T ): T fun < D , T > transact (database: D , transactionMode: SQLiteTransactionMode = SQLiteTransactionMode.EXCLUSIVE, block: D .() -> T ): T","title":"transact"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/update/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / update update [jvm]\\ open override fun update (table: String , values: IContentValues , whereClause: String , whereArgs: Array Any ?>, conflictAlgorithm: IConflictAlgorithm ): Int","title":"Update"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/update/#update","text":"[jvm]\\ open override fun update (table: String , values: IContentValues , whereClause: String , whereArgs: Array Any ?>, conflictAlgorithm: IConflictAlgorithm ): Int","title":"update"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/upsert/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / upsert upsert [jvm]\\ open override fun upsert (table: String , values: IContentValues , columns: Array String >, update: String ): Long","title":"Upsert"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/upsert/#upsert","text":"[jvm]\\ open override fun upsert (table: String , values: IContentValues , columns: Array String >, update: String ): Long","title":"upsert"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/version/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / version version [jvm]\\ open override var version : Int","title":"Version"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/version/#version","text":"[jvm]\\ open override var version : Int","title":"version"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/write-to-blob/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / writeToBlob writeToBlob [jvm]\\ fun writeToBlob (name: String , table: String , column: String , row: Long , offset: Int , stream: InputStream )","title":"Write to blob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/write-to-blob/#writetoblob","text":"[jvm]\\ fun writeToBlob (name: String , table: String , column: String , row: Long , offset: Int , stream: InputStream )","title":"writeToBlob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/yield-transaction/","text":"// Lib / com.bloomberg.selekt / SQLDatabase / yieldTransaction yieldTransaction [jvm]\\ open override fun yieldTransaction (): Boolean open override fun yieldTransaction (pauseMillis: Long ): Boolean","title":"Yield transaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-database/yield-transaction/#yieldtransaction","text":"[jvm]\\ open override fun yieldTransaction (): Boolean open override fun yieldTransaction (pauseMillis: Long ): Boolean","title":"yieldTransaction"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-transaction-listener/","text":"// Lib / com.bloomberg.selekt / SQLTransactionListener SQLTransactionListener [jvm]\\ interface SQLTransactionListener Functions Name Summary onBegin [jvm] abstract fun onBegin () Called immediately after the transaction begins. onCommit [jvm] abstract fun onCommit () Called immediately before committing the transaction. onRollback [jvm] abstract fun onRollback () Called immediately before rolling back the transaction.","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-transaction-listener/#sqltransactionlistener","text":"[jvm]\\ interface SQLTransactionListener","title":"SQLTransactionListener"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-transaction-listener/#functions","text":"Name Summary onBegin [jvm] abstract fun onBegin () Called immediately after the transaction begins. onCommit [jvm] abstract fun onCommit () Called immediately before committing the transaction. onRollback [jvm] abstract fun onRollback () Called immediately before rolling back the transaction.","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-transaction-listener/on-begin/","text":"// Lib / com.bloomberg.selekt / SQLTransactionListener / onBegin onBegin [jvm]\\ abstract fun onBegin () Called immediately after the transaction begins.","title":"On begin"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-transaction-listener/on-begin/#onbegin","text":"[jvm]\\ abstract fun onBegin () Called immediately after the transaction begins.","title":"onBegin"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-transaction-listener/on-commit/","text":"// Lib / com.bloomberg.selekt / SQLTransactionListener / onCommit onCommit [jvm]\\ abstract fun onCommit () Called immediately before committing the transaction. If the transaction commit fails the listener will be notified of the subsequent rollback event.","title":"On commit"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-transaction-listener/on-commit/#oncommit","text":"[jvm]\\ abstract fun onCommit () Called immediately before committing the transaction. If the transaction commit fails the listener will be notified of the subsequent rollback event.","title":"onCommit"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-transaction-listener/on-rollback/","text":"// Lib / com.bloomberg.selekt / SQLTransactionListener / onRollback onRollback [jvm]\\ abstract fun onRollback () Called immediately before rolling back the transaction.","title":"On rollback"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-l-transaction-listener/on-rollback/#onrollback","text":"[jvm]\\ abstract fun onRollback () Called immediately before rolling back the transaction.","title":"onRollback"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/","text":"// Lib / com.bloomberg.selekt / SQLite SQLite [jvm]\\ open class SQLite ( sqlite : ExternalSQLite ) Functions Name Summary bindBlob [jvm] fun bindBlob (statement: Long , index: Int , blob: ByteArray ): Int bindDouble [jvm] fun bindDouble (statement: Long , index: Int , value: Double ): Int bindInt [jvm] fun bindInt (statement: Long , index: Int , value: Int ): Int bindInt64 [jvm] fun bindInt64 (statement: Long , index: Int , value: Long ): Int bindNull [jvm] fun bindNull (statement: Long , index: Int ): Int bindParameterCount [jvm] fun bindParameterCount (statement: Long ): Int bindText [jvm] fun bindText (statement: Long , index: Int , value: String ): Int bindZeroBlob [jvm] fun bindZeroBlob (statement: Long , index: Int , length: Int ): Int blobBytes [jvm] fun blobBytes (blob: Long ): Int blobClose [jvm] fun blobClose (blob: Long ): Int blobOpen [jvm] fun blobOpen (db: Long , name: String , table: String , column: String , row: Long , flags: Int , holder: LongArray ): Int blobRead [jvm] fun blobRead (blob: Long , offset: Int , destination: ByteArray , destinationOffset: Int , length: Int ): Int blobReopen [jvm] fun blobReopen (blob: Long , row: Long ): Int blobWrite [jvm] fun blobWrite (blob: Long , offset: Int , source: ByteArray , sourceOffset: Int , length: Int ): Int busyTimeout [jvm] fun busyTimeout (db: Long , millis: Int ): Int changes [jvm] fun changes (db: Long ): Int clearBindings [jvm] fun clearBindings (statement: Long ): Int closeV2 [jvm] fun closeV2 (db: Long ): Int columnBlob [jvm] fun columnBlob (statement: Long , index: Int ): ByteArray ? columnCount [jvm] fun columnCount (statement: Long ): Int columnDouble [jvm] fun columnDouble (statement: Long , index: Int ): Double columnInt [jvm] fun columnInt (statement: Long , index: Int ): Int columnInt64 [jvm] fun columnInt64 (statement: Long , index: Int ): Long columnName [jvm] fun columnName (statement: Long , index: Int ): String columnText [jvm] fun columnText (statement: Long , index: Int ): String columnType [jvm] fun columnType (statement: Long , index: Int ): Int columnValue [jvm] fun columnValue (statement: Long , index: Int ): Long databaseHandle [jvm] fun databaseHandle (statement: Long ): Long databaseReadOnly [jvm] fun databaseReadOnly (db: Long , name: String ): Int databaseReleaseMemory [jvm] fun databaseReleaseMemory (db: Long ): Int databaseStatus [jvm] fun databaseStatus (db: Long , options: Int , reset: Boolean , holder: IntArray ): Int errorCode [jvm] fun errorCode (db: Long ): Int errorMessage [jvm] fun errorMessage (db: Long ): String exec [jvm] fun exec (db: Long , query: String ): Int expandedSql [jvm] fun expandedSql (statement: Long ): String extendedErrorCode [jvm] fun extendedErrorCode (db: Long ): Int extendedResultCodes [jvm] fun extendedResultCodes (db: Long , onOff: Int ): Int finalize [jvm] fun finalize (statement: Long ): Int getAutocommit [jvm] fun getAutocommit (db: Long ): Int hardHeapLimit64 [jvm] fun hardHeapLimit64 (): Long key [jvm] fun key (db: Long , key: ByteArray ): Int keyConventionally [jvm] fun keyConventionally (db: Long , key: ByteArray ): Int keywordCount [jvm] fun keywordCount (): Int lastInsertRowId [jvm] fun lastInsertRowId (db: Long ): Long memoryUsed [jvm] fun memoryUsed (): Long openV2 [jvm] fun openV2 (path: String , flags: Int , dbHolder: LongArray ): Int prepareV2 [jvm] fun prepareV2 (db: Long , sql: String , statementHolder: LongArray ): Int rawKey [jvm] fun rawKey (db: Long , key: ByteArray ): Int rekey [jvm] fun rekey (db: Long , key: ByteArray ): Int releaseMemory [jvm] fun releaseMemory (bytes: Int ): Int reset [jvm] fun reset (statement: Long ): Int softHeapLimit64 [jvm] fun softHeapLimit64 (): Long sql [jvm] fun sql (statement: Long ): String statementBusy [jvm] fun statementBusy (statement: Long ): Int statementReadOnly [jvm] fun statementReadOnly (statement: Long ): Int statementStatus [jvm] fun statementStatus (statement: Long , options: Int , reset: Boolean ): Int step [jvm] fun step (statement: Long ): Int stepWithoutThrowing [jvm] fun stepWithoutThrowing (statement: Long ): Int threadsafe [jvm] fun threadsafe (): Int throwSQLException [jvm] fun throwSQLException (db: Long , context: String ? = null): Nothing open fun throwSQLException (code: SQLCode , extendedCode: SQLCode , message: String , context: String ? = null): Nothing totalChanges [jvm] fun totalChanges (db: Long ): Int traceV2 [jvm] fun traceV2 (db: Long , flag: Int ) transactionState [jvm] fun transactionState (db: Long ): Int valueDup [jvm] fun valueDup (value: Long ): Long valueFree [jvm] fun valueFree (value: Long ) valueFromBind [jvm] fun valueFromBind (value: Long ): Int walAutoCheckpoint [jvm] fun walAutoCheckpoint (db: Long , pages: Int ): Int walCheckpointV2 [jvm] fun walCheckpointV2 (db: Long , name: String ?, mode: Int ): Int","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/#sqlite","text":"[jvm]\\ open class SQLite ( sqlite : ExternalSQLite )","title":"SQLite"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/#functions","text":"Name Summary bindBlob [jvm] fun bindBlob (statement: Long , index: Int , blob: ByteArray ): Int bindDouble [jvm] fun bindDouble (statement: Long , index: Int , value: Double ): Int bindInt [jvm] fun bindInt (statement: Long , index: Int , value: Int ): Int bindInt64 [jvm] fun bindInt64 (statement: Long , index: Int , value: Long ): Int bindNull [jvm] fun bindNull (statement: Long , index: Int ): Int bindParameterCount [jvm] fun bindParameterCount (statement: Long ): Int bindText [jvm] fun bindText (statement: Long , index: Int , value: String ): Int bindZeroBlob [jvm] fun bindZeroBlob (statement: Long , index: Int , length: Int ): Int blobBytes [jvm] fun blobBytes (blob: Long ): Int blobClose [jvm] fun blobClose (blob: Long ): Int blobOpen [jvm] fun blobOpen (db: Long , name: String , table: String , column: String , row: Long , flags: Int , holder: LongArray ): Int blobRead [jvm] fun blobRead (blob: Long , offset: Int , destination: ByteArray , destinationOffset: Int , length: Int ): Int blobReopen [jvm] fun blobReopen (blob: Long , row: Long ): Int blobWrite [jvm] fun blobWrite (blob: Long , offset: Int , source: ByteArray , sourceOffset: Int , length: Int ): Int busyTimeout [jvm] fun busyTimeout (db: Long , millis: Int ): Int changes [jvm] fun changes (db: Long ): Int clearBindings [jvm] fun clearBindings (statement: Long ): Int closeV2 [jvm] fun closeV2 (db: Long ): Int columnBlob [jvm] fun columnBlob (statement: Long , index: Int ): ByteArray ? columnCount [jvm] fun columnCount (statement: Long ): Int columnDouble [jvm] fun columnDouble (statement: Long , index: Int ): Double columnInt [jvm] fun columnInt (statement: Long , index: Int ): Int columnInt64 [jvm] fun columnInt64 (statement: Long , index: Int ): Long columnName [jvm] fun columnName (statement: Long , index: Int ): String columnText [jvm] fun columnText (statement: Long , index: Int ): String columnType [jvm] fun columnType (statement: Long , index: Int ): Int columnValue [jvm] fun columnValue (statement: Long , index: Int ): Long databaseHandle [jvm] fun databaseHandle (statement: Long ): Long databaseReadOnly [jvm] fun databaseReadOnly (db: Long , name: String ): Int databaseReleaseMemory [jvm] fun databaseReleaseMemory (db: Long ): Int databaseStatus [jvm] fun databaseStatus (db: Long , options: Int , reset: Boolean , holder: IntArray ): Int errorCode [jvm] fun errorCode (db: Long ): Int errorMessage [jvm] fun errorMessage (db: Long ): String exec [jvm] fun exec (db: Long , query: String ): Int expandedSql [jvm] fun expandedSql (statement: Long ): String extendedErrorCode [jvm] fun extendedErrorCode (db: Long ): Int extendedResultCodes [jvm] fun extendedResultCodes (db: Long , onOff: Int ): Int finalize [jvm] fun finalize (statement: Long ): Int getAutocommit [jvm] fun getAutocommit (db: Long ): Int hardHeapLimit64 [jvm] fun hardHeapLimit64 (): Long key [jvm] fun key (db: Long , key: ByteArray ): Int keyConventionally [jvm] fun keyConventionally (db: Long , key: ByteArray ): Int keywordCount [jvm] fun keywordCount (): Int lastInsertRowId [jvm] fun lastInsertRowId (db: Long ): Long memoryUsed [jvm] fun memoryUsed (): Long openV2 [jvm] fun openV2 (path: String , flags: Int , dbHolder: LongArray ): Int prepareV2 [jvm] fun prepareV2 (db: Long , sql: String , statementHolder: LongArray ): Int rawKey [jvm] fun rawKey (db: Long , key: ByteArray ): Int rekey [jvm] fun rekey (db: Long , key: ByteArray ): Int releaseMemory [jvm] fun releaseMemory (bytes: Int ): Int reset [jvm] fun reset (statement: Long ): Int softHeapLimit64 [jvm] fun softHeapLimit64 (): Long sql [jvm] fun sql (statement: Long ): String statementBusy [jvm] fun statementBusy (statement: Long ): Int statementReadOnly [jvm] fun statementReadOnly (statement: Long ): Int statementStatus [jvm] fun statementStatus (statement: Long , options: Int , reset: Boolean ): Int step [jvm] fun step (statement: Long ): Int stepWithoutThrowing [jvm] fun stepWithoutThrowing (statement: Long ): Int threadsafe [jvm] fun threadsafe (): Int throwSQLException [jvm] fun throwSQLException (db: Long , context: String ? = null): Nothing open fun throwSQLException (code: SQLCode , extendedCode: SQLCode , message: String , context: String ? = null): Nothing totalChanges [jvm] fun totalChanges (db: Long ): Int traceV2 [jvm] fun traceV2 (db: Long , flag: Int ) transactionState [jvm] fun transactionState (db: Long ): Int valueDup [jvm] fun valueDup (value: Long ): Long valueFree [jvm] fun valueFree (value: Long ) valueFromBind [jvm] fun valueFromBind (value: Long ): Int walAutoCheckpoint [jvm] fun walAutoCheckpoint (db: Long , pages: Int ): Int walCheckpointV2 [jvm] fun walCheckpointV2 (db: Long , name: String ?, mode: Int ): Int","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/-s-q-lite/","text":"// Lib / com.bloomberg.selekt / SQLite / SQLite SQLite [jvm]\\ fun SQLite (sqlite: ExternalSQLite )","title":" s q lite"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/-s-q-lite/#sqlite","text":"[jvm]\\ fun SQLite (sqlite: ExternalSQLite )","title":"SQLite"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-blob/","text":"// Lib / com.bloomberg.selekt / SQLite / bindBlob bindBlob [jvm]\\ fun bindBlob (statement: Long , index: Int , blob: ByteArray ): Int","title":"Bind blob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-blob/#bindblob","text":"[jvm]\\ fun bindBlob (statement: Long , index: Int , blob: ByteArray ): Int","title":"bindBlob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-double/","text":"// Lib / com.bloomberg.selekt / SQLite / bindDouble bindDouble [jvm]\\ fun bindDouble (statement: Long , index: Int , value: Double ): Int","title":"Bind double"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-double/#binddouble","text":"[jvm]\\ fun bindDouble (statement: Long , index: Int , value: Double ): Int","title":"bindDouble"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-int/","text":"// Lib / com.bloomberg.selekt / SQLite / bindInt bindInt [jvm]\\ fun bindInt (statement: Long , index: Int , value: Int ): Int","title":"Bind int"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-int/#bindint","text":"[jvm]\\ fun bindInt (statement: Long , index: Int , value: Int ): Int","title":"bindInt"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-int64/","text":"// Lib / com.bloomberg.selekt / SQLite / bindInt64 bindInt64 [jvm]\\ fun bindInt64 (statement: Long , index: Int , value: Long ): Int","title":"Bind int64"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-int64/#bindint64","text":"[jvm]\\ fun bindInt64 (statement: Long , index: Int , value: Long ): Int","title":"bindInt64"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-null/","text":"// Lib / com.bloomberg.selekt / SQLite / bindNull bindNull [jvm]\\ fun bindNull (statement: Long , index: Int ): Int","title":"Bind null"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-null/#bindnull","text":"[jvm]\\ fun bindNull (statement: Long , index: Int ): Int","title":"bindNull"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-parameter-count/","text":"// Lib / com.bloomberg.selekt / SQLite / bindParameterCount bindParameterCount [jvm]\\ fun bindParameterCount (statement: Long ): Int","title":"Bind parameter count"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-parameter-count/#bindparametercount","text":"[jvm]\\ fun bindParameterCount (statement: Long ): Int","title":"bindParameterCount"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-text/","text":"// Lib / com.bloomberg.selekt / SQLite / bindText bindText [jvm]\\ fun bindText (statement: Long , index: Int , value: String ): Int","title":"Bind text"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-text/#bindtext","text":"[jvm]\\ fun bindText (statement: Long , index: Int , value: String ): Int","title":"bindText"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-zero-blob/","text":"// Lib / com.bloomberg.selekt / SQLite / bindZeroBlob bindZeroBlob [jvm]\\ fun bindZeroBlob (statement: Long , index: Int , length: Int ): Int","title":"Bind zero blob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/bind-zero-blob/#bindzeroblob","text":"[jvm]\\ fun bindZeroBlob (statement: Long , index: Int , length: Int ): Int","title":"bindZeroBlob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/blob-bytes/","text":"// Lib / com.bloomberg.selekt / SQLite / blobBytes blobBytes [jvm]\\ fun blobBytes (blob: Long ): Int","title":"Blob bytes"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/blob-bytes/#blobbytes","text":"[jvm]\\ fun blobBytes (blob: Long ): Int","title":"blobBytes"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/blob-close/","text":"// Lib / com.bloomberg.selekt / SQLite / blobClose blobClose [jvm]\\ fun blobClose (blob: Long ): Int","title":"Blob close"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/blob-close/#blobclose","text":"[jvm]\\ fun blobClose (blob: Long ): Int","title":"blobClose"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/blob-open/","text":"// Lib / com.bloomberg.selekt / SQLite / blobOpen blobOpen [jvm]\\ fun blobOpen (db: Long , name: String , table: String , column: String , row: Long , flags: Int , holder: LongArray ): Int","title":"Blob open"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/blob-open/#blobopen","text":"[jvm]\\ fun blobOpen (db: Long , name: String , table: String , column: String , row: Long , flags: Int , holder: LongArray ): Int","title":"blobOpen"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/blob-read/","text":"// Lib / com.bloomberg.selekt / SQLite / blobRead blobRead [jvm]\\ fun blobRead (blob: Long , offset: Int , destination: ByteArray , destinationOffset: Int , length: Int ): Int","title":"Blob read"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/blob-read/#blobread","text":"[jvm]\\ fun blobRead (blob: Long , offset: Int , destination: ByteArray , destinationOffset: Int , length: Int ): Int","title":"blobRead"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/blob-reopen/","text":"// Lib / com.bloomberg.selekt / SQLite / blobReopen blobReopen [jvm]\\ fun blobReopen (blob: Long , row: Long ): Int","title":"Blob reopen"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/blob-reopen/#blobreopen","text":"[jvm]\\ fun blobReopen (blob: Long , row: Long ): Int","title":"blobReopen"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/blob-write/","text":"// Lib / com.bloomberg.selekt / SQLite / blobWrite blobWrite [jvm]\\ fun blobWrite (blob: Long , offset: Int , source: ByteArray , sourceOffset: Int , length: Int ): Int","title":"Blob write"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/blob-write/#blobwrite","text":"[jvm]\\ fun blobWrite (blob: Long , offset: Int , source: ByteArray , sourceOffset: Int , length: Int ): Int","title":"blobWrite"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/busy-timeout/","text":"// Lib / com.bloomberg.selekt / SQLite / busyTimeout busyTimeout [jvm]\\ fun busyTimeout (db: Long , millis: Int ): Int","title":"Busy timeout"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/busy-timeout/#busytimeout","text":"[jvm]\\ fun busyTimeout (db: Long , millis: Int ): Int","title":"busyTimeout"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/changes/","text":"// Lib / com.bloomberg.selekt / SQLite / changes changes [jvm]\\ fun changes (db: Long ): Int","title":"Changes"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/changes/#changes","text":"[jvm]\\ fun changes (db: Long ): Int","title":"changes"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/clear-bindings/","text":"// Lib / com.bloomberg.selekt / SQLite / clearBindings clearBindings [jvm]\\ fun clearBindings (statement: Long ): Int","title":"Clear bindings"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/clear-bindings/#clearbindings","text":"[jvm]\\ fun clearBindings (statement: Long ): Int","title":"clearBindings"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/close-v2/","text":"// Lib / com.bloomberg.selekt / SQLite / closeV2 closeV2 [jvm]\\ fun closeV2 (db: Long ): Int","title":"Close v2"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/close-v2/#closev2","text":"[jvm]\\ fun closeV2 (db: Long ): Int","title":"closeV2"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-blob/","text":"// Lib / com.bloomberg.selekt / SQLite / columnBlob columnBlob [jvm]\\ fun columnBlob (statement: Long , index: Int ): ByteArray ?","title":"Column blob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-blob/#columnblob","text":"[jvm]\\ fun columnBlob (statement: Long , index: Int ): ByteArray ?","title":"columnBlob"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-count/","text":"// Lib / com.bloomberg.selekt / SQLite / columnCount columnCount [jvm]\\ fun columnCount (statement: Long ): Int","title":"Column count"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-count/#columncount","text":"[jvm]\\ fun columnCount (statement: Long ): Int","title":"columnCount"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-double/","text":"// Lib / com.bloomberg.selekt / SQLite / columnDouble columnDouble [jvm]\\ fun columnDouble (statement: Long , index: Int ): Double","title":"Column double"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-double/#columndouble","text":"[jvm]\\ fun columnDouble (statement: Long , index: Int ): Double","title":"columnDouble"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-int/","text":"// Lib / com.bloomberg.selekt / SQLite / columnInt columnInt [jvm]\\ fun columnInt (statement: Long , index: Int ): Int","title":"Column int"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-int/#columnint","text":"[jvm]\\ fun columnInt (statement: Long , index: Int ): Int","title":"columnInt"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-int64/","text":"// Lib / com.bloomberg.selekt / SQLite / columnInt64 columnInt64 [jvm]\\ fun columnInt64 (statement: Long , index: Int ): Long","title":"Column int64"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-int64/#columnint64","text":"[jvm]\\ fun columnInt64 (statement: Long , index: Int ): Long","title":"columnInt64"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-name/","text":"// Lib / com.bloomberg.selekt / SQLite / columnName columnName [jvm]\\ fun columnName (statement: Long , index: Int ): String","title":"Column name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-name/#columnname","text":"[jvm]\\ fun columnName (statement: Long , index: Int ): String","title":"columnName"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-text/","text":"// Lib / com.bloomberg.selekt / SQLite / columnText columnText [jvm]\\ fun columnText (statement: Long , index: Int ): String","title":"Column text"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-text/#columntext","text":"[jvm]\\ fun columnText (statement: Long , index: Int ): String","title":"columnText"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-type/","text":"// Lib / com.bloomberg.selekt / SQLite / columnType columnType [jvm]\\ fun columnType (statement: Long , index: Int ): Int","title":"Column type"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-type/#columntype","text":"[jvm]\\ fun columnType (statement: Long , index: Int ): Int","title":"columnType"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-value/","text":"// Lib / com.bloomberg.selekt / SQLite / columnValue columnValue [jvm]\\ fun columnValue (statement: Long , index: Int ): Long","title":"Column value"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/column-value/#columnvalue","text":"[jvm]\\ fun columnValue (statement: Long , index: Int ): Long","title":"columnValue"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/database-handle/","text":"// Lib / com.bloomberg.selekt / SQLite / databaseHandle databaseHandle [jvm]\\ fun databaseHandle (statement: Long ): Long","title":"Database handle"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/database-handle/#databasehandle","text":"[jvm]\\ fun databaseHandle (statement: Long ): Long","title":"databaseHandle"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/database-read-only/","text":"// Lib / com.bloomberg.selekt / SQLite / databaseReadOnly databaseReadOnly [jvm]\\ fun databaseReadOnly (db: Long , name: String ): Int","title":"Database read only"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/database-read-only/#databasereadonly","text":"[jvm]\\ fun databaseReadOnly (db: Long , name: String ): Int","title":"databaseReadOnly"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/database-release-memory/","text":"// Lib / com.bloomberg.selekt / SQLite / databaseReleaseMemory databaseReleaseMemory [jvm]\\ fun databaseReleaseMemory (db: Long ): Int","title":"Database release memory"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/database-release-memory/#databasereleasememory","text":"[jvm]\\ fun databaseReleaseMemory (db: Long ): Int","title":"databaseReleaseMemory"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/database-status/","text":"// Lib / com.bloomberg.selekt / SQLite / databaseStatus databaseStatus [jvm]\\ fun databaseStatus (db: Long , options: Int , reset: Boolean , holder: IntArray ): Int","title":"Database status"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/database-status/#databasestatus","text":"[jvm]\\ fun databaseStatus (db: Long , options: Int , reset: Boolean , holder: IntArray ): Int","title":"databaseStatus"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/error-code/","text":"// Lib / com.bloomberg.selekt / SQLite / errorCode errorCode [jvm]\\ fun errorCode (db: Long ): Int","title":"Error code"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/error-code/#errorcode","text":"[jvm]\\ fun errorCode (db: Long ): Int","title":"errorCode"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/error-message/","text":"// Lib / com.bloomberg.selekt / SQLite / errorMessage errorMessage [jvm]\\ fun errorMessage (db: Long ): String","title":"Error message"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/error-message/#errormessage","text":"[jvm]\\ fun errorMessage (db: Long ): String","title":"errorMessage"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/exec/","text":"// Lib / com.bloomberg.selekt / SQLite / exec exec [jvm]\\ fun exec (db: Long , query: String ): Int","title":"Exec"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/exec/#exec","text":"[jvm]\\ fun exec (db: Long , query: String ): Int","title":"exec"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/expanded-sql/","text":"// Lib / com.bloomberg.selekt / SQLite / expandedSql expandedSql [jvm]\\ fun expandedSql (statement: Long ): String","title":"Expanded sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/expanded-sql/#expandedsql","text":"[jvm]\\ fun expandedSql (statement: Long ): String","title":"expandedSql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/extended-error-code/","text":"// Lib / com.bloomberg.selekt / SQLite / extendedErrorCode extendedErrorCode [jvm]\\ fun extendedErrorCode (db: Long ): Int","title":"Extended error code"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/extended-error-code/#extendederrorcode","text":"[jvm]\\ fun extendedErrorCode (db: Long ): Int","title":"extendedErrorCode"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/extended-result-codes/","text":"// Lib / com.bloomberg.selekt / SQLite / extendedResultCodes extendedResultCodes [jvm]\\ fun extendedResultCodes (db: Long , onOff: Int ): Int","title":"Extended result codes"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/extended-result-codes/#extendedresultcodes","text":"[jvm]\\ fun extendedResultCodes (db: Long , onOff: Int ): Int","title":"extendedResultCodes"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/finalize/","text":"// Lib / com.bloomberg.selekt / SQLite / finalize finalize [jvm]\\ fun finalize (statement: Long ): Int","title":"Finalize"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/finalize/#finalize","text":"[jvm]\\ fun finalize (statement: Long ): Int","title":"finalize"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/get-autocommit/","text":"// Lib / com.bloomberg.selekt / SQLite / getAutocommit getAutocommit [jvm]\\ fun getAutocommit (db: Long ): Int","title":"Get autocommit"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/get-autocommit/#getautocommit","text":"[jvm]\\ fun getAutocommit (db: Long ): Int","title":"getAutocommit"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/hard-heap-limit64/","text":"// Lib / com.bloomberg.selekt / SQLite / hardHeapLimit64 hardHeapLimit64 [jvm]\\ fun hardHeapLimit64 (): Long","title":"Hard heap limit64"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/hard-heap-limit64/#hardheaplimit64","text":"[jvm]\\ fun hardHeapLimit64 (): Long","title":"hardHeapLimit64"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/key-conventionally/","text":"// Lib / com.bloomberg.selekt / SQLite / keyConventionally keyConventionally [jvm]\\ fun keyConventionally (db: Long , key: ByteArray ): Int","title":"Key conventionally"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/key-conventionally/#keyconventionally","text":"[jvm]\\ fun keyConventionally (db: Long , key: ByteArray ): Int","title":"keyConventionally"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/key/","text":"// Lib / com.bloomberg.selekt / SQLite / key key [jvm]\\ fun key (db: Long , key: ByteArray ): Int","title":"Key"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/key/#key","text":"[jvm]\\ fun key (db: Long , key: ByteArray ): Int","title":"key"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/keyword-count/","text":"// Lib / com.bloomberg.selekt / SQLite / keywordCount keywordCount [jvm]\\ fun keywordCount (): Int","title":"Keyword count"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/keyword-count/#keywordcount","text":"[jvm]\\ fun keywordCount (): Int","title":"keywordCount"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/last-insert-row-id/","text":"// Lib / com.bloomberg.selekt / SQLite / lastInsertRowId lastInsertRowId [jvm]\\ fun lastInsertRowId (db: Long ): Long","title":"Last insert row id"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/last-insert-row-id/#lastinsertrowid","text":"[jvm]\\ fun lastInsertRowId (db: Long ): Long","title":"lastInsertRowId"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/memory-used/","text":"// Lib / com.bloomberg.selekt / SQLite / memoryUsed memoryUsed [jvm]\\ fun memoryUsed (): Long","title":"Memory used"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/memory-used/#memoryused","text":"[jvm]\\ fun memoryUsed (): Long","title":"memoryUsed"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/open-v2/","text":"// Lib / com.bloomberg.selekt / SQLite / openV2 openV2 [jvm]\\ fun openV2 (path: String , flags: Int , dbHolder: LongArray ): Int","title":"Open v2"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/open-v2/#openv2","text":"[jvm]\\ fun openV2 (path: String , flags: Int , dbHolder: LongArray ): Int","title":"openV2"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/prepare-v2/","text":"// Lib / com.bloomberg.selekt / SQLite / prepareV2 prepareV2 [jvm]\\ fun prepareV2 (db: Long , sql: String , statementHolder: LongArray ): Int","title":"Prepare v2"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/prepare-v2/#preparev2","text":"[jvm]\\ fun prepareV2 (db: Long , sql: String , statementHolder: LongArray ): Int","title":"prepareV2"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/raw-key/","text":"// Lib / com.bloomberg.selekt / SQLite / rawKey rawKey [jvm]\\ fun rawKey (db: Long , key: ByteArray ): Int","title":"Raw key"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/raw-key/#rawkey","text":"[jvm]\\ fun rawKey (db: Long , key: ByteArray ): Int","title":"rawKey"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/rekey/","text":"// Lib / com.bloomberg.selekt / SQLite / rekey rekey [jvm]\\ fun rekey (db: Long , key: ByteArray ): Int","title":"Rekey"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/rekey/#rekey","text":"[jvm]\\ fun rekey (db: Long , key: ByteArray ): Int","title":"rekey"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/release-memory/","text":"// Lib / com.bloomberg.selekt / SQLite / releaseMemory releaseMemory [jvm]\\ fun releaseMemory (bytes: Int ): Int","title":"Release memory"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/release-memory/#releasememory","text":"[jvm]\\ fun releaseMemory (bytes: Int ): Int","title":"releaseMemory"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/reset/","text":"// Lib / com.bloomberg.selekt / SQLite / reset reset [jvm]\\ fun reset (statement: Long ): Int","title":"Reset"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/reset/#reset","text":"[jvm]\\ fun reset (statement: Long ): Int","title":"reset"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/soft-heap-limit64/","text":"// Lib / com.bloomberg.selekt / SQLite / softHeapLimit64 softHeapLimit64 [jvm]\\ fun softHeapLimit64 (): Long","title":"Soft heap limit64"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/soft-heap-limit64/#softheaplimit64","text":"[jvm]\\ fun softHeapLimit64 (): Long","title":"softHeapLimit64"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/sql/","text":"// Lib / com.bloomberg.selekt / SQLite / sql sql [jvm]\\ fun sql (statement: Long ): String","title":"Sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/sql/#sql","text":"[jvm]\\ fun sql (statement: Long ): String","title":"sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/statement-busy/","text":"// Lib / com.bloomberg.selekt / SQLite / statementBusy statementBusy [jvm]\\ fun statementBusy (statement: Long ): Int","title":"Statement busy"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/statement-busy/#statementbusy","text":"[jvm]\\ fun statementBusy (statement: Long ): Int","title":"statementBusy"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/statement-read-only/","text":"// Lib / com.bloomberg.selekt / SQLite / statementReadOnly statementReadOnly [jvm]\\ fun statementReadOnly (statement: Long ): Int","title":"Statement read only"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/statement-read-only/#statementreadonly","text":"[jvm]\\ fun statementReadOnly (statement: Long ): Int","title":"statementReadOnly"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/statement-status/","text":"// Lib / com.bloomberg.selekt / SQLite / statementStatus statementStatus [jvm]\\ fun statementStatus (statement: Long , options: Int , reset: Boolean ): Int","title":"Statement status"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/statement-status/#statementstatus","text":"[jvm]\\ fun statementStatus (statement: Long , options: Int , reset: Boolean ): Int","title":"statementStatus"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/step-without-throwing/","text":"// Lib / com.bloomberg.selekt / SQLite / stepWithoutThrowing stepWithoutThrowing [jvm]\\ fun stepWithoutThrowing (statement: Long ): Int","title":"Step without throwing"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/step-without-throwing/#stepwithoutthrowing","text":"[jvm]\\ fun stepWithoutThrowing (statement: Long ): Int","title":"stepWithoutThrowing"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/step/","text":"// Lib / com.bloomberg.selekt / SQLite / step step [jvm]\\ fun step (statement: Long ): Int","title":"Step"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/step/#step","text":"[jvm]\\ fun step (statement: Long ): Int","title":"step"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/threadsafe/","text":"// Lib / com.bloomberg.selekt / SQLite / threadsafe threadsafe [jvm]\\ fun threadsafe (): Int","title":"Threadsafe"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/threadsafe/#threadsafe","text":"[jvm]\\ fun threadsafe (): Int","title":"threadsafe"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/throw-s-q-l-exception/","text":"// Lib / com.bloomberg.selekt / SQLite / throwSQLException throwSQLException [jvm]\\ open fun throwSQLException (code: SQLCode , extendedCode: SQLCode , message: String , context: String ? = null): Nothing fun throwSQLException (db: Long , context: String ? = null): Nothing","title":"Throw s q l exception"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/throw-s-q-l-exception/#throwsqlexception","text":"[jvm]\\ open fun throwSQLException (code: SQLCode , extendedCode: SQLCode , message: String , context: String ? = null): Nothing fun throwSQLException (db: Long , context: String ? = null): Nothing","title":"throwSQLException"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/total-changes/","text":"// Lib / com.bloomberg.selekt / SQLite / totalChanges totalChanges [jvm]\\ fun totalChanges (db: Long ): Int","title":"Total changes"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/total-changes/#totalchanges","text":"[jvm]\\ fun totalChanges (db: Long ): Int","title":"totalChanges"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/trace-v2/","text":"// Lib / com.bloomberg.selekt / SQLite / traceV2 traceV2 [jvm]\\ fun traceV2 (db: Long , flag: Int )","title":"Trace v2"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/trace-v2/#tracev2","text":"[jvm]\\ fun traceV2 (db: Long , flag: Int )","title":"traceV2"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/transaction-state/","text":"// Lib / com.bloomberg.selekt / SQLite / transactionState transactionState [jvm]\\ fun transactionState (db: Long ): Int","title":"Transaction state"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/transaction-state/#transactionstate","text":"[jvm]\\ fun transactionState (db: Long ): Int","title":"transactionState"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/value-dup/","text":"// Lib / com.bloomberg.selekt / SQLite / valueDup valueDup [jvm]\\ fun valueDup (value: Long ): Long","title":"Value dup"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/value-dup/#valuedup","text":"[jvm]\\ fun valueDup (value: Long ): Long","title":"valueDup"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/value-free/","text":"// Lib / com.bloomberg.selekt / SQLite / valueFree valueFree [jvm]\\ fun valueFree (value: Long )","title":"Value free"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/value-free/#valuefree","text":"[jvm]\\ fun valueFree (value: Long )","title":"valueFree"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/value-from-bind/","text":"// Lib / com.bloomberg.selekt / SQLite / valueFromBind valueFromBind [jvm]\\ fun valueFromBind (value: Long ): Int","title":"Value from bind"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/value-from-bind/#valuefrombind","text":"[jvm]\\ fun valueFromBind (value: Long ): Int","title":"valueFromBind"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/wal-auto-checkpoint/","text":"// Lib / com.bloomberg.selekt / SQLite / walAutoCheckpoint walAutoCheckpoint [jvm]\\ fun walAutoCheckpoint (db: Long , pages: Int ): Int","title":"Wal auto checkpoint"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/wal-auto-checkpoint/#walautocheckpoint","text":"[jvm]\\ fun walAutoCheckpoint (db: Long , pages: Int ): Int","title":"walAutoCheckpoint"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/wal-checkpoint-v2/","text":"// Lib / com.bloomberg.selekt / SQLite / walCheckpointV2 walCheckpointV2 [jvm]\\ fun walCheckpointV2 (db: Long , name: String ?, mode: Int ): Int","title":"Wal checkpoint v2"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-s-q-lite/wal-checkpoint-v2/#walcheckpointv2","text":"[jvm]\\ fun walCheckpointV2 (db: Long , name: String ?, mode: Int ): Int","title":"walCheckpointV2"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-shared-closeable/","text":"// Lib / com.bloomberg.selekt / SharedCloseable SharedCloseable [jvm]\\ @ThreadSafe() abstract class SharedCloseable : Closeable Functions Name Summary close [jvm] override fun close () isOpen [jvm] fun isOpen (): Boolean Inheritors Name SQLDatabase","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-shared-closeable/#sharedcloseable","text":"[jvm]\\ @ThreadSafe() abstract class SharedCloseable : Closeable","title":"SharedCloseable"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-shared-closeable/#functions","text":"Name Summary close [jvm] override fun close () isOpen [jvm] fun isOpen (): Boolean","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-shared-closeable/#inheritors","text":"Name SQLDatabase","title":"Inheritors"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-shared-closeable/-shared-closeable/","text":"// Lib / com.bloomberg.selekt / SharedCloseable / SharedCloseable SharedCloseable [jvm]\\ fun SharedCloseable ()","title":" shared closeable"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-shared-closeable/-shared-closeable/#sharedcloseable","text":"[jvm]\\ fun SharedCloseable ()","title":"SharedCloseable"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-shared-closeable/close/","text":"// Lib / com.bloomberg.selekt / SharedCloseable / close close [jvm]\\ override fun close ()","title":"Close"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-shared-closeable/close/#close","text":"[jvm]\\ override fun close ()","title":"close"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-shared-closeable/is-open/","text":"// Lib / com.bloomberg.selekt / SharedCloseable / isOpen isOpen [jvm]\\ fun isOpen (): Boolean","title":"Is open"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-shared-closeable/is-open/#isopen","text":"[jvm]\\ fun isOpen (): Boolean","title":"isOpen"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-simple-s-q-l-query/","text":"// Lib / com.bloomberg.selekt / SimpleSQLQuery SimpleSQLQuery [jvm]\\ class SimpleSQLQuery ( sql : String , bindArgs : Array Any ?>) : ISQLQuery Functions Name Summary bindTo [jvm] open override fun bindTo (statement: ISQLProgram ) Properties Name Summary argCount [jvm] open override val argCount : Int sql [jvm] open override val sql : String","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-simple-s-q-l-query/#simplesqlquery","text":"[jvm]\\ class SimpleSQLQuery ( sql : String , bindArgs : Array Any ?>) : ISQLQuery","title":"SimpleSQLQuery"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-simple-s-q-l-query/#functions","text":"Name Summary bindTo [jvm] open override fun bindTo (statement: ISQLProgram )","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-simple-s-q-l-query/#properties","text":"Name Summary argCount [jvm] open override val argCount : Int sql [jvm] open override val sql : String","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-simple-s-q-l-query/-simple-s-q-l-query/","text":"// Lib / com.bloomberg.selekt / SimpleSQLQuery / SimpleSQLQuery SimpleSQLQuery [jvm]\\ fun SimpleSQLQuery (sql: String , bindArgs: Array Any ?> = EMPTY_ARRAY)","title":" simple s q l query"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-simple-s-q-l-query/-simple-s-q-l-query/#simplesqlquery","text":"[jvm]\\ fun SimpleSQLQuery (sql: String , bindArgs: Array Any ?> = EMPTY_ARRAY)","title":"SimpleSQLQuery"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-simple-s-q-l-query/arg-count/","text":"// Lib / com.bloomberg.selekt / SimpleSQLQuery / argCount argCount [jvm]\\ open override val argCount : Int","title":"Arg count"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-simple-s-q-l-query/arg-count/#argcount","text":"[jvm]\\ open override val argCount : Int","title":"argCount"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-simple-s-q-l-query/bind-to/","text":"// Lib / com.bloomberg.selekt / SimpleSQLQuery / bindTo bindTo [jvm]\\ open override fun bindTo (statement: ISQLProgram )","title":"Bind to"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-simple-s-q-l-query/bind-to/#bindto","text":"[jvm]\\ open override fun bindTo (statement: ISQLProgram )","title":"bindTo"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-simple-s-q-l-query/sql/","text":"// Lib / com.bloomberg.selekt / SimpleSQLQuery / sql sql [jvm]\\ open override val sql : String","title":"Sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt/-simple-s-q-l-query/sql/#sql","text":"[jvm]\\ open override val sql : String","title":"sql"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/","text":"// Lib / com.bloomberg.selekt.commons Package com.bloomberg.selekt.commons Types Name Summary LinkedQueue [jvm] @NotThreadSafe() class LinkedQueue < T > ManagedStringBuilder [jvm] @NotThreadSafe() class ManagedStringBuilder ( defaultLength : Int , maxRetainedLength : Int ) Functions Name Summary deleteDatabase [jvm] fun deleteDatabase (file: File ): Boolean emptyIterable [jvm] fun < T > emptyIterable (): Iterable < T > forEachCatching [jvm] inline fun < T > Iterable < T >. forEachCatching (action: ( T ) -> Unit ): Iterable < Throwable > forUntil [jvm] inline fun Int . forUntil (other: Int , block: ( Int ) -> Unit ) loadEmbeddedLibrary [jvm] fun loadEmbeddedLibrary (loader: ClassLoader , parentDirectory: String , name: String ) times [jvm] operator fun < L , R > Array < L >. times (other: Array < R >): Iterable < Pair < L , R >> operator fun < L , R > Array < L >. times (other: Iterable < R >): Iterable < Pair < L , R >> operator fun < L , R > Iterable < L >. times (other: Array < R >): Iterable < Pair < L , R >> operator fun < L , R > Iterable < L >. times (other: Iterable < R >): Iterable < Pair < L , R >>","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/#package-combloombergselektcommons","text":"","title":"Package com.bloomberg.selekt.commons"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/#types","text":"Name Summary LinkedQueue [jvm] @NotThreadSafe() class LinkedQueue < T > ManagedStringBuilder [jvm] @NotThreadSafe() class ManagedStringBuilder ( defaultLength : Int , maxRetainedLength : Int )","title":"Types"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/#functions","text":"Name Summary deleteDatabase [jvm] fun deleteDatabase (file: File ): Boolean emptyIterable [jvm] fun < T > emptyIterable (): Iterable < T > forEachCatching [jvm] inline fun < T > Iterable < T >. forEachCatching (action: ( T ) -> Unit ): Iterable < Throwable > forUntil [jvm] inline fun Int . forUntil (other: Int , block: ( Int ) -> Unit ) loadEmbeddedLibrary [jvm] fun loadEmbeddedLibrary (loader: ClassLoader , parentDirectory: String , name: String ) times [jvm] operator fun < L , R > Array < L >. times (other: Array < R >): Iterable < Pair < L , R >> operator fun < L , R > Array < L >. times (other: Iterable < R >): Iterable < Pair < L , R >> operator fun < L , R > Iterable < L >. times (other: Array < R >): Iterable < Pair < L , R >> operator fun < L , R > Iterable < L >. times (other: Iterable < R >): Iterable < Pair < L , R >>","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/delete-database/","text":"// Lib / com.bloomberg.selekt.commons / deleteDatabase deleteDatabase [jvm]\\ fun deleteDatabase (file: File ): Boolean","title":"Delete database"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/delete-database/#deletedatabase","text":"[jvm]\\ fun deleteDatabase (file: File ): Boolean","title":"deleteDatabase"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/empty-iterable/","text":"// Lib / com.bloomberg.selekt.commons / emptyIterable emptyIterable [jvm]\\ fun < T > emptyIterable (): Iterable < T >","title":"Empty iterable"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/empty-iterable/#emptyiterable","text":"[jvm]\\ fun < T > emptyIterable (): Iterable < T >","title":"emptyIterable"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/for-each-catching/","text":"// Lib / com.bloomberg.selekt.commons / forEachCatching forEachCatching [jvm]\\ inline fun < T > Iterable < T >. forEachCatching (action: ( T ) -> Unit ): Iterable < Throwable >","title":"For each catching"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/for-each-catching/#foreachcatching","text":"[jvm]\\ inline fun < T > Iterable < T >. forEachCatching (action: ( T ) -> Unit ): Iterable < Throwable >","title":"forEachCatching"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/for-until/","text":"// Lib / com.bloomberg.selekt.commons / forUntil forUntil [jvm]\\ inline fun Int . forUntil (other: Int , block: ( Int ) -> Unit )","title":"For until"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/for-until/#foruntil","text":"[jvm]\\ inline fun Int . forUntil (other: Int , block: ( Int ) -> Unit )","title":"forUntil"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/load-embedded-library/","text":"// Lib / com.bloomberg.selekt.commons / loadEmbeddedLibrary loadEmbeddedLibrary [jvm]\\ fun loadEmbeddedLibrary (loader: ClassLoader , parentDirectory: String , name: String )","title":"Load embedded library"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/load-embedded-library/#loadembeddedlibrary","text":"[jvm]\\ fun loadEmbeddedLibrary (loader: ClassLoader , parentDirectory: String , name: String )","title":"loadEmbeddedLibrary"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/times/","text":"// Lib / com.bloomberg.selekt.commons / times times [jvm]\\ operator fun < L , R > Iterable < L >. times (other: Iterable < R >): Iterable < Pair < L , R >> operator fun < L , R > Array < L >. times (other: Array < R >): Iterable < Pair < L , R >> operator fun < L , R > Array < L >. times (other: Iterable < R >): Iterable < Pair < L , R >> operator fun < L , R > Iterable < L >. times (other: Array < R >): Iterable < Pair < L , R >>","title":"Times"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/times/#times","text":"[jvm]\\ operator fun < L , R > Iterable < L >. times (other: Iterable < R >): Iterable < Pair < L , R >> operator fun < L , R > Array < L >. times (other: Array < R >): Iterable < Pair < L , R >> operator fun < L , R > Array < L >. times (other: Iterable < R >): Iterable < Pair < L , R >> operator fun < L , R > Iterable < L >. times (other: Array < R >): Iterable < Pair < L , R >>","title":"times"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-linked-queue/","text":"// Lib / com.bloomberg.selekt.commons / LinkedQueue LinkedQueue [jvm]\\ @NotThreadSafe() class LinkedQueue < T > Functions Name Summary add [jvm] fun add (item: T ) poll [jvm] fun poll (): T ? Properties Name Summary isEmpty [jvm] val isEmpty : Boolean","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-linked-queue/#linkedqueue","text":"[jvm]\\ @NotThreadSafe() class LinkedQueue < T >","title":"LinkedQueue"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-linked-queue/#functions","text":"Name Summary add [jvm] fun add (item: T ) poll [jvm] fun poll (): T ?","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-linked-queue/#properties","text":"Name Summary isEmpty [jvm] val isEmpty : Boolean","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-linked-queue/-linked-queue/","text":"// Lib / com.bloomberg.selekt.commons / LinkedQueue / LinkedQueue LinkedQueue [jvm]\\ fun LinkedQueue ()","title":" linked queue"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-linked-queue/-linked-queue/#linkedqueue","text":"[jvm]\\ fun LinkedQueue ()","title":"LinkedQueue"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-linked-queue/add/","text":"// Lib / com.bloomberg.selekt.commons / LinkedQueue / add add [jvm]\\ fun add (item: T )","title":"Add"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-linked-queue/add/#add","text":"[jvm]\\ fun add (item: T )","title":"add"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-linked-queue/is-empty/","text":"// Lib / com.bloomberg.selekt.commons / LinkedQueue / isEmpty isEmpty [jvm]\\ val isEmpty : Boolean","title":"Is empty"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-linked-queue/is-empty/#isempty","text":"[jvm]\\ val isEmpty : Boolean","title":"isEmpty"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-linked-queue/poll/","text":"// Lib / com.bloomberg.selekt.commons / LinkedQueue / poll poll [jvm]\\ fun poll (): T ?","title":"Poll"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-linked-queue/poll/#poll","text":"[jvm]\\ fun poll (): T ?","title":"poll"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-managed-string-builder/","text":"// Lib / com.bloomberg.selekt.commons / ManagedStringBuilder ManagedStringBuilder [jvm]\\ @NotThreadSafe() class ManagedStringBuilder ( defaultLength : Int , maxRetainedLength : Int ) Functions Name Summary use [jvm] inline fun < T > use (block: StringBuilder .() -> T ): T","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-managed-string-builder/#managedstringbuilder","text":"[jvm]\\ @NotThreadSafe() class ManagedStringBuilder ( defaultLength : Int , maxRetainedLength : Int )","title":"ManagedStringBuilder"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-managed-string-builder/#functions","text":"Name Summary use [jvm] inline fun < T > use (block: StringBuilder .() -> T ): T","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-managed-string-builder/-managed-string-builder/","text":"// Lib / com.bloomberg.selekt.commons / ManagedStringBuilder / ManagedStringBuilder ManagedStringBuilder [jvm]\\ fun ManagedStringBuilder (defaultLength: Int = 128, maxRetainedLength: Int = 512)","title":" managed string builder"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-managed-string-builder/-managed-string-builder/#managedstringbuilder","text":"[jvm]\\ fun ManagedStringBuilder (defaultLength: Int = 128, maxRetainedLength: Int = 512)","title":"ManagedStringBuilder"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-managed-string-builder/use/","text":"// Lib / com.bloomberg.selekt.commons / ManagedStringBuilder / use use [jvm]\\ inline fun < T > use (block: StringBuilder .() -> T ): T","title":"Use"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.commons/-managed-string-builder/use/#use","text":"[jvm]\\ inline fun < T > use (block: StringBuilder .() -> T ): T","title":"use"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/","text":"// Lib / com.bloomberg.selekt.pools Package com.bloomberg.selekt.pools Types Name Summary CommonObjectPool [jvm] @ThreadSafe() class CommonObjectPool < K : Any , T : IPooledObject < K >>( factory : IObjectFactory < T >, executor : ScheduledExecutorService , configuration : PoolConfiguration , otherPool : SingleObjectPool < K , T >) : IObjectPool < K , T > IObjectFactory [jvm] interface IObjectFactory < T : Any > : Closeable IObjectPool [jvm] interface IObjectPool < K : Any , T : Any > : Closeable IPooledObject [jvm] interface IPooledObject < K > PoolConfiguration [jvm] data class PoolConfiguration ( evictionDelayMillis : Long , evictionIntervalMillis : Long , maxTotal : Int ) Priority [jvm] enum Priority : Enum < Priority > SingleObjectPool [jvm] @ThreadSafe() class SingleObjectPool < K : Any , T : IPooledObject < K >>( factory : IObjectFactory < T >, executor : ScheduledExecutorService , evictionDelayMillis : Long , evictionIntervalMillis : Long ) : IObjectPool < K , T >","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/#package-combloombergselektpools","text":"","title":"Package com.bloomberg.selekt.pools"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/#types","text":"Name Summary CommonObjectPool [jvm] @ThreadSafe() class CommonObjectPool < K : Any , T : IPooledObject < K >>( factory : IObjectFactory < T >, executor : ScheduledExecutorService , configuration : PoolConfiguration , otherPool : SingleObjectPool < K , T >) : IObjectPool < K , T > IObjectFactory [jvm] interface IObjectFactory < T : Any > : Closeable IObjectPool [jvm] interface IObjectPool < K : Any , T : Any > : Closeable IPooledObject [jvm] interface IPooledObject < K > PoolConfiguration [jvm] data class PoolConfiguration ( evictionDelayMillis : Long , evictionIntervalMillis : Long , maxTotal : Int ) Priority [jvm] enum Priority : Enum < Priority > SingleObjectPool [jvm] @ThreadSafe() class SingleObjectPool < K : Any , T : IPooledObject < K >>( factory : IObjectFactory < T >, executor : ScheduledExecutorService , evictionDelayMillis : Long , evictionIntervalMillis : Long ) : IObjectPool < K , T >","title":"Types"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-common-object-pool/","text":"// Lib / com.bloomberg.selekt.pools / CommonObjectPool CommonObjectPool [jvm]\\ @ThreadSafe() class CommonObjectPool < K : Any , T : IPooledObject < K >>( factory : IObjectFactory < T >, executor : ScheduledExecutorService , configuration : PoolConfiguration , otherPool : SingleObjectPool < K , T >) : IObjectPool < K , T > Functions Name Summary borrowObject [jvm] open override fun borrowObject (): T open override fun borrowObject (key: K ): T clear [jvm] open override fun clear (priority: Priority ) close [jvm] open override fun close () returnObject [jvm] open override fun returnObject (obj: T )","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-common-object-pool/#commonobjectpool","text":"[jvm]\\ @ThreadSafe() class CommonObjectPool < K : Any , T : IPooledObject < K >>( factory : IObjectFactory < T >, executor : ScheduledExecutorService , configuration : PoolConfiguration , otherPool : SingleObjectPool < K , T >) : IObjectPool < K , T >","title":"CommonObjectPool"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-common-object-pool/#functions","text":"Name Summary borrowObject [jvm] open override fun borrowObject (): T open override fun borrowObject (key: K ): T clear [jvm] open override fun clear (priority: Priority ) close [jvm] open override fun close () returnObject [jvm] open override fun returnObject (obj: T )","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-common-object-pool/-common-object-pool/","text":"// Lib / com.bloomberg.selekt.pools / CommonObjectPool / CommonObjectPool CommonObjectPool [jvm]\\ fun < K : Any , T : IPooledObject < K >> CommonObjectPool (factory: IObjectFactory < T >, executor: ScheduledExecutorService , configuration: PoolConfiguration , otherPool: SingleObjectPool < K , T >)","title":" common object pool"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-common-object-pool/-common-object-pool/#commonobjectpool","text":"[jvm]\\ fun < K : Any , T : IPooledObject < K >> CommonObjectPool (factory: IObjectFactory < T >, executor: ScheduledExecutorService , configuration: PoolConfiguration , otherPool: SingleObjectPool < K , T >)","title":"CommonObjectPool"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-common-object-pool/borrow-object/","text":"// Lib / com.bloomberg.selekt.pools / CommonObjectPool / borrowObject borrowObject [jvm]\\ open override fun borrowObject (): T open override fun borrowObject (key: K ): T","title":"Borrow object"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-common-object-pool/borrow-object/#borrowobject","text":"[jvm]\\ open override fun borrowObject (): T open override fun borrowObject (key: K ): T","title":"borrowObject"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-common-object-pool/clear/","text":"// Lib / com.bloomberg.selekt.pools / CommonObjectPool / clear clear [jvm]\\ open override fun clear (priority: Priority )","title":"Clear"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-common-object-pool/clear/#clear","text":"[jvm]\\ open override fun clear (priority: Priority )","title":"clear"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-common-object-pool/close/","text":"// Lib / com.bloomberg.selekt.pools / CommonObjectPool / close close [jvm]\\ open override fun close ()","title":"Close"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-common-object-pool/close/#close","text":"[jvm]\\ open override fun close ()","title":"close"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-common-object-pool/return-object/","text":"// Lib / com.bloomberg.selekt.pools / CommonObjectPool / returnObject returnObject [jvm]\\ open override fun returnObject (obj: T )","title":"Return object"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-common-object-pool/return-object/#returnobject","text":"[jvm]\\ open override fun returnObject (obj: T )","title":"returnObject"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-factory/","text":"// Lib / com.bloomberg.selekt.pools / IObjectFactory IObjectFactory [jvm]\\ interface IObjectFactory < T : Any > : Closeable Functions Name Summary close [jvm] abstract override fun close () destroyObject [jvm] abstract fun destroyObject (obj: T ) makeObject [jvm] abstract fun makeObject (): T makePrimaryObject [jvm] abstract fun makePrimaryObject (): T","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-factory/#iobjectfactory","text":"[jvm]\\ interface IObjectFactory < T : Any > : Closeable","title":"IObjectFactory"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-factory/#functions","text":"Name Summary close [jvm] abstract override fun close () destroyObject [jvm] abstract fun destroyObject (obj: T ) makeObject [jvm] abstract fun makeObject (): T makePrimaryObject [jvm] abstract fun makePrimaryObject (): T","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-factory/destroy-object/","text":"// Lib / com.bloomberg.selekt.pools / IObjectFactory / destroyObject destroyObject [jvm]\\ abstract fun destroyObject (obj: T )","title":"Destroy object"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-factory/destroy-object/#destroyobject","text":"[jvm]\\ abstract fun destroyObject (obj: T )","title":"destroyObject"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-factory/make-object/","text":"// Lib / com.bloomberg.selekt.pools / IObjectFactory / makeObject makeObject [jvm]\\ abstract fun makeObject (): T","title":"Make object"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-factory/make-object/#makeobject","text":"[jvm]\\ abstract fun makeObject (): T","title":"makeObject"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-factory/make-primary-object/","text":"// Lib / com.bloomberg.selekt.pools / IObjectFactory / makePrimaryObject makePrimaryObject [jvm]\\ abstract fun makePrimaryObject (): T","title":"Make primary object"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-factory/make-primary-object/#makeprimaryobject","text":"[jvm]\\ abstract fun makePrimaryObject (): T","title":"makePrimaryObject"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-pool/","text":"// Lib / com.bloomberg.selekt.pools / IObjectPool IObjectPool [jvm]\\ interface IObjectPool < K : Any , T : Any > : Closeable Functions Name Summary borrowObject [jvm] abstract fun borrowObject (): T abstract fun borrowObject (key: K ): T clear [jvm] abstract fun clear (priority: Priority ) close [jvm] abstract override fun close () returnObject [jvm] abstract fun returnObject (obj: T ) Inheritors Name CommonObjectPool SingleObjectPool","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-pool/#iobjectpool","text":"[jvm]\\ interface IObjectPool < K : Any , T : Any > : Closeable","title":"IObjectPool"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-pool/#functions","text":"Name Summary borrowObject [jvm] abstract fun borrowObject (): T abstract fun borrowObject (key: K ): T clear [jvm] abstract fun clear (priority: Priority ) close [jvm] abstract override fun close () returnObject [jvm] abstract fun returnObject (obj: T )","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-pool/#inheritors","text":"Name CommonObjectPool SingleObjectPool","title":"Inheritors"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-pool/borrow-object/","text":"// Lib / com.bloomberg.selekt.pools / IObjectPool / borrowObject borrowObject [jvm]\\ abstract fun borrowObject (): T abstract fun borrowObject (key: K ): T","title":"Borrow object"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-pool/borrow-object/#borrowobject","text":"[jvm]\\ abstract fun borrowObject (): T abstract fun borrowObject (key: K ): T","title":"borrowObject"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-pool/clear/","text":"// Lib / com.bloomberg.selekt.pools / IObjectPool / clear clear [jvm]\\ abstract fun clear (priority: Priority )","title":"Clear"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-pool/clear/#clear","text":"[jvm]\\ abstract fun clear (priority: Priority )","title":"clear"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-pool/return-object/","text":"// Lib / com.bloomberg.selekt.pools / IObjectPool / returnObject returnObject [jvm]\\ abstract fun returnObject (obj: T )","title":"Return object"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-object-pool/return-object/#returnobject","text":"[jvm]\\ abstract fun returnObject (obj: T )","title":"returnObject"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-pooled-object/","text":"// Lib / com.bloomberg.selekt.pools / IPooledObject IPooledObject [jvm]\\ interface IPooledObject < K > Functions Name Summary matches [jvm] abstract fun matches (key: K ): Boolean releaseMemory [jvm] abstract fun releaseMemory () Properties Name Summary isPrimary [jvm] abstract val isPrimary : Boolean tag [jvm] abstract var tag : Boolean","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-pooled-object/#ipooledobject","text":"[jvm]\\ interface IPooledObject < K >","title":"IPooledObject"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-pooled-object/#functions","text":"Name Summary matches [jvm] abstract fun matches (key: K ): Boolean releaseMemory [jvm] abstract fun releaseMemory ()","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-pooled-object/#properties","text":"Name Summary isPrimary [jvm] abstract val isPrimary : Boolean tag [jvm] abstract var tag : Boolean","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-pooled-object/is-primary/","text":"// Lib / com.bloomberg.selekt.pools / IPooledObject / isPrimary isPrimary [jvm]\\ abstract val isPrimary : Boolean","title":"Is primary"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-pooled-object/is-primary/#isprimary","text":"[jvm]\\ abstract val isPrimary : Boolean","title":"isPrimary"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-pooled-object/matches/","text":"// Lib / com.bloomberg.selekt.pools / IPooledObject / matches matches [jvm]\\ abstract fun matches (key: K ): Boolean","title":"Matches"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-pooled-object/matches/#matches","text":"[jvm]\\ abstract fun matches (key: K ): Boolean","title":"matches"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-pooled-object/release-memory/","text":"// Lib / com.bloomberg.selekt.pools / IPooledObject / releaseMemory releaseMemory [jvm]\\ abstract fun releaseMemory ()","title":"Release memory"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-pooled-object/release-memory/#releasememory","text":"[jvm]\\ abstract fun releaseMemory ()","title":"releaseMemory"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-pooled-object/tag/","text":"// Lib / com.bloomberg.selekt.pools / IPooledObject / tag tag [jvm]\\ abstract var tag : Boolean","title":"Tag"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-i-pooled-object/tag/#tag","text":"[jvm]\\ abstract var tag : Boolean","title":"tag"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-pool-configuration/","text":"// Lib / com.bloomberg.selekt.pools / PoolConfiguration PoolConfiguration [jvm]\\ data class PoolConfiguration ( evictionDelayMillis : Long , evictionIntervalMillis : Long , maxTotal : Int ) Properties Name Summary evictionDelayMillis [jvm] val evictionDelayMillis : Long evictionIntervalMillis [jvm] val evictionIntervalMillis : Long maxTotal [jvm] val maxTotal : Int","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-pool-configuration/#poolconfiguration","text":"[jvm]\\ data class PoolConfiguration ( evictionDelayMillis : Long , evictionIntervalMillis : Long , maxTotal : Int )","title":"PoolConfiguration"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-pool-configuration/#properties","text":"Name Summary evictionDelayMillis [jvm] val evictionDelayMillis : Long evictionIntervalMillis [jvm] val evictionIntervalMillis : Long maxTotal [jvm] val maxTotal : Int","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-pool-configuration/-pool-configuration/","text":"// Lib / com.bloomberg.selekt.pools / PoolConfiguration / PoolConfiguration PoolConfiguration [jvm]\\ fun PoolConfiguration (evictionDelayMillis: Long , evictionIntervalMillis: Long , maxTotal: Int )","title":" pool configuration"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-pool-configuration/-pool-configuration/#poolconfiguration","text":"[jvm]\\ fun PoolConfiguration (evictionDelayMillis: Long , evictionIntervalMillis: Long , maxTotal: Int )","title":"PoolConfiguration"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-pool-configuration/eviction-delay-millis/","text":"// Lib / com.bloomberg.selekt.pools / PoolConfiguration / evictionDelayMillis evictionDelayMillis [jvm]\\ val evictionDelayMillis : Long","title":"Eviction delay millis"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-pool-configuration/eviction-delay-millis/#evictiondelaymillis","text":"[jvm]\\ val evictionDelayMillis : Long","title":"evictionDelayMillis"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-pool-configuration/eviction-interval-millis/","text":"// Lib / com.bloomberg.selekt.pools / PoolConfiguration / evictionIntervalMillis evictionIntervalMillis [jvm]\\ val evictionIntervalMillis : Long","title":"Eviction interval millis"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-pool-configuration/eviction-interval-millis/#evictionintervalmillis","text":"[jvm]\\ val evictionIntervalMillis : Long","title":"evictionIntervalMillis"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-pool-configuration/max-total/","text":"// Lib / com.bloomberg.selekt.pools / PoolConfiguration / maxTotal maxTotal [jvm]\\ val maxTotal : Int","title":"Max total"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-pool-configuration/max-total/#maxtotal","text":"[jvm]\\ val maxTotal : Int","title":"maxTotal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/","text":"// Lib / com.bloomberg.selekt.pools / Priority Priority [jvm]\\ enum Priority : Enum < Priority > Entries HIGH [jvm] HIGH () LOW [jvm] LOW () Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/#priority","text":"[jvm]\\ enum Priority : Enum < Priority >","title":"Priority"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/#entries","text":"HIGH [jvm] HIGH () LOW [jvm] LOW ()","title":"Entries"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-h-i-g-h/","text":"// Lib / com.bloomberg.selekt.pools / Priority / HIGH HIGH [jvm]\\ HIGH () Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-h-i-g-h/#high","text":"[jvm]\\ HIGH ()","title":"HIGH"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-h-i-g-h/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-h-i-g-h/name/","text":"// Lib / com.bloomberg.selekt.pools / Priority / HIGH / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-h-i-g-h/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-h-i-g-h/ordinal/","text":"// Lib / com.bloomberg.selekt.pools / Priority / HIGH / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-h-i-g-h/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-l-o-w/","text":"// Lib / com.bloomberg.selekt.pools / Priority / LOW LOW [jvm]\\ LOW () Properties Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-l-o-w/#low","text":"[jvm]\\ LOW ()","title":"LOW"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-l-o-w/#properties","text":"Name Summary name [jvm] val name : String ordinal [jvm] val ordinal : Int","title":"Properties"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-l-o-w/name/","text":"// Lib / com.bloomberg.selekt.pools / Priority / LOW / name name [jvm]\\ val name : String","title":"Name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-l-o-w/name/#name","text":"[jvm]\\ val name : String","title":"name"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-l-o-w/ordinal/","text":"// Lib / com.bloomberg.selekt.pools / Priority / LOW / ordinal ordinal [jvm]\\ val ordinal : Int","title":"Ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-priority/-l-o-w/ordinal/#ordinal","text":"[jvm]\\ val ordinal : Int","title":"ordinal"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/","text":"// Lib / com.bloomberg.selekt.pools / SingleObjectPool SingleObjectPool [jvm]\\ @ThreadSafe() class SingleObjectPool < K : Any , T : IPooledObject < K >>( factory : IObjectFactory < T >, executor : ScheduledExecutorService , evictionDelayMillis : Long , evictionIntervalMillis : Long ) : IObjectPool < K , T > Functions Name Summary borrowObject [jvm] open override fun borrowObject (): T open override fun borrowObject (key: K ): T borrowObjectOrNull [jvm] fun borrowObjectOrNull (): T ? clear [jvm] open override fun clear (priority: Priority ) close [jvm] open override fun close () returnObject [jvm] open override fun returnObject (obj: T )","title":"Index"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/#singleobjectpool","text":"[jvm]\\ @ThreadSafe() class SingleObjectPool < K : Any , T : IPooledObject < K >>( factory : IObjectFactory < T >, executor : ScheduledExecutorService , evictionDelayMillis : Long , evictionIntervalMillis : Long ) : IObjectPool < K , T >","title":"SingleObjectPool"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/#functions","text":"Name Summary borrowObject [jvm] open override fun borrowObject (): T open override fun borrowObject (key: K ): T borrowObjectOrNull [jvm] fun borrowObjectOrNull (): T ? clear [jvm] open override fun clear (priority: Priority ) close [jvm] open override fun close () returnObject [jvm] open override fun returnObject (obj: T )","title":"Functions"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/-single-object-pool/","text":"// Lib / com.bloomberg.selekt.pools / SingleObjectPool / SingleObjectPool SingleObjectPool [jvm]\\ fun < T : IPooledObject < K >> SingleObjectPool (factory: IObjectFactory < T >, executor: ScheduledExecutorService , evictionDelayMillis: Long , evictionIntervalMillis: Long )","title":" single object pool"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/-single-object-pool/#singleobjectpool","text":"[jvm]\\ fun < T : IPooledObject < K >> SingleObjectPool (factory: IObjectFactory < T >, executor: ScheduledExecutorService , evictionDelayMillis: Long , evictionIntervalMillis: Long )","title":"SingleObjectPool"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/borrow-object-or-null/","text":"// Lib / com.bloomberg.selekt.pools / SingleObjectPool / borrowObjectOrNull borrowObjectOrNull [jvm]\\ fun borrowObjectOrNull (): T ?","title":"Borrow object or null"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/borrow-object-or-null/#borrowobjectornull","text":"[jvm]\\ fun borrowObjectOrNull (): T ?","title":"borrowObjectOrNull"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/borrow-object/","text":"// Lib / com.bloomberg.selekt.pools / SingleObjectPool / borrowObject borrowObject [jvm]\\ open override fun borrowObject (): T open override fun borrowObject (key: K ): T","title":"Borrow object"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/borrow-object/#borrowobject","text":"[jvm]\\ open override fun borrowObject (): T open override fun borrowObject (key: K ): T","title":"borrowObject"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/clear/","text":"// Lib / com.bloomberg.selekt.pools / SingleObjectPool / clear clear [jvm]\\ open override fun clear (priority: Priority )","title":"Clear"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/clear/#clear","text":"[jvm]\\ open override fun clear (priority: Priority )","title":"clear"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/close/","text":"// Lib / com.bloomberg.selekt.pools / SingleObjectPool / close close [jvm]\\ open override fun close ()","title":"Close"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/close/#close","text":"[jvm]\\ open override fun close ()","title":"close"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/return-object/","text":"// Lib / com.bloomberg.selekt.pools / SingleObjectPool / returnObject returnObject [jvm]\\ open override fun returnObject (obj: T )","title":"Return object"},{"location":"kdoc/Lib/-lib/com.bloomberg.selekt.pools/-single-object-pool/return-object/#returnobject","text":"[jvm]\\ open override fun returnObject (obj: T )","title":"returnObject"}]}