name: 'Publication'

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  publish:
    name: 'Publish'
    runs-on: ubuntu-latest
    steps:
    - name: 'Install system packages'
      run: sudo apt-get install -y --no-install-recommends clang gcc make sed tcl
    - name: 'Install Build Tools'
      run: echo 'y' | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install 'build-tools;30.0.3'
    - name: 'Install CMake'
      run: echo 'y' | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install 'cmake;3.18.1'
    - name: 'Install NDK'
      run: echo 'y' | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install 'ndk;21.4.7075529'
    - name: 'Install Android SDK'
      run: echo 'y' | sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install 'platforms;android-30'
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: 'Configure local.properties'
      run: |
        echo "sdk.dir=${ANDROID_HOME}" > local.properties
        echo "ndk.dir=${ANDROID_HOME}/ndk/21.4.7075529" >> local.properties
        echo "cmake.dir=${ANDROID_HOME}/cmake/3.18.1" >> local.properties
    - name: 'Unit tests'
      run: ./gradlew :AndroidLib:testDebugUnitTest :Lib:test
    - name: 'Build Selekt'
      run: |
        export ANDROID_NDK_HOME="${ANDROID_HOME}/ndk/21.4.7075529"
        ./gradlew clean
        ./gradlew :OpenSSL:assembleArm64-v8a
        ./gradlew :OpenSSL:assembleArmeabi-v7a
        ./gradlew :OpenSSL:assembleX86
        ./gradlew :OpenSSL:assembleX86_64
        ./gradlew :SQLite3:amalgamate
        ./gradlew assembleSelekt
    - name: 'Publish snapshot to OSSRH'
      if: github.event_name == 'push'
      env:
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
        ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEY_ID }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSPHRASE }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_PASSWORD }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USERNAME }}
      run: |
        ./gradlew \
          -Prelease=false \
          publishToSonatype \
          closeSonatypeStagingRepository
    - name: 'Publish release to OSSRH'
      if: github.event_name == 'release' && github.event.action == 'published'
      env:
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
        ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEY_ID }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSPHRASE }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_PASSWORD }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USERNAME }}
      run: |
        ./gradlew \
          -Prelease=true \
          publishToSonatype \
          closeAndReleaseSonatypeStagingRepository
