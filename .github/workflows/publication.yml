name: 'Publication'

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  build-native-jars:
    name: 'Build Native JARs'
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    steps:
      - name: 'Install system packages'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends clang curl gcc make sed tar tcl

      - name: 'Install Zig'
        uses: mlugg/setup-zig@v2
        with:
          version: 0.13.0

      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          submodules: recursive

      - name: 'Setup Java'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: 'Configure Gradle'
        run: |
          echo 'org.gradle.caching=false' >> gradle.properties
          echo 'org.gradle.configuration-cache=false' >> gradle.properties

      - name: 'Build'
        env:
          CC: zig cc
          CXX: zig c++
          CFLAGS: -target x86_64-linux-musl -O2 -s
          CXXFLAGS: -target x86_64-linux-musl -O2 -s
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            ./gradlew :selekt-sqlite3-native:jar
          elif [[ "${{ github.event_name }}" == "release" ]]; then
            ./gradlew -Prelease \
              :selekt-sqlite3-native:jar
          fi

      - name: 'Upload native JAR'
        uses: actions/upload-artifact@v4
        with:
          name: selekt-native-${{ runner.os }}
          path: selekt-sqlite3-native/build/libs/*.jar

  publish-native:
    name: Publish to OSSRH
    runs-on: ubuntu-latest
    needs: build-native-jars
    timeout-minutes: 120

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          submodules: recursive

      - name: 'Setup Java'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: 'Configure Gradle'
        run: |
          echo 'org.gradle.caching=false' >> gradle.properties
          echo 'org.gradle.configuration-cache=false' >> gradle.properties

      - name: 'Download native JARs'
        uses: actions/download-artifact@v4
        with:
          path: selekt-sqlite3-native/build/artifacts

      - name: 'Move native JARs into build/libs flat'
        run: |
          mkdir -p selekt-sqlite3-native/build/libs
          find selekt-sqlite3-native/build/artifacts -name '*.jar' -exec mv {} selekt-sqlite3-native/build/libs \;
          rm -r selekt-sqlite3-native/build/artifacts
          ls -la selekt-sqlite3-native/build/libs

      - name: 'Publish to OSSRH'
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSPHRASE }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_USER_TOKEN_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USER_TOKEN_USERNAME }}
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            ./gradlew \
              :selekt-sqlite3-native:publishNativePublicationToSonatypeRepository \
              closeSonatypeStagingRepository
          elif [[ "${{ github.event_name }}" == "release" ]]; then
            ./gradlew \
              -Prelease \
              :selekt-sqlite3-native:publishNativePublicationToSonatypeRepository \
              closeAndReleaseSonatypeStagingRepository
          fi

  publish:
    name: 'Publish'
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: 'Install system packages'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends clang gcc make sed tcl

      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          submodules: recursive

      - name: 'Setup Java'
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: 'Configure Gradle'
        run: |
          echo 'org.gradle.caching=false' >> gradle.properties
          echo 'org.gradle.configuration-cache=false' >> gradle.properties

      - name: 'Unit tests'
        run: ./gradlew :selekt-android:testDebugUnitTest :selekt-java:test

      - name: 'Build Selekt'
        run: |
          ./gradlew clean \
            :OpenSSL:assembleArm64-v8a \
            :OpenSSL:assembleArmeabi-v7a \
            :OpenSSL:assembleX86 \
            :OpenSSL:assembleX86_64
          ./gradlew :SQLite3:amalgamate
          ./gradlew assembleRelease

      - name: 'Publish snapshot to OSSRH'
        if: github.event_name == 'push'
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSPHRASE }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_USER_TOKEN_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USER_TOKEN_USERNAME }}
        run: |
          ./gradlew \
            publishMainPublicationToSonatypeRepository \
            closeSonatypeStagingRepository

      - name: 'Publish release to OSSRH'
        if: github.event_name == 'release' && github.event.action == 'published'
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSPHRASE }}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_USER_TOKEN_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USER_TOKEN_USERNAME }}
        run: |
          ./gradlew \
            -Prelease \
            publishMainPublicationToSonatypeRepository \
            closeAndReleaseSonatypeStagingRepository
