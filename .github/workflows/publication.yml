name: 'Publication'

on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  native:
    name: 'Native Publication'
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120

    steps:
    - name: 'Install system packages'
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends clang curl gcc make sed tar tcl

    - name: 'Install Zig'
      uses: mlugg/setup-zig@v2
      with:
        version: 0.13.0

    - name: 'Checkout'
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
        submodules: recursive

    - name: 'Setup Java'
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    - name: 'Configure Gradle'
      run: |
        echo 'org.gradle.caching=false' >> gradle.properties
        echo 'org.gradle.configuration-cache=false' >> gradle.properties

    - name: 'Publish snapshot to OSSRH'
      if: github.event_name == 'push'
      env:
        CC: zig cc -target x86_64-linux-musl
        CXX: zig c++ -target x86_64-linux-musl
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
        ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEY_ID }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSPHRASE }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_USER_TOKEN_PASSWORD }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USER_TOKEN_USERNAME }}
      run: |
        ./gradlew \
          :selekt-sqlite3-native:publishLinuxAmd64PublicationToSonatypeRepository \
          :selekt-sqlite3-native:closeSonatypeStagingRepository

  publish:
    name: 'Publish'
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
    - name: 'Install system packages'
      run: sudo apt-get install -y --no-install-recommends clang gcc make sed tcl
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17
    - name: 'Gradle'
      run: |
        echo 'org.gradle.caching=false' >> gradle.properties
        echo 'org.gradle.configuration-cache=false' >> gradle.properties
    - name: 'Unit tests'
      run: ./gradlew :selekt-android:testDebugUnitTest :selekt-java:test
    - name: 'Build Selekt'
      run: |
        ./gradlew clean \
          :OpenSSL:assembleArm64-v8a \
          :OpenSSL:assembleArmeabi-v7a \
          :OpenSSL:assembleX86 \
          :OpenSSL:assembleX86_64
        ./gradlew :SQLite3:amalgamate
        ./gradlew assembleRelease
    - name: 'Publish snapshot to OSSRH'
      if: github.event_name == 'push'
      env:
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
        ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEY_ID }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSPHRASE }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_USER_TOKEN_PASSWORD }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USER_TOKEN_USERNAME }}
      run: |
        ./gradlew \
          publishMainPublicationToSonatypeRepository \
          closeSonatypeStagingRepository
    - name: 'Publish release to OSSRH'
      if: github.event_name == 'release' && github.event.action == 'published'
      env:
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_KEY }}
        ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.GPG_KEY_ID }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSPHRASE }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_USER_TOKEN_PASSWORD }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USER_TOKEN_USERNAME }}
      run: |
        ./gradlew \
          -Prelease \
          publishMainPublicationToSonatypeRepository \
          closeAndReleaseSonatypeStagingRepository
