name: 'Continuous Integration'

on: [pull_request, push]

jobs:
  ci-pipeline:
    name: 'Continuous Integration'
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: 'Set environment'
      run: |
        if [[ ${GITHUB_REF} == 'refs/heads/main' ]]; then
          echo 'SCAN=--scan' >> ${GITHUB_ENV}
        fi
    - name: 'Install system packages'
      run: sudo apt-get install -y --no-install-recommends clang gcc make sed tcl
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2
        submodules: true
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
    - name: 'Build cache'
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/OpenSSL/build
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: 'ccache'
      uses: hendrikmuhs/ccache-action@v1
    - name: 'Gradle configuration'
      run: |
        echo 'org.gradle.caching=true' >> gradle.properties
        echo 'plugins {' >> settings.gradle.kts
        echo '    id("com.gradle.enterprise").version("3.6.3")' >> settings.gradle.kts
        echo '}' >> settings.gradle.kts
        echo 'gradleEnterprise {' >> settings.gradle.kts
        echo '    buildScan {' >> settings.gradle.kts
        echo '        termsOfServiceUrl = "https://gradle.com/terms-of-service"' >> settings.gradle.kts
        echo '        termsOfServiceAgree = "yes"' >> settings.gradle.kts
        echo '    }' >> settings.gradle.kts
        echo '}' >> settings.gradle.kts
    - name: 'Licenses'
      run: ./gradlew licensee
    - name: 'Analyse'
      run: ./gradlew detekt ktlintCheck lintDebug ${{ env.SCAN }}
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: 'Analyses'
        path: |
          **/build/reports/detekt
    - name: 'Unit tests'
      run: ./gradlew :AndroidLib:testDebugUnitTest :Lib:test ${{ env.SCAN }}
    - name: 'Coverage'
      run: |
        ./gradlew :jacocoSelektTestReport ${{ env.SCAN }}
        bash scripts/codecov
        ./gradlew :koverMergedHtmlReport ${{ env.SCAN }}
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: 'Unit test reports'
        path: |
          build/reports/jacoco/jacocoSelektTestReport
          build/reports/kover/html
          AndroidLib/build/reports/tests/testDebugUnitTest
          Lib/build/reports/tests/test
    - name: 'Build Selekt'
      run: |
        ./gradlew assembleSelekt ${{ env.SCAN }}
    - name: 'Verify coverage'
      run:
        ./gradlew :jacocoSelektCoverageVerification :koverMergedVerify
    - name: 'Build others'
      run: |
        ./gradlew assembleAndroidTest :AndroidCLI:assembleDebug :AndroidLint:assemble jmhClasses
    - name: 'Tear down'
      if: always()
      run: |
        ./gradlew --stop
